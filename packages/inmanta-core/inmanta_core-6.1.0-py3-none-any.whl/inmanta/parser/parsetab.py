
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right,nonassoc:nonassoc?leftORleftANDleftCMP_OPnonassocNOTleftINleftRELATION_DEFTYPEDEF_INNEROPERAND_LISTEMPTYNS_REFVAR_REFMAP_LOOKUPleftCIDIDleft([leftMLSAND AS CID CMP_OP DEFINED DICT ELIF ELSE END ENTITY EXTENDS FALSE FLOAT FOR ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS NOT NULL OR PARENTS PEQ REGEX REL RSTRING SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : head bodyhead : %prec EMPTYhead : MLSbody : top_stmt bodybody : emptytop_stmt : entity_def\n    | implement_def\n    | implementation_def\n    | relation\n    | statement\n    | typedef\n    | index\n    | importempty : %prec EMPTYimport : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n    | for\n    | if\n    | expressionstmt_list : statement stmt_liststmt_list : emptyassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF if_body ENDif_body : expression \':\' stmt_list if_nextif_next : emptyif_next : ELSE \':\' stmt_listif_next : ELIF if_bodyentity_def : ENTITY CID \':\' entity_body_outerentity_def : ENTITY ID \':\' entity_body_outerentity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outerentity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outerentity_body_outer : MLS entity_body ENDentity_body_outer : entity_body ENDentity_body_outer : ENDentity_body_outer : MLS ENDentity_body : entity_body attrentity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n    | attr_base_type \'?\'attr_type : attr_type_opt\n    | attr_type_multi\n    | attr_base_typeattr : attr_type IDattr : attr_type ID \'=\' constant\n    | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_ns_list : ns_refimplement_ns_list : PARENTSimplement_ns_list : implement_ns_list \',\' implement_ns_listimplement_def : IMPLEMENT class_ref USING implement_ns_list empty\n    | IMPLEMENT class_ref USING implement_ns_list MLSimplement_def : IMPLEMENT class_ref USING implement_ns_list WHEN expression empty\n    | IMPLEMENT class_ref USING implement_ns_list WHEN expression MLSimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : implementation_head blockimplementation_head : \':\'implementation_head : \':\' MLSblock : stmt_list ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID MLSrelation : relation_def MLSrelation : relation_def %prec RELATION_DEFrelation_def : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi REL class_refrelation_def : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelation_def : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\'multi : \'[\' INT \':\' \']\'multi : \'[\' INT \':\' INT \']\'multi : \'[\'  \':\' INT \']\'typedef : typedef_inner %prec TYPEDEF_INNERtypedef : typedef_inner MLStypedef_inner : TYPEDEF ID AS ns_ref MATCHING expressiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\'expression : boolean_expression\n    | constant\n    | function_call\n    | var_ref %prec VAR_REF\n    | constructor\n    | list_def\n    | map_def\n    | map_lookup %prec MAP_LOOKUP\n    | index_lookup\n    | conditional_expressionexpression : \'(\' expression \')\'boolean_expression : expression CMP_OP expression\n    | expression IN expression\n    | expression AND expression\n    | expression OR expressionboolean_expression : NOT expressionboolean_expression : var_ref \'.\' ID IS DEFINEDboolean_expression : ID IS DEFINEDoperand : expressionmap_lookup : attr_ref \'[\' operand \']\'\n    | var_ref \'[\' operand \']\'\n    | map_lookup \'[\' operand \']\'constructor : class_ref \'(\' param_list \')\'function_call : ns_ref \'(\' function_param_list \')\'function_call : attr_ref \'(\' function_param_list \')\'list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_list\n    | STRING \':\' operand empty pair_list_emptypair_list : pair_list_empty\n    pair_list_empty : emptymap_def : \'{\' pair_list \'}\'index_lookup : class_ref \'[\' param_list \']\'index_lookup : attr_ref \'[\' param_list \']\'conditional_expression : expression \'?\' expression \':\' expressionconstant : INT\n    | FLOAT\n    constant : NULLconstant : REGEXconstant : TRUEconstant : FALSEconstant : STRINGconstant : RSTRINGconstant : MLSconstant_list : \'[\' constants \']\'constants : constantconstants :constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n    param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n    | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n    function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n    | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list : %prec OPERAND_LISTvar_ref : attr_ref %prec VAR_REFattr_ref : var_ref \'.\' IDvar_ref : ns_ref %prec NS_REFclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref : var_ref \'.\' CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : ID'
    
_lr_action_items = {'ENTITY':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,100,103,112,126,127,128,129,134,139,140,148,149,150,151,153,161,163,165,168,180,182,183,184,190,195,201,202,206,212,214,216,217,218,222,223,235,236,240,249,250,254,258,267,272,275,276,277,280,281,282,283,284,287,291,301,302,303,304,307,313,318,319,],[-2,15,-3,15,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-161,-72,-83,-90,-161,-152,-150,-15,-102,-105,-104,-98,-99,-100,-101,-97,-154,-160,-155,-151,-23,-24,-26,-112,-117,-31,-37,-32,-14,-58,-59,-109,-118,-16,-110,-107,-108,-85,-111,-106,-119,-38,-36,-61,-62,-78,-120,-65,-86,-103,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-25,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'IMPLEMENT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,100,103,112,126,127,128,129,134,139,140,148,149,150,151,153,161,163,165,168,180,182,183,184,190,195,201,202,206,212,214,216,217,218,222,223,235,236,240,249,250,254,258,267,272,275,276,277,280,281,282,283,284,287,291,301,302,303,304,307,313,318,319,],[-2,18,-3,18,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-161,-72,-83,-90,-161,-152,-150,-15,-102,-105,-104,-98,-99,-100,-101,-97,-154,-160,-155,-151,-23,-24,-26,-112,-117,-31,-37,-32,-14,-58,-59,-109,-118,-16,-110,-107,-108,-85,-111,-106,-119,-38,-36,-61,-62,-78,-120,-65,-86,-103,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-25,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'IMPLEMENTATION':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,100,103,112,126,127,128,129,134,139,140,148,149,150,151,153,161,163,165,168,180,182,183,184,190,195,201,202,206,212,214,216,217,218,222,223,235,236,240,249,250,254,258,267,272,275,276,277,280,281,282,283,284,287,291,301,302,303,304,307,313,318,319,],[-2,22,-3,22,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-161,-72,-83,-90,-161,-152,-150,-15,-102,-105,-104,-98,-99,-100,-101,-97,-154,-160,-155,-151,-23,-24,-26,-112,-117,-31,-37,-32,-14,-58,-59,-109,-118,-16,-110,-107,-108,-85,-111,-106,-119,-38,-36,-61,-62,-78,-120,-65,-86,-103,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-25,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'INDEX':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,100,103,112,126,127,128,129,134,139,140,148,149,150,151,153,161,163,165,168,180,182,183,184,190,195,201,202,206,212,214,216,217,218,222,223,235,236,240,249,250,254,258,267,272,275,276,277,280,281,282,283,284,287,291,301,302,303,304,307,313,318,319,],[-2,29,-3,29,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-161,-72,-83,-90,-161,-152,-150,-15,-102,-105,-104,-98,-99,-100,-101,-97,-154,-160,-155,-151,-23,-24,-26,-112,-117,-31,-37,-32,-14,-58,-59,-109,-118,-16,-110,-107,-108,-85,-111,-106,-119,-38,-36,-61,-62,-78,-120,-65,-86,-103,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-25,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'IMPORT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,100,103,112,126,127,128,129,134,139,140,148,149,150,151,153,161,163,165,168,180,182,183,184,190,195,201,202,206,212,214,216,217,218,222,223,235,236,240,249,250,254,258,267,272,275,276,277,280,281,282,283,284,287,291,301,302,303,304,307,313,318,319,],[-2,31,-3,31,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-161,-72,-83,-90,-161,-152,-150,-15,-102,-105,-104,-98,-99,-100,-101,-97,-154,-160,-155,-151,-23,-24,-26,-112,-117,-31,-37,-32,-14,-58,-59,-109,-118,-16,-110,-107,-108,-85,-111,-106,-119,-38,-36,-61,-62,-78,-120,-65,-86,-103,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-25,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'CID':([0,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,20,21,24,25,26,27,28,29,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,87,88,89,90,91,92,95,98,99,100,102,103,109,111,112,114,126,127,128,129,131,132,134,135,136,139,140,148,149,150,151,153,154,157,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,219,222,223,232,233,235,236,237,239,240,243,244,249,250,251,252,253,254,258,262,264,267,272,275,276,277,280,281,282,283,284,286,287,289,291,301,302,303,304,307,313,318,319,],[-2,16,-3,16,-6,-7,-8,-9,-10,-11,-12,-13,58,-153,-161,16,-129,-20,-73,-17,-18,-19,-82,16,16,-152,-90,16,-87,-88,-89,-91,-92,-93,-94,-95,-96,97,-150,16,-121,-122,-123,-124,-125,-126,-127,-128,16,-161,16,16,16,16,16,-72,-83,-90,-161,-152,-150,-15,139,16,148,16,16,16,16,16,16,-102,-148,-105,16,16,-104,148,-98,-99,-100,-101,16,16,-97,148,139,-154,-160,-155,-151,-23,-24,-26,16,16,-112,16,-117,16,-31,-37,-32,-14,-58,-59,16,-109,16,16,-118,16,-16,-110,16,-107,16,-90,-152,-108,-85,-111,-106,-119,-147,-38,-36,16,16,-61,-62,16,16,-78,16,16,-120,-65,16,-67,16,-86,-103,16,16,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,16,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'FOR':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,75,77,78,81,82,83,84,86,100,103,112,126,127,128,129,134,139,140,148,149,150,151,153,154,161,163,165,168,180,182,183,184,190,195,201,202,206,208,210,211,212,214,216,217,218,222,223,235,236,240,249,250,251,252,253,254,258,267,272,275,276,277,280,281,282,283,284,286,287,289,291,301,302,303,304,307,313,318,319,],[-2,23,-3,23,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-161,131,-72,-83,-90,-161,-152,-150,-15,-102,-105,-104,-98,-99,-100,-101,-97,-154,-160,-155,-151,-23,-24,-26,23,-112,-117,-31,-37,-32,-14,-58,-59,-109,-118,-16,-110,-107,23,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,-78,-120,-65,23,-67,23,-86,-103,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,23,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'IF':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,100,103,112,126,127,128,129,134,139,140,148,149,150,151,153,154,161,163,165,168,180,182,183,184,190,195,201,202,206,208,210,211,212,214,216,217,218,222,223,235,236,240,249,250,251,252,253,254,258,267,272,275,276,277,280,281,282,283,284,286,287,289,291,301,302,303,304,307,313,318,319,],[-2,34,-3,34,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-161,-72,-83,-90,-161,-152,-150,-15,-102,-105,-104,-98,-99,-100,-101,-97,-154,-160,-155,-151,-23,-24,-26,34,-112,-117,-31,-37,-32,-14,-58,-59,-109,-118,-16,-110,-107,34,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,-78,-120,-65,34,-67,34,-86,-103,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,34,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'(':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,19,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,79,81,82,83,84,85,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,147,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,215,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,272,275,276,277,280,281,282,283,284,286,287,289,291,301,302,303,304,307,313,318,319,],[-2,30,-3,30,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,68,-129,-20,-73,-17,-18,-19,-82,30,88,-90,30,-87,-88,-89,-91,-92,-93,-94,-95,-96,98,30,-121,-122,-123,-124,-125,-126,-127,-128,30,-161,30,30,30,30,30,-72,-83,133,-90,-161,88,98,68,-15,30,30,30,30,30,30,30,-102,-105,-104,-98,-99,-100,-101,30,-97,-154,-160,-161,-155,-151,-23,-24,-26,30,-112,30,-117,30,-31,-37,-32,-14,-58,-59,30,-109,30,30,-118,30,-16,-110,30,-107,30,-90,88,-108,-85,68,-111,-106,-119,-38,-36,-61,-62,30,-78,-120,-65,30,-67,30,-86,-103,30,30,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,30,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'TYPEDEF':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,77,78,81,82,83,84,86,100,103,112,126,127,128,129,134,139,140,148,149,150,151,153,161,163,165,168,180,182,183,184,190,195,201,202,206,212,214,216,217,218,222,223,235,236,240,249,250,254,258,267,272,275,276,277,280,281,282,283,284,287,291,301,302,303,304,307,313,318,319,],[-2,44,-3,44,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-161,-72,-83,-90,-161,-152,-150,-15,-102,-105,-104,-98,-99,-100,-101,-97,-154,-160,-155,-151,-23,-24,-26,-112,-117,-31,-37,-32,-14,-58,-59,-109,-118,-16,-110,-107,-108,-85,-111,-106,-119,-38,-36,-61,-62,-78,-120,-65,-86,-103,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-25,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'ID':([0,2,3,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,64,67,68,69,70,71,72,73,74,77,78,81,82,83,84,86,87,88,89,90,91,92,95,98,99,100,102,103,108,109,110,111,112,113,114,126,127,128,129,131,132,133,134,135,136,137,138,139,140,148,149,150,151,153,154,156,157,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,180,182,183,184,189,190,192,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,219,221,222,223,224,225,226,227,228,229,231,232,233,234,235,236,237,238,239,240,243,244,249,250,251,252,253,254,255,258,262,264,267,270,271,272,275,276,277,278,280,281,282,283,284,286,287,289,291,294,295,296,298,299,301,302,303,304,305,306,307,311,312,313,316,318,319,],[-2,17,-3,17,-6,-7,-8,-9,-10,-11,-12,-13,59,-153,-161,64,66,-129,-20,75,76,-73,-17,-18,-19,-82,64,82,64,-152,-90,82,-87,-88,-89,-91,-92,-93,-94,-95,-96,96,-150,82,-121,-122,-123,-124,-125,-126,-127,-128,82,-161,117,122,122,82,82,82,82,82,-72,-83,-90,-161,-152,-150,-15,140,147,149,82,82,82,82,147,147,-102,-148,-105,64,64,64,64,-104,64,185,-98,-99,-100,-101,64,82,200,-97,149,140,201,140,-154,-160,-155,-151,-23,-24,-26,82,64,64,-112,82,-117,82,-31,64,64,-37,-40,225,226,-45,-46,-47,-41,-32,-14,-58,-59,82,-109,122,82,82,-118,82,-16,-110,147,-107,82,-90,-152,-108,-85,-111,-106,-119,-147,64,-38,-36,-39,-48,-52,270,-43,-44,64,64,64,64,-61,-62,82,64,64,-78,64,64,-120,-65,82,-67,82,-86,200,-103,82,82,-35,-55,-42,-33,-34,-14,-60,303,-79,-81,-75,-77,-66,-68,-25,82,-84,-49,-50,-51,-53,-54,-63,-64,-70,-80,314,315,-69,-56,-57,-71,-130,-74,-76,]),'NOT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,272,275,276,277,280,281,282,283,284,286,287,289,291,301,302,303,304,307,313,318,319,],[-2,46,-3,46,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,46,-152,-90,46,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,46,-121,-122,-123,-124,-125,-126,-127,-128,46,-161,46,46,46,46,46,-72,-83,-90,-161,-152,-150,-15,46,46,46,46,46,46,46,-102,-105,-104,-98,-99,-100,-101,46,-97,-154,-160,-155,-151,-23,-24,-26,46,-112,46,-117,46,-31,-37,-32,-14,-58,-59,46,-109,46,46,-118,46,-16,-110,46,-107,46,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,46,-78,-120,-65,46,-67,46,-86,-103,46,46,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,46,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'INT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,116,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,188,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,241,249,250,251,252,253,254,258,262,264,267,268,272,275,276,277,280,281,282,283,284,286,287,289,291,297,301,302,303,304,307,313,317,318,319,],[-2,47,-3,47,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,47,-152,-90,47,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,47,-121,-122,-123,-124,-125,-126,-127,-128,47,-161,47,47,47,47,47,-72,-83,-90,-161,-152,-150,-15,47,47,47,47,47,47,47,-102,-105,-104,187,-98,-99,-100,-101,47,-97,-154,-160,-155,-151,-23,-24,-26,47,-112,47,-117,47,-31,-37,-32,-14,-58,-59,242,47,-109,47,47,-118,47,-16,-110,47,-107,47,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,47,-78,279,-120,-65,47,-67,47,-86,-103,47,47,-35,47,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,47,-84,47,-63,-64,-70,-80,-69,-71,47,-74,-76,]),'FLOAT':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,268,272,275,276,277,280,281,282,283,284,286,287,289,291,297,301,302,303,304,307,313,317,318,319,],[-2,48,-3,48,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,48,-152,-90,48,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,48,-121,-122,-123,-124,-125,-126,-127,-128,48,-161,48,48,48,48,48,-72,-83,-90,-161,-152,-150,-15,48,48,48,48,48,48,48,-102,-105,-104,-98,-99,-100,-101,48,-97,-154,-160,-155,-151,-23,-24,-26,48,-112,48,-117,48,-31,-37,-32,-14,-58,-59,48,-109,48,48,-118,48,-16,-110,48,-107,48,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,48,-78,-120,-65,48,-67,48,-86,-103,48,48,-35,48,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,48,-84,48,-63,-64,-70,-80,-69,-71,48,-74,-76,]),'NULL':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,268,269,272,275,276,277,280,281,282,283,284,286,287,289,291,297,300,301,302,303,304,307,313,317,318,319,],[-2,49,-3,49,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,49,-152,-90,49,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,49,-121,-122,-123,-124,-125,-126,-127,-128,49,-161,49,49,49,49,49,-72,-83,-90,-161,-152,-150,-15,49,49,49,49,49,49,49,-102,-105,-104,-98,-99,-100,-101,49,-97,-154,-160,-155,-151,-23,-24,-26,49,-112,49,-117,49,-31,-37,-32,-14,-58,-59,49,-109,49,49,-118,49,-16,-110,49,-107,49,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,49,-78,-120,-65,49,-67,49,-86,-103,49,49,-35,49,299,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,49,-84,49,312,-63,-64,-70,-80,-69,-71,49,-74,-76,]),'REGEX':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,268,272,275,276,277,280,281,282,283,284,286,287,289,291,297,301,302,303,304,307,313,317,318,319,],[-2,50,-3,50,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,50,-152,-90,50,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,50,-121,-122,-123,-124,-125,-126,-127,-128,50,-161,50,50,50,50,50,-72,-83,-90,-161,-152,-150,-15,50,50,50,50,50,50,50,-102,-105,-104,-98,-99,-100,-101,50,-97,-154,-160,-155,-151,-23,-24,-26,50,-112,50,-117,50,-31,-37,-32,-14,-58,-59,50,-109,50,50,-118,50,-16,-110,50,-107,50,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,50,-78,-120,-65,50,-67,50,-86,-103,50,50,-35,50,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,50,-84,50,-63,-64,-70,-80,-69,-71,50,-74,-76,]),'TRUE':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,268,272,275,276,277,280,281,282,283,284,286,287,289,291,297,301,302,303,304,307,313,317,318,319,],[-2,51,-3,51,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,51,-152,-90,51,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,51,-121,-122,-123,-124,-125,-126,-127,-128,51,-161,51,51,51,51,51,-72,-83,-90,-161,-152,-150,-15,51,51,51,51,51,51,51,-102,-105,-104,-98,-99,-100,-101,51,-97,-154,-160,-155,-151,-23,-24,-26,51,-112,51,-117,51,-31,-37,-32,-14,-58,-59,51,-109,51,51,-118,51,-16,-110,51,-107,51,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,51,-78,-120,-65,51,-67,51,-86,-103,51,51,-35,51,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,51,-84,51,-63,-64,-70,-80,-69,-71,51,-74,-76,]),'FALSE':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,268,272,275,276,277,280,281,282,283,284,286,287,289,291,297,301,302,303,304,307,313,317,318,319,],[-2,52,-3,52,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,52,-152,-90,52,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,52,-121,-122,-123,-124,-125,-126,-127,-128,52,-161,52,52,52,52,52,-72,-83,-90,-161,-152,-150,-15,52,52,52,52,52,52,52,-102,-105,-104,-98,-99,-100,-101,52,-97,-154,-160,-155,-151,-23,-24,-26,52,-112,52,-117,52,-31,-37,-32,-14,-58,-59,52,-109,52,52,-118,52,-16,-110,52,-107,52,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,52,-78,-120,-65,52,-67,52,-86,-103,52,52,-35,52,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,52,-84,52,-63,-64,-70,-80,-69,-71,52,-74,-76,]),'STRING':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,56,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,265,267,268,272,275,276,277,280,281,282,283,284,286,287,289,291,297,301,302,303,304,307,313,317,318,319,],[-2,53,-3,53,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,53,-152,-90,53,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,53,-121,-122,-123,-124,-125,-126,-127,-128,53,105,-161,53,53,53,53,53,-72,-83,-90,-161,-152,-150,-15,53,53,53,53,53,53,53,-102,-105,-104,-98,-99,-100,-101,53,-97,-154,-160,-155,-151,-23,-24,-26,53,-112,53,-117,53,-31,-37,-32,-14,-58,-59,53,-109,53,53,-118,53,-16,-110,53,-107,53,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,53,-78,-120,-65,53,-67,53,-86,-103,53,53,105,-35,53,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,53,-84,53,-63,-64,-70,-80,-69,-71,53,-74,-76,]),'RSTRING':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,268,272,275,276,277,280,281,282,283,284,286,287,289,291,297,301,302,303,304,307,313,317,318,319,],[-2,54,-3,54,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,54,-152,-90,54,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,54,-121,-122,-123,-124,-125,-126,-127,-128,54,-161,54,54,54,54,54,-72,-83,-90,-161,-152,-150,-15,54,54,54,54,54,54,54,-102,-105,-104,-98,-99,-100,-101,54,-97,-154,-160,-155,-151,-23,-24,-26,54,-112,54,-117,54,-31,-37,-32,-14,-58,-59,54,-109,54,54,-118,54,-16,-110,54,-107,54,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,54,-78,-120,-65,54,-67,54,-86,-103,54,54,-35,54,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,54,-84,54,-63,-64,-70,-80,-69,-71,54,-74,-76,]),'MLS':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,108,110,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,231,234,235,236,237,240,249,250,251,252,253,254,258,262,264,267,268,272,275,276,277,280,281,282,283,284,286,287,289,291,297,301,302,303,304,307,313,317,318,319,],[3,20,-3,20,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,77,-17,-18,-19,78,20,-152,-90,20,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,20,-121,-122,-123,-124,-125,-126,-127,-128,20,-161,20,20,20,20,20,-72,-83,-90,-161,-152,-150,-15,20,20,20,20,20,20,20,-102,-105,166,166,-104,-98,-99,-100,-101,20,-97,-154,-160,-155,-151,-23,-24,-26,20,-112,20,-117,20,-31,-37,-32,236,-58,-59,20,-109,20,20,-118,20,-16,-110,20,-107,20,-90,-152,-108,-85,-111,-106,-119,-38,-36,166,166,-61,-62,20,-78,-120,-65,20,286,20,-86,-103,20,20,-35,20,-33,-34,302,-60,-79,-81,-75,-77,-66,-68,-25,20,-84,20,-63,-64,313,-80,-69,-71,20,-74,-76,]),'[':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,19,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,66,70,71,72,73,74,77,78,81,82,83,84,85,86,88,90,91,92,95,98,99,100,103,112,117,126,127,128,129,132,134,139,140,147,148,149,150,151,153,154,161,162,163,164,165,168,174,175,180,182,183,184,186,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,268,272,275,276,277,280,281,282,283,284,286,287,289,291,301,302,303,304,307,313,314,315,318,319,],[-2,55,-3,55,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,69,-129,-20,-73,-17,-18,-19,-82,55,-152,92,55,-87,-88,-89,-91,-92,-93,95,-95,-96,99,55,-121,-122,-123,-124,-125,-126,-127,-128,55,-161,116,55,55,55,55,55,-72,-83,92,-161,-152,99,69,-15,55,55,55,55,55,55,55,-102,-105,-104,116,-98,-99,-100,-101,55,-97,-154,-160,-161,-155,-151,-23,-24,-26,55,-112,55,-117,55,-31,-37,230,-41,-32,-14,-58,-59,116,55,-109,55,55,-118,55,-16,-110,55,-107,55,92,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,55,-78,-120,-65,55,-67,55,-86,-103,55,55,-35,297,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,55,-84,-63,-64,-70,-80,-69,-71,116,116,-74,-76,]),'{':([0,2,3,5,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,30,32,33,34,35,36,37,38,39,40,41,42,43,45,46,47,48,49,50,51,52,53,54,55,64,70,71,72,73,74,77,78,81,82,83,84,86,88,90,91,92,95,98,99,100,103,112,126,127,128,129,132,134,139,140,148,149,150,151,153,154,161,162,163,164,165,168,180,182,183,184,189,190,193,194,195,196,201,202,204,206,208,210,211,212,214,216,217,218,222,223,235,236,237,240,249,250,251,252,253,254,258,262,264,267,269,272,275,276,277,280,281,282,283,284,286,287,289,291,300,301,302,303,304,307,313,318,319,],[-2,56,-3,56,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,56,-152,-90,56,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,56,-121,-122,-123,-124,-125,-126,-127,-128,56,-161,56,56,56,56,56,-72,-83,-90,-161,-152,-150,-15,56,56,56,56,56,56,56,-102,-105,-104,-98,-99,-100,-101,56,-97,-154,-160,-155,-151,-23,-24,-26,56,-112,56,-117,56,-31,-37,-32,-14,-58,-59,56,-109,56,56,-118,56,-16,-110,56,-107,56,-90,-152,-108,-85,-111,-106,-119,-38,-36,-61,-62,56,-78,-120,-65,56,-67,56,-86,-103,56,56,-35,56,-33,-34,-14,-60,-79,-81,-75,-77,-66,-68,-25,56,-84,56,-63,-64,-70,-80,-69,-71,-74,-76,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,20,21,24,25,26,27,28,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,57,64,77,78,81,82,83,84,86,100,103,112,126,127,128,129,134,139,140,148,149,150,151,153,161,163,165,168,180,182,183,184,190,195,201,202,206,212,214,216,217,218,222,223,235,236,240,249,250,254,258,267,272,275,276,277,280,281,282,283,284,287,291,301,302,303,304,307,313,318,319,],[-2,0,-14,-3,-1,-14,-5,-6,-7,-8,-9,-10,-11,-12,-13,-153,-161,-129,-20,-73,-17,-18,-19,-82,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-4,-161,-72,-83,-90,-161,-152,-150,-15,-102,-105,-104,-98,-99,-100,-101,-97,-154,-160,-155,-151,-23,-24,-26,-112,-117,-31,-37,-32,-14,-58,-59,-109,-118,-16,-110,-107,-108,-85,-111,-106,-119,-38,-36,-61,-62,-78,-120,-65,-86,-103,-35,-33,-34,-14,-60,-79,-81,-75,-77,-66,-25,-84,-63,-64,-70,-80,-69,-71,-74,-76,]),'.':([16,17,19,32,33,45,62,63,64,65,81,82,83,84,139,140,147,148,149,178,179,185,210,211,282,283,],[-153,-161,67,-152,89,-150,-152,114,-161,-150,135,-161,-152,-150,-154,-160,-161,-155,-151,114,-152,-151,135,-152,305,306,]),'USING':([16,61,139,148,],[-153,113,-154,-155,]),',':([16,20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,64,65,81,82,83,84,100,102,103,112,120,123,126,127,128,129,134,139,140,143,145,146,147,148,149,161,163,177,178,179,182,183,184,185,190,195,200,202,206,212,216,217,218,220,247,248,249,258,277,310,],[-153,-129,-87,-88,-89,-91,-92,-93,-94,-95,-96,-121,-122,-123,-124,-125,-126,-127,-128,-161,-150,-90,-161,-152,-150,-102,162,-105,-104,192,-136,-98,-99,-100,-101,-97,-154,-160,204,-141,-142,-161,-155,-151,-112,-117,232,233,-152,238,-58,-59,-151,-109,-118,255,-110,-107,-108,-111,-106,-119,265,-135,-134,-120,-103,238,317,]),':':([16,20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,58,59,64,65,81,82,83,84,94,100,103,105,112,116,126,127,128,129,130,134,139,140,148,149,161,163,176,177,178,179,181,185,187,190,195,197,198,202,206,212,216,217,218,249,258,261,273,274,],[-153,-129,-87,-88,-89,-91,-92,-93,-94,-95,-96,-121,-122,-123,-124,-125,-126,-127,-128,108,110,-161,-150,-90,-161,-152,-150,154,-102,-105,164,-104,188,-98,-99,-100,-101,196,-97,-154,-160,-155,-151,-112,-117,231,-158,-159,-152,234,-151,241,-109,-118,252,253,-110,-107,-108,-111,-106,-119,-120,-103,289,-156,-157,]),'SEP':([17,32,62,64,82,83,86,140,147,175,179,183,211,213,],[-161,87,87,-161,-161,136,138,-160,-161,138,87,138,136,138,]),'=':([17,32,33,45,82,122,140,147,149,210,211,225,226,270,],[-161,-152,90,-150,-161,193,-160,193,-151,90,-152,268,269,300,]),'PEQ':([17,32,33,45,82,140,149,210,211,],[-161,-152,91,-150,-161,-160,-151,91,-152,]),'CMP_OP':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,80,81,82,83,84,94,100,103,112,126,127,128,129,130,134,140,147,149,161,163,190,195,202,206,210,211,212,216,217,218,249,258,276,291,],[-161,-129,70,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,70,-90,-161,-152,-150,70,-102,70,-104,-98,-99,70,70,70,-97,-160,-161,-151,-112,-117,-109,-118,-110,-107,-90,-152,-108,-111,-106,-119,70,-103,70,70,]),'IN':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,76,80,81,82,83,84,94,100,103,112,126,127,128,129,130,134,140,147,149,161,163,190,195,202,206,210,211,212,216,217,218,249,258,276,291,],[-161,-129,71,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,132,71,-90,-161,-152,-150,71,71,71,-104,71,-99,71,71,71,-97,-160,-161,-151,-112,-117,-109,-118,-110,-107,-90,-152,-108,-111,-106,-119,71,-103,71,71,]),'AND':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,80,81,82,83,84,94,100,103,112,126,127,128,129,130,134,140,147,149,161,163,190,195,202,206,210,211,212,216,217,218,249,258,276,291,],[-161,-129,72,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,72,-90,-161,-152,-150,72,-102,72,-104,-98,-99,-100,72,72,-97,-160,-161,-151,-112,-117,-109,-118,-110,-107,-90,-152,-108,-111,-106,-119,72,-103,72,72,]),'OR':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,80,81,82,83,84,94,100,103,112,126,127,128,129,130,134,140,147,149,161,163,190,195,202,206,210,211,212,216,217,218,249,258,276,291,],[-161,-129,73,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,73,-90,-161,-152,-150,73,-102,73,-104,-98,-99,-100,-101,73,-97,-160,-161,-151,-112,-117,-109,-118,-110,-107,-90,-152,-108,-111,-106,-119,73,-103,73,73,]),'?':([17,20,21,32,33,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,64,80,81,82,83,84,94,100,103,112,126,127,128,129,130,134,140,147,149,161,163,171,173,174,175,190,195,202,206,210,211,212,216,217,218,249,258,271,276,291,],[-161,-129,74,-152,-90,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-161,74,-90,-161,-152,-150,74,-102,74,-104,-98,-99,-100,-101,74,-97,-160,-161,-151,-112,-117,227,228,229,-41,-109,-118,-110,-107,-90,-152,-108,-111,-106,-119,74,-103,-42,74,74,]),'IS':([17,82,147,149,],[60,60,60,205,]),')':([20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,68,80,81,82,83,84,88,98,100,103,112,118,119,120,121,123,126,127,128,129,134,140,141,142,143,144,145,146,147,149,158,161,163,190,191,192,195,199,200,202,203,204,206,212,216,217,218,245,246,247,248,249,256,257,258,288,],[-129,-87,-88,-89,-91,-92,-93,-94,-95,-96,-121,-122,-123,-124,-125,-126,-127,-128,-14,134,-90,-161,-152,-150,-14,-14,-102,-105,-104,190,-137,-14,-138,-136,-98,-99,-100,-101,-97,-160,202,-143,-14,-144,-141,-142,-161,-151,216,-112,-117,-109,-14,-14,-118,254,-163,-110,-14,-14,-107,-108,-111,-106,-119,-139,-140,-135,-134,-120,-145,-146,-103,-162,]),']':([20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,55,69,81,82,83,84,99,100,101,102,103,112,119,120,121,123,125,126,127,128,129,134,140,147,149,152,155,159,160,161,162,163,187,190,191,192,195,202,206,212,216,217,218,219,230,241,242,245,246,247,248,249,258,279,297,309,310,317,320,],[-129,-87,-88,-89,-91,-92,-93,-94,-95,-96,-121,-122,-123,-124,-125,-126,-127,-128,-149,-14,-90,-161,-152,-150,-14,-102,161,-148,-105,-104,-137,-14,-138,-136,195,-98,-99,-100,-101,-97,-160,-161,-151,206,212,217,218,-112,-149,-117,240,-109,-14,-14,-118,-110,-107,-108,-111,-106,-119,-147,271,280,281,-139,-140,-135,-134,-120,-103,304,-132,316,-131,-132,-133,]),'ELSE':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,81,82,83,84,100,103,112,126,127,128,129,134,140,149,150,151,153,154,161,163,190,195,202,206,207,208,209,210,211,212,216,217,218,249,258,263,287,307,],[-129,-20,-17,-18,-19,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-90,-161,-152,-150,-102,-105,-104,-98,-99,-100,-101,-97,-160,-151,-23,-24,-26,-14,-112,-117,-109,-118,-110,-107,261,-14,-22,-90,-152,-108,-111,-106,-119,-120,-103,-21,-25,-69,]),'ELIF':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,81,82,83,84,100,103,112,126,127,128,129,134,140,149,150,151,153,154,161,163,190,195,202,206,207,208,209,210,211,212,216,217,218,249,258,263,287,307,],[-129,-20,-17,-18,-19,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-90,-161,-152,-150,-102,-105,-104,-98,-99,-100,-101,-97,-160,-151,-23,-24,-26,-14,-112,-117,-109,-118,-110,-107,262,-14,-22,-90,-152,-108,-111,-106,-119,-120,-103,-21,-25,-69,]),'END':([20,21,25,26,27,35,36,37,38,39,40,41,42,43,45,47,48,49,50,51,52,53,54,81,82,83,84,93,100,103,108,110,112,126,127,128,129,134,140,149,150,151,153,154,161,163,166,167,169,190,195,202,206,207,208,209,210,211,212,216,217,218,221,224,225,226,231,234,249,251,252,253,258,259,260,263,270,285,286,287,289,290,294,295,296,298,299,307,308,311,312,316,],[-129,-20,-17,-18,-19,-87,-88,-89,-91,-92,-93,-94,-95,-96,-150,-121,-122,-123,-124,-125,-126,-127,-128,-90,-161,-152,-150,153,-102,-105,168,168,-104,-98,-99,-100,-101,-97,-160,-151,-23,-24,-26,-14,-112,-117,222,223,-40,-109,-118,-110,-107,-14,-14,-22,-90,-152,-108,-111,-106,-119,267,-39,-48,-52,168,168,-120,-14,-67,-14,-103,-27,-28,-21,-55,307,-68,-25,-14,-30,-49,-50,-51,-53,-54,-69,-29,-56,-57,-130,]),'}':([20,35,36,37,38,39,40,41,42,43,47,48,49,50,51,52,53,54,56,81,82,83,84,100,103,104,106,107,112,126,127,128,129,134,140,149,161,163,190,195,202,206,212,216,217,218,220,249,258,265,266,292,293,],[-129,-87,-88,-89,-91,-92,-93,-94,-95,-96,-121,-122,-123,-124,-125,-126,-127,-128,-14,-90,-161,-152,-150,-102,-105,163,-116,-115,-104,-98,-99,-100,-101,-97,-160,-151,-112,-117,-109,-118,-110,-107,-108,-111,-106,-119,-14,-120,-103,-14,-14,-113,-114,]),'DICT':([20,47,48,49,50,51,52,53,54,108,110,163,166,167,169,221,224,225,226,231,234,270,294,295,296,298,299,311,312,316,],[-129,-121,-122,-123,-124,-125,-126,-127,-128,171,171,-117,171,171,-40,171,-39,-48,-52,171,171,-55,-49,-50,-51,-53,-54,-56,-57,-130,]),'EXTENDS':([58,59,],[109,111,]),'DEFINED':([60,205,],[112,258,]),'AS':([64,86,96,97,140,],[-161,137,156,157,-160,]),'WHEN':([64,140,182,183,184,277,],[-161,-160,237,-58,-59,-60,]),'MATCHING':([64,140,213,],[-161,-160,264,]),'*':([68,69,88,98,99,124,192,204,],[124,124,124,124,124,194,124,124,]),'PARENTS':([113,238,],[184,184,]),'REL':([115,189,240,280,281,304,],[186,243,-78,-79,-81,-80,]),'UNDEF':([268,],[296,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'head':([0,],[2,]),'body':([2,5,],[4,57,]),'top_stmt':([2,5,],[5,5,]),'empty':([2,5,56,68,69,88,98,99,120,143,154,182,191,192,203,204,207,208,220,251,253,265,266,276,289,],[6,6,106,121,121,144,144,121,191,203,209,235,121,121,144,144,260,209,266,209,209,106,106,301,209,]),'entity_def':([2,5,],[7,7,]),'implement_def':([2,5,],[8,8,]),'implementation_def':([2,5,],[9,9,]),'relation':([2,5,],[10,10,]),'statement':([2,5,154,208,251,253,289,],[11,11,208,208,208,208,208,]),'typedef':([2,5,],[12,12,]),'index':([2,5,],[13,13,]),'import':([2,5,],[14,14,]),'class_ref':([2,5,18,29,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,109,111,131,132,154,157,162,164,189,193,194,196,204,208,232,233,237,239,243,244,251,253,262,264,289,],[19,19,61,79,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,177,177,197,85,85,215,85,85,85,85,85,85,85,85,177,177,85,278,282,283,85,85,85,85,85,]),'expression':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,162,164,189,193,194,196,204,208,237,251,253,262,264,289,],[21,21,80,94,100,103,126,127,128,129,130,103,103,103,103,103,103,103,103,21,103,103,103,103,103,249,103,21,276,21,21,94,291,21,]),'relation_def':([2,5,],[24,24,]),'assign':([2,5,154,208,251,253,289,],[25,25,25,25,25,25,25,]),'for':([2,5,154,208,251,253,289,],[26,26,26,26,26,26,26,]),'if':([2,5,154,208,251,253,289,],[27,27,27,27,27,27,27,]),'typedef_inner':([2,5,],[28,28,]),'ns_ref':([2,5,18,29,30,31,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,108,109,110,111,113,131,132,154,156,157,162,164,166,167,189,193,194,196,204,208,221,231,232,233,234,237,238,239,243,244,251,253,262,264,289,],[32,32,62,62,83,86,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,175,179,175,179,183,62,83,211,213,62,83,83,175,175,83,83,83,83,83,211,175,175,179,179,175,83,183,62,62,62,211,211,83,83,211,]),'var_ref':([2,5,18,29,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,109,111,131,132,154,157,162,164,189,193,194,196,204,208,232,233,237,239,243,244,251,253,262,264,289,],[33,33,63,63,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,178,178,63,81,210,63,81,81,81,81,81,81,81,210,178,178,81,63,63,63,210,210,81,81,210,]),'boolean_expression':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,162,164,189,193,194,196,204,208,237,251,253,262,264,289,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'constant':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,162,164,189,193,194,196,204,208,237,251,253,262,264,268,289,297,317,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,294,36,310,310,]),'function_call':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,162,164,189,193,194,196,204,208,237,251,253,262,264,289,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'constructor':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,157,162,164,189,193,194,196,204,208,237,251,253,262,264,289,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,214,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'list_def':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,162,164,189,193,194,196,204,208,237,251,253,262,264,289,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'map_def':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,162,164,189,193,194,196,204,208,237,251,253,262,264,269,289,300,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,298,40,311,]),'map_lookup':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,162,164,189,193,194,196,204,208,237,251,253,262,264,289,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'index_lookup':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,162,164,189,193,194,196,204,208,237,251,253,262,264,289,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'conditional_expression':([2,5,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,132,154,162,164,189,193,194,196,204,208,237,251,253,262,264,289,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'attr_ref':([2,5,18,29,30,34,46,55,70,71,72,73,74,88,90,91,92,95,98,99,109,111,131,132,154,157,162,164,189,193,194,196,204,208,232,233,237,239,243,244,251,253,262,264,289,],[45,45,65,65,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,65,65,65,84,45,65,84,84,84,84,84,84,84,45,65,65,84,65,65,65,45,45,84,84,45,]),'if_body':([34,262,],[93,290,]),'operand_list':([55,162,189,],[101,219,244,]),'operand':([55,88,90,91,92,95,98,99,132,162,164,189,193,194,204,],[102,146,150,151,152,155,146,159,198,102,220,102,247,248,146,]),'pair_list':([56,265,],[104,292,]),'pair_list_empty':([56,265,266,],[107,107,293,]),'multi':([66,117,186,314,315,],[115,189,239,318,319,]),'param_list':([68,69,99,192,],[118,125,160,246,]),'param_list_empty':([68,69,99,191,192,],[119,119,119,245,119,]),'param_list_element':([68,69,88,98,99,192,204,],[120,120,145,145,120,120,145,]),'wrapped_kwargs':([68,69,88,98,99,192,204,],[123,123,123,123,123,123,123,]),'function_param_list':([88,98,204,],[141,158,257,]),'function_param_list_empty':([88,98,203,204,],[142,142,256,142,]),'function_param_list_element':([88,98,204,],[143,143,143,]),'entity_body_outer':([108,110,231,234,],[165,180,272,275,]),'entity_body':([108,110,166,231,234,],[167,167,221,167,167,]),'attr':([108,110,166,167,221,231,234,],[169,169,169,224,224,169,169,]),'attr_type':([108,110,166,167,221,231,234,],[170,170,170,170,170,170,170,]),'attr_type_opt':([108,110,166,167,221,231,234,],[172,172,172,172,172,172,172,]),'attr_type_multi':([108,110,166,167,221,231,234,],[173,173,173,173,173,173,173,]),'attr_base_type':([108,110,166,167,221,231,234,],[174,174,174,174,174,174,174,]),'class_ref_list':([109,111,232,233,],[176,181,273,274,]),'implement_ns_list':([113,238,],[182,277,]),'id_list':([133,255,],[199,288,]),'stmt_list':([154,208,251,253,289,],[207,263,285,285,308,]),'implementation':([197,],[250,]),'implementation_head':([197,],[251,]),'if_next':([207,],[259,]),'block':([251,253,],[284,287,]),'constant_list':([268,],[295,]),'constants':([297,317,],[309,320,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> head body','main',2,'p_main','plyInmantaParser.py',118),
  ('head -> <empty>','head',0,'p_main_head','plyInmantaParser.py',126),
  ('head -> MLS','head',1,'p_main_head_doc','plyInmantaParser.py',131),
  ('body -> top_stmt body','body',2,'p_body_collect','plyInmantaParser.py',136),
  ('body -> empty','body',1,'p_body_term','plyInmantaParser.py',143),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',148),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',149),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',150),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',151),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',152),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',153),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',154),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',155),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',160),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',170),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',176),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',187),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',188),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',189),
  ('statement -> expression','statement',1,'p_stmt','plyInmantaParser.py',190),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',204),
  ('stmt_list -> empty','stmt_list',1,'p_stmt_list_empty','plyInmantaParser.py',211),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',216),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',222),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',228),
  ('if -> IF if_body END','if',3,'p_if_start','plyInmantaParser.py',235),
  ('if_body -> expression : stmt_list if_next','if_body',4,'p_if_body','plyInmantaParser.py',241),
  ('if_next -> empty','if_next',1,'p_if_end','plyInmantaParser.py',248),
  ('if_next -> ELSE : stmt_list','if_next',3,'p_if_else','plyInmantaParser.py',254),
  ('if_next -> ELIF if_body','if_next',2,'p_if_elif','plyInmantaParser.py',260),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',272),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',279),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',284),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',291),
  ('entity_body_outer -> MLS entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',296),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',301),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',306),
  ('entity_body_outer -> MLS END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',311),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',316),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',322),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',327),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',333),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',339),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',340),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',346),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',347),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',348),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',353),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',359),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',360),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',366),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',372),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',378),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',384),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',389),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',395),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',401),
  ('implement_ns_list -> ns_ref','implement_ns_list',1,'p_implement_ns_list_ref','plyInmantaParser.py',408),
  ('implement_ns_list -> PARENTS','implement_ns_list',1,'p_implement_ns_list_parents','plyInmantaParser.py',413),
  ('implement_ns_list -> implement_ns_list , implement_ns_list','implement_ns_list',3,'p_implement_ns_list_collect','plyInmantaParser.py',418),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list empty','implement_def',5,'p_implement','plyInmantaParser.py',423),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list MLS','implement_def',5,'p_implement','plyInmantaParser.py',424),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression empty','implement_def',7,'p_implement_when','plyInmantaParser.py',431),
  ('implement_def -> IMPLEMENT class_ref USING implement_ns_list WHEN expression MLS','implement_def',7,'p_implement_when','plyInmantaParser.py',432),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',442),
  ('implementation -> implementation_head block','implementation',2,'p_implementation','plyInmantaParser.py',455),
  ('implementation_head -> :','implementation_head',1,'p_implementation_head','plyInmantaParser.py',460),
  ('implementation_head -> : MLS','implementation_head',2,'p_implementation_head_doc','plyInmantaParser.py',465),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',470),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation_deprecated','plyInmantaParser.py',476),
  ('relation -> class_ref ID multi REL multi class_ref ID MLS','relation',8,'p_relation_deprecated_comment','plyInmantaParser.py',487),
  ('relation -> relation_def MLS','relation',2,'p_relation_outer_comment','plyInmantaParser.py',526),
  ('relation -> relation_def','relation',1,'p_relation_outer','plyInmantaParser.py',533),
  ('relation_def -> class_ref . ID multi REL class_ref . ID multi','relation_def',9,'p_relation','plyInmantaParser.py',538),
  ('relation_def -> class_ref . ID multi REL class_ref','relation_def',6,'p_relation_unidir','plyInmantaParser.py',544),
  ('relation_def -> class_ref . ID multi operand_list class_ref . ID multi','relation_def',9,'p_relation_annotated','plyInmantaParser.py',550),
  ('relation_def -> class_ref . ID multi operand_list class_ref','relation_def',6,'p_relation_annotated_unidir','plyInmantaParser.py',556),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',562),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',567),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',572),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',577),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',585),
  ('typedef -> typedef_inner MLS','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',590),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING expression','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',597),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',604),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',614),
  ('expression -> boolean_expression','expression',1,'p_expression','plyInmantaParser.py',624),
  ('expression -> constant','expression',1,'p_expression','plyInmantaParser.py',625),
  ('expression -> function_call','expression',1,'p_expression','plyInmantaParser.py',626),
  ('expression -> var_ref','expression',1,'p_expression','plyInmantaParser.py',627),
  ('expression -> constructor','expression',1,'p_expression','plyInmantaParser.py',628),
  ('expression -> list_def','expression',1,'p_expression','plyInmantaParser.py',629),
  ('expression -> map_def','expression',1,'p_expression','plyInmantaParser.py',630),
  ('expression -> map_lookup','expression',1,'p_expression','plyInmantaParser.py',631),
  ('expression -> index_lookup','expression',1,'p_expression','plyInmantaParser.py',632),
  ('expression -> conditional_expression','expression',1,'p_expression','plyInmantaParser.py',633),
  ('expression -> ( expression )','expression',3,'p_expression_parentheses','plyInmantaParser.py',638),
  ('boolean_expression -> expression CMP_OP expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',643),
  ('boolean_expression -> expression IN expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',644),
  ('boolean_expression -> expression AND expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',645),
  ('boolean_expression -> expression OR expression','boolean_expression',3,'p_boolean_expression','plyInmantaParser.py',646),
  ('boolean_expression -> NOT expression','boolean_expression',2,'p_boolean_expression_not','plyInmantaParser.py',655),
  ('boolean_expression -> var_ref . ID IS DEFINED','boolean_expression',5,'p_boolean_expression_is_defined','plyInmantaParser.py',661),
  ('boolean_expression -> ID IS DEFINED','boolean_expression',3,'p_boolean_expression_is_defined_short','plyInmantaParser.py',667),
  ('operand -> expression','operand',1,'p_operand','plyInmantaParser.py',673),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',678),
  ('map_lookup -> var_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',679),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',680),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',685),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',691),
  ('function_call -> attr_ref ( function_param_list )','function_call',4,'p_function_call_err_dot','plyInmantaParser.py',698),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',703),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',709),
  ('pair_list -> STRING : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',710),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',716),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',717),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',722),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',728),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',734),
  ('conditional_expression -> expression ? expression : expression','conditional_expression',5,'p_conditional_expression','plyInmantaParser.py',741),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',751),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',752),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',759),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',765),
  ('constant -> TRUE','constant',1,'p_constant_true','plyInmantaParser.py',771),
  ('constant -> FALSE','constant',1,'p_constant_false','plyInmantaParser.py',777),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',783),
  ('constant -> RSTRING','constant',1,'p_constant_rstring','plyInmantaParser.py',789),
  ('constant -> MLS','constant',1,'p_constant_mls','plyInmantaParser.py',795),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',873),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',879),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',884),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',889),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',895),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',900),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',906),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',912),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',913),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',919),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',920),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',935),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',942),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',948),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',949),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',955),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',956),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',974),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',980),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',985),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',990),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',995),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',1001),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',1007),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',1018),
  ('class_ref -> var_ref . CID','class_ref',3,'p_class_ref_err_dot','plyInmantaParser.py',1024),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',1039),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',1045),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',1050),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',1055),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',1061),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',1067),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',1072),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',1078),
]
