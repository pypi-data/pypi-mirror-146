# coding: utf-8

"""
    BAPP API

    This is the primary API for BAPP platform development  # noqa: E501

    OpenAPI spec version: v1
    Contact: office@cbsoft.ro
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from bapp_api_client.configuration import Configuration


class SelfTimesheetRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'type': 'str',
        'replacement': 'int',
        'request_details': 'str',
        'start_period': 'datetime',
        'end_period': 'datetime',
        'approved': 'bool',
        'resolved_by': 'str',
        'resolved_at': 'datetime',
        'resolved_details': 'str',
        'period_working_days': 'str'
    }

    attribute_map = {
        'id': 'id',
        'type': 'type',
        'replacement': 'replacement',
        'request_details': 'request_details',
        'start_period': 'start_period',
        'end_period': 'end_period',
        'approved': 'approved',
        'resolved_by': 'resolved_by',
        'resolved_at': 'resolved_at',
        'resolved_details': 'resolved_details',
        'period_working_days': 'period_working_days'
    }

    def __init__(self, id=None, type=None, replacement=None, request_details=None, start_period=None, end_period=None, approved=None, resolved_by=None, resolved_at=None, resolved_details=None, period_working_days=None, _configuration=None):  # noqa: E501
        """SelfTimesheetRequest - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._type = None
        self._replacement = None
        self._request_details = None
        self._start_period = None
        self._end_period = None
        self._approved = None
        self._resolved_by = None
        self._resolved_at = None
        self._resolved_details = None
        self._period_working_days = None
        self.discriminator = None

        if id is not None:
            self.id = id
        self.type = type
        if replacement is not None:
            self.replacement = replacement
        if request_details is not None:
            self.request_details = request_details
        self.start_period = start_period
        self.end_period = end_period
        if approved is not None:
            self.approved = approved
        if resolved_by is not None:
            self.resolved_by = resolved_by
        if resolved_at is not None:
            self.resolved_at = resolved_at
        if resolved_details is not None:
            self.resolved_details = resolved_details
        if period_working_days is not None:
            self.period_working_days = period_working_days

    @property
    def id(self):
        """Gets the id of this SelfTimesheetRequest.  # noqa: E501


        :return: The id of this SelfTimesheetRequest.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SelfTimesheetRequest.


        :param id: The id of this SelfTimesheetRequest.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this SelfTimesheetRequest.  # noqa: E501


        :return: The type of this SelfTimesheetRequest.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SelfTimesheetRequest.


        :param type: The type of this SelfTimesheetRequest.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501
        allowed_values = ["CM", "CO", "CFP", "I", "M", "O", "PRB", "PRM", "EV", "DT", "DS"]  # noqa: E501
        if (self._configuration.client_side_validation and
                type not in allowed_values):
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"  # noqa: E501
                .format(type, allowed_values)
            )

        self._type = type

    @property
    def replacement(self):
        """Gets the replacement of this SelfTimesheetRequest.  # noqa: E501


        :return: The replacement of this SelfTimesheetRequest.  # noqa: E501
        :rtype: int
        """
        return self._replacement

    @replacement.setter
    def replacement(self, replacement):
        """Sets the replacement of this SelfTimesheetRequest.


        :param replacement: The replacement of this SelfTimesheetRequest.  # noqa: E501
        :type: int
        """

        self._replacement = replacement

    @property
    def request_details(self):
        """Gets the request_details of this SelfTimesheetRequest.  # noqa: E501


        :return: The request_details of this SelfTimesheetRequest.  # noqa: E501
        :rtype: str
        """
        return self._request_details

    @request_details.setter
    def request_details(self, request_details):
        """Sets the request_details of this SelfTimesheetRequest.


        :param request_details: The request_details of this SelfTimesheetRequest.  # noqa: E501
        :type: str
        """

        self._request_details = request_details

    @property
    def start_period(self):
        """Gets the start_period of this SelfTimesheetRequest.  # noqa: E501


        :return: The start_period of this SelfTimesheetRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._start_period

    @start_period.setter
    def start_period(self, start_period):
        """Sets the start_period of this SelfTimesheetRequest.


        :param start_period: The start_period of this SelfTimesheetRequest.  # noqa: E501
        :type: datetime
        """
        if self._configuration.client_side_validation and start_period is None:
            raise ValueError("Invalid value for `start_period`, must not be `None`")  # noqa: E501

        self._start_period = start_period

    @property
    def end_period(self):
        """Gets the end_period of this SelfTimesheetRequest.  # noqa: E501


        :return: The end_period of this SelfTimesheetRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._end_period

    @end_period.setter
    def end_period(self, end_period):
        """Sets the end_period of this SelfTimesheetRequest.


        :param end_period: The end_period of this SelfTimesheetRequest.  # noqa: E501
        :type: datetime
        """
        if self._configuration.client_side_validation and end_period is None:
            raise ValueError("Invalid value for `end_period`, must not be `None`")  # noqa: E501

        self._end_period = end_period

    @property
    def approved(self):
        """Gets the approved of this SelfTimesheetRequest.  # noqa: E501


        :return: The approved of this SelfTimesheetRequest.  # noqa: E501
        :rtype: bool
        """
        return self._approved

    @approved.setter
    def approved(self, approved):
        """Sets the approved of this SelfTimesheetRequest.


        :param approved: The approved of this SelfTimesheetRequest.  # noqa: E501
        :type: bool
        """

        self._approved = approved

    @property
    def resolved_by(self):
        """Gets the resolved_by of this SelfTimesheetRequest.  # noqa: E501


        :return: The resolved_by of this SelfTimesheetRequest.  # noqa: E501
        :rtype: str
        """
        return self._resolved_by

    @resolved_by.setter
    def resolved_by(self, resolved_by):
        """Sets the resolved_by of this SelfTimesheetRequest.


        :param resolved_by: The resolved_by of this SelfTimesheetRequest.  # noqa: E501
        :type: str
        """

        self._resolved_by = resolved_by

    @property
    def resolved_at(self):
        """Gets the resolved_at of this SelfTimesheetRequest.  # noqa: E501


        :return: The resolved_at of this SelfTimesheetRequest.  # noqa: E501
        :rtype: datetime
        """
        return self._resolved_at

    @resolved_at.setter
    def resolved_at(self, resolved_at):
        """Sets the resolved_at of this SelfTimesheetRequest.


        :param resolved_at: The resolved_at of this SelfTimesheetRequest.  # noqa: E501
        :type: datetime
        """

        self._resolved_at = resolved_at

    @property
    def resolved_details(self):
        """Gets the resolved_details of this SelfTimesheetRequest.  # noqa: E501


        :return: The resolved_details of this SelfTimesheetRequest.  # noqa: E501
        :rtype: str
        """
        return self._resolved_details

    @resolved_details.setter
    def resolved_details(self, resolved_details):
        """Sets the resolved_details of this SelfTimesheetRequest.


        :param resolved_details: The resolved_details of this SelfTimesheetRequest.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                resolved_details is not None and len(resolved_details) < 1):
            raise ValueError("Invalid value for `resolved_details`, length must be greater than or equal to `1`")  # noqa: E501

        self._resolved_details = resolved_details

    @property
    def period_working_days(self):
        """Gets the period_working_days of this SelfTimesheetRequest.  # noqa: E501


        :return: The period_working_days of this SelfTimesheetRequest.  # noqa: E501
        :rtype: str
        """
        return self._period_working_days

    @period_working_days.setter
    def period_working_days(self, period_working_days):
        """Sets the period_working_days of this SelfTimesheetRequest.


        :param period_working_days: The period_working_days of this SelfTimesheetRequest.  # noqa: E501
        :type: str
        """

        self._period_working_days = period_working_days

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SelfTimesheetRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SelfTimesheetRequest):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, SelfTimesheetRequest):
            return True

        return self.to_dict() != other.to_dict()
