# coding: utf-8

"""
    BAPP API

    This is the primary API for BAPP platform development  # noqa: E501

    OpenAPI spec version: v1
    Contact: office@cbsoft.ro
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from bapp_api_client.configuration import Configuration


class Product(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'category': 'int',
        'type': 'int',
        'currency': 'str',
        'unit': 'str',
        'name': 'str',
        'price': 'str',
        'discountable': 'bool',
        'tax': 'str',
        'code': 'str',
        'code_ean': 'str',
        'external_id': 'str',
        'active': 'bool',
        'minimum_stock': 'str',
        'components': 'list[int]',
        'conversions': 'list[int]',
        'description': 'str',
        'materials_are_billed': 'bool',
        'price_contains_tax': 'bool',
        'sale_price': 'str',
        'category_order': 'int',
        'markup': 'int',
        'computed_markup': 'str',
        'width': 'int',
        'height': 'int',
        'depth': 'int',
        'weight': 'int',
        'price_chf': 'str',
        'price_fjd': 'str',
        'price_gbp': 'str',
        'price_ron': 'str',
        'price_usd': 'str',
        'price_cad': 'str',
        'price_eur': 'str',
        'price_aed': 'str',
        'price_afn': 'str',
        'price_all': 'str',
        'price_amd': 'str',
        'price_ang': 'str',
        'price_aoa': 'str',
        'price_ars': 'str',
        'price_aud': 'str',
        'price_awg': 'str',
        'price_azn': 'str',
        'price_bam': 'str',
        'price_bbd': 'str',
        'price_bdt': 'str',
        'price_bgn': 'str',
        'price_bhd': 'str',
        'price_bif': 'str',
        'price_bmd': 'str',
        'price_bnd': 'str',
        'price_bob': 'str',
        'price_brl': 'str',
        'price_bsd': 'str',
        'price_btn': 'str',
        'price_bwp': 'str',
        'price_byn': 'str',
        'price_bzd': 'str',
        'price_cdf': 'str',
        'price_clp': 'str',
        'price_cny': 'str',
        'price_cop': 'str',
        'price_crc': 'str',
        'price_cup': 'str',
        'price_cve': 'str',
        'price_czk': 'str',
        'price_djf': 'str',
        'price_dkk': 'str',
        'price_dop': 'str',
        'price_dzd': 'str',
        'price_egp': 'str',
        'price_ern': 'str',
        'price_etb': 'str',
        'price_fkp': 'str',
        'price_gel': 'str',
        'price_ghs': 'str',
        'price_gip': 'str',
        'price_gmd': 'str',
        'price_gnf': 'str',
        'price_gtq': 'str',
        'price_gyd': 'str',
        'price_hkd': 'str',
        'price_hnl': 'str',
        'price_hrk': 'str',
        'price_htg': 'str',
        'price_huf': 'str',
        'price_idr': 'str',
        'price_ils': 'str',
        'price_inr': 'str',
        'price_iqd': 'str',
        'price_irr': 'str',
        'price_isk': 'str',
        'price_jmd': 'str',
        'price_jod': 'str',
        'price_jpy': 'str',
        'price_kes': 'str',
        'price_kgs': 'str',
        'price_khr': 'str',
        'price_kmf': 'str',
        'price_kpw': 'str',
        'price_krw': 'str',
        'price_kwd': 'str',
        'price_kyd': 'str',
        'price_kzt': 'str',
        'price_lak': 'str',
        'price_lbp': 'str',
        'price_lkr': 'str',
        'price_lrd': 'str',
        'price_lsl': 'str',
        'price_lyd': 'str',
        'price_mad': 'str',
        'price_mdl': 'str',
        'price_mga': 'str',
        'price_mkd': 'str',
        'price_mmk': 'str',
        'price_mnt': 'str',
        'price_mop': 'str',
        'price_mru': 'str',
        'price_mur': 'str',
        'price_mvr': 'str',
        'price_mwk': 'str',
        'price_mxn': 'str',
        'price_myr': 'str',
        'price_mzn': 'str',
        'price_nad': 'str',
        'price_ngn': 'str',
        'price_nio': 'str',
        'price_nok': 'str',
        'price_npr': 'str',
        'price_nzd': 'str',
        'price_omr': 'str',
        'price_pab': 'str',
        'price_pen': 'str',
        'price_pgk': 'str',
        'price_php': 'str',
        'price_pkr': 'str',
        'price_pln': 'str',
        'price_pyg': 'str',
        'price_qar': 'str',
        'price_rsd': 'str',
        'price_rub': 'str',
        'price_rwf': 'str',
        'price_sar': 'str',
        'price_sbd': 'str',
        'price_scr': 'str',
        'price_sdg': 'str',
        'price_sek': 'str',
        'price_sgd': 'str',
        'price_shp': 'str',
        'price_sll': 'str',
        'price_sos': 'str',
        'price_srd': 'str',
        'price_ssp': 'str',
        'price_stn': 'str',
        'price_syp': 'str',
        'price_szl': 'str',
        'price_thb': 'str',
        'price_tjs': 'str',
        'price_tmt': 'str',
        'price_tnd': 'str',
        'price_top': 'str',
        'price_try': 'str',
        'price_ttd': 'str',
        'price_twd': 'str',
        'price_tzs': 'str',
        'price_uah': 'str',
        'price_ugx': 'str',
        'price_uyu': 'str',
        'price_uzs': 'str',
        'price_ves': 'str',
        'price_vnd': 'str',
        'price_vuv': 'str',
        'price_wst': 'str',
        'price_xaf': 'str',
        'price_xcd': 'str',
        'price_xof': 'str',
        'price_xpf': 'str',
        'price_yer': 'str',
        'price_zar': 'str',
        'price_zmw': 'str',
        'price_zwl': 'str'
    }

    attribute_map = {
        'id': 'id',
        'category': 'category',
        'type': 'type',
        'currency': 'currency',
        'unit': 'unit',
        'name': 'name',
        'price': 'price',
        'discountable': 'discountable',
        'tax': 'tax',
        'code': 'code',
        'code_ean': 'code_ean',
        'external_id': 'external_id',
        'active': 'active',
        'minimum_stock': 'minimum_stock',
        'components': 'components',
        'conversions': 'conversions',
        'description': 'description',
        'materials_are_billed': 'materials_are_billed',
        'price_contains_tax': 'price_contains_tax',
        'sale_price': 'sale_price',
        'category_order': 'category_order',
        'markup': 'markup',
        'computed_markup': 'computed_markup',
        'width': 'width',
        'height': 'height',
        'depth': 'depth',
        'weight': 'weight',
        'price_chf': 'price_CHF',
        'price_fjd': 'price_FJD',
        'price_gbp': 'price_GBP',
        'price_ron': 'price_RON',
        'price_usd': 'price_USD',
        'price_cad': 'price_CAD',
        'price_eur': 'price_EUR',
        'price_aed': 'price_AED',
        'price_afn': 'price_AFN',
        'price_all': 'price_ALL',
        'price_amd': 'price_AMD',
        'price_ang': 'price_ANG',
        'price_aoa': 'price_AOA',
        'price_ars': 'price_ARS',
        'price_aud': 'price_AUD',
        'price_awg': 'price_AWG',
        'price_azn': 'price_AZN',
        'price_bam': 'price_BAM',
        'price_bbd': 'price_BBD',
        'price_bdt': 'price_BDT',
        'price_bgn': 'price_BGN',
        'price_bhd': 'price_BHD',
        'price_bif': 'price_BIF',
        'price_bmd': 'price_BMD',
        'price_bnd': 'price_BND',
        'price_bob': 'price_BOB',
        'price_brl': 'price_BRL',
        'price_bsd': 'price_BSD',
        'price_btn': 'price_BTN',
        'price_bwp': 'price_BWP',
        'price_byn': 'price_BYN',
        'price_bzd': 'price_BZD',
        'price_cdf': 'price_CDF',
        'price_clp': 'price_CLP',
        'price_cny': 'price_CNY',
        'price_cop': 'price_COP',
        'price_crc': 'price_CRC',
        'price_cup': 'price_CUP',
        'price_cve': 'price_CVE',
        'price_czk': 'price_CZK',
        'price_djf': 'price_DJF',
        'price_dkk': 'price_DKK',
        'price_dop': 'price_DOP',
        'price_dzd': 'price_DZD',
        'price_egp': 'price_EGP',
        'price_ern': 'price_ERN',
        'price_etb': 'price_ETB',
        'price_fkp': 'price_FKP',
        'price_gel': 'price_GEL',
        'price_ghs': 'price_GHS',
        'price_gip': 'price_GIP',
        'price_gmd': 'price_GMD',
        'price_gnf': 'price_GNF',
        'price_gtq': 'price_GTQ',
        'price_gyd': 'price_GYD',
        'price_hkd': 'price_HKD',
        'price_hnl': 'price_HNL',
        'price_hrk': 'price_HRK',
        'price_htg': 'price_HTG',
        'price_huf': 'price_HUF',
        'price_idr': 'price_IDR',
        'price_ils': 'price_ILS',
        'price_inr': 'price_INR',
        'price_iqd': 'price_IQD',
        'price_irr': 'price_IRR',
        'price_isk': 'price_ISK',
        'price_jmd': 'price_JMD',
        'price_jod': 'price_JOD',
        'price_jpy': 'price_JPY',
        'price_kes': 'price_KES',
        'price_kgs': 'price_KGS',
        'price_khr': 'price_KHR',
        'price_kmf': 'price_KMF',
        'price_kpw': 'price_KPW',
        'price_krw': 'price_KRW',
        'price_kwd': 'price_KWD',
        'price_kyd': 'price_KYD',
        'price_kzt': 'price_KZT',
        'price_lak': 'price_LAK',
        'price_lbp': 'price_LBP',
        'price_lkr': 'price_LKR',
        'price_lrd': 'price_LRD',
        'price_lsl': 'price_LSL',
        'price_lyd': 'price_LYD',
        'price_mad': 'price_MAD',
        'price_mdl': 'price_MDL',
        'price_mga': 'price_MGA',
        'price_mkd': 'price_MKD',
        'price_mmk': 'price_MMK',
        'price_mnt': 'price_MNT',
        'price_mop': 'price_MOP',
        'price_mru': 'price_MRU',
        'price_mur': 'price_MUR',
        'price_mvr': 'price_MVR',
        'price_mwk': 'price_MWK',
        'price_mxn': 'price_MXN',
        'price_myr': 'price_MYR',
        'price_mzn': 'price_MZN',
        'price_nad': 'price_NAD',
        'price_ngn': 'price_NGN',
        'price_nio': 'price_NIO',
        'price_nok': 'price_NOK',
        'price_npr': 'price_NPR',
        'price_nzd': 'price_NZD',
        'price_omr': 'price_OMR',
        'price_pab': 'price_PAB',
        'price_pen': 'price_PEN',
        'price_pgk': 'price_PGK',
        'price_php': 'price_PHP',
        'price_pkr': 'price_PKR',
        'price_pln': 'price_PLN',
        'price_pyg': 'price_PYG',
        'price_qar': 'price_QAR',
        'price_rsd': 'price_RSD',
        'price_rub': 'price_RUB',
        'price_rwf': 'price_RWF',
        'price_sar': 'price_SAR',
        'price_sbd': 'price_SBD',
        'price_scr': 'price_SCR',
        'price_sdg': 'price_SDG',
        'price_sek': 'price_SEK',
        'price_sgd': 'price_SGD',
        'price_shp': 'price_SHP',
        'price_sll': 'price_SLL',
        'price_sos': 'price_SOS',
        'price_srd': 'price_SRD',
        'price_ssp': 'price_SSP',
        'price_stn': 'price_STN',
        'price_syp': 'price_SYP',
        'price_szl': 'price_SZL',
        'price_thb': 'price_THB',
        'price_tjs': 'price_TJS',
        'price_tmt': 'price_TMT',
        'price_tnd': 'price_TND',
        'price_top': 'price_TOP',
        'price_try': 'price_TRY',
        'price_ttd': 'price_TTD',
        'price_twd': 'price_TWD',
        'price_tzs': 'price_TZS',
        'price_uah': 'price_UAH',
        'price_ugx': 'price_UGX',
        'price_uyu': 'price_UYU',
        'price_uzs': 'price_UZS',
        'price_ves': 'price_VES',
        'price_vnd': 'price_VND',
        'price_vuv': 'price_VUV',
        'price_wst': 'price_WST',
        'price_xaf': 'price_XAF',
        'price_xcd': 'price_XCD',
        'price_xof': 'price_XOF',
        'price_xpf': 'price_XPF',
        'price_yer': 'price_YER',
        'price_zar': 'price_ZAR',
        'price_zmw': 'price_ZMW',
        'price_zwl': 'price_ZWL'
    }

    def __init__(self, id=None, category=None, type=None, currency=None, unit=None, name=None, price=None, discountable=None, tax=None, code=None, code_ean=None, external_id=None, active=None, minimum_stock=None, components=None, conversions=None, description=None, materials_are_billed=None, price_contains_tax=None, sale_price=None, category_order=None, markup=None, computed_markup=None, width=None, height=None, depth=None, weight=None, price_chf=None, price_fjd=None, price_gbp=None, price_ron=None, price_usd=None, price_cad=None, price_eur=None, price_aed=None, price_afn=None, price_all=None, price_amd=None, price_ang=None, price_aoa=None, price_ars=None, price_aud=None, price_awg=None, price_azn=None, price_bam=None, price_bbd=None, price_bdt=None, price_bgn=None, price_bhd=None, price_bif=None, price_bmd=None, price_bnd=None, price_bob=None, price_brl=None, price_bsd=None, price_btn=None, price_bwp=None, price_byn=None, price_bzd=None, price_cdf=None, price_clp=None, price_cny=None, price_cop=None, price_crc=None, price_cup=None, price_cve=None, price_czk=None, price_djf=None, price_dkk=None, price_dop=None, price_dzd=None, price_egp=None, price_ern=None, price_etb=None, price_fkp=None, price_gel=None, price_ghs=None, price_gip=None, price_gmd=None, price_gnf=None, price_gtq=None, price_gyd=None, price_hkd=None, price_hnl=None, price_hrk=None, price_htg=None, price_huf=None, price_idr=None, price_ils=None, price_inr=None, price_iqd=None, price_irr=None, price_isk=None, price_jmd=None, price_jod=None, price_jpy=None, price_kes=None, price_kgs=None, price_khr=None, price_kmf=None, price_kpw=None, price_krw=None, price_kwd=None, price_kyd=None, price_kzt=None, price_lak=None, price_lbp=None, price_lkr=None, price_lrd=None, price_lsl=None, price_lyd=None, price_mad=None, price_mdl=None, price_mga=None, price_mkd=None, price_mmk=None, price_mnt=None, price_mop=None, price_mru=None, price_mur=None, price_mvr=None, price_mwk=None, price_mxn=None, price_myr=None, price_mzn=None, price_nad=None, price_ngn=None, price_nio=None, price_nok=None, price_npr=None, price_nzd=None, price_omr=None, price_pab=None, price_pen=None, price_pgk=None, price_php=None, price_pkr=None, price_pln=None, price_pyg=None, price_qar=None, price_rsd=None, price_rub=None, price_rwf=None, price_sar=None, price_sbd=None, price_scr=None, price_sdg=None, price_sek=None, price_sgd=None, price_shp=None, price_sll=None, price_sos=None, price_srd=None, price_ssp=None, price_stn=None, price_syp=None, price_szl=None, price_thb=None, price_tjs=None, price_tmt=None, price_tnd=None, price_top=None, price_try=None, price_ttd=None, price_twd=None, price_tzs=None, price_uah=None, price_ugx=None, price_uyu=None, price_uzs=None, price_ves=None, price_vnd=None, price_vuv=None, price_wst=None, price_xaf=None, price_xcd=None, price_xof=None, price_xpf=None, price_yer=None, price_zar=None, price_zmw=None, price_zwl=None, _configuration=None):  # noqa: E501
        """Product - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._category = None
        self._type = None
        self._currency = None
        self._unit = None
        self._name = None
        self._price = None
        self._discountable = None
        self._tax = None
        self._code = None
        self._code_ean = None
        self._external_id = None
        self._active = None
        self._minimum_stock = None
        self._components = None
        self._conversions = None
        self._description = None
        self._materials_are_billed = None
        self._price_contains_tax = None
        self._sale_price = None
        self._category_order = None
        self._markup = None
        self._computed_markup = None
        self._width = None
        self._height = None
        self._depth = None
        self._weight = None
        self._price_chf = None
        self._price_fjd = None
        self._price_gbp = None
        self._price_ron = None
        self._price_usd = None
        self._price_cad = None
        self._price_eur = None
        self._price_aed = None
        self._price_afn = None
        self._price_all = None
        self._price_amd = None
        self._price_ang = None
        self._price_aoa = None
        self._price_ars = None
        self._price_aud = None
        self._price_awg = None
        self._price_azn = None
        self._price_bam = None
        self._price_bbd = None
        self._price_bdt = None
        self._price_bgn = None
        self._price_bhd = None
        self._price_bif = None
        self._price_bmd = None
        self._price_bnd = None
        self._price_bob = None
        self._price_brl = None
        self._price_bsd = None
        self._price_btn = None
        self._price_bwp = None
        self._price_byn = None
        self._price_bzd = None
        self._price_cdf = None
        self._price_clp = None
        self._price_cny = None
        self._price_cop = None
        self._price_crc = None
        self._price_cup = None
        self._price_cve = None
        self._price_czk = None
        self._price_djf = None
        self._price_dkk = None
        self._price_dop = None
        self._price_dzd = None
        self._price_egp = None
        self._price_ern = None
        self._price_etb = None
        self._price_fkp = None
        self._price_gel = None
        self._price_ghs = None
        self._price_gip = None
        self._price_gmd = None
        self._price_gnf = None
        self._price_gtq = None
        self._price_gyd = None
        self._price_hkd = None
        self._price_hnl = None
        self._price_hrk = None
        self._price_htg = None
        self._price_huf = None
        self._price_idr = None
        self._price_ils = None
        self._price_inr = None
        self._price_iqd = None
        self._price_irr = None
        self._price_isk = None
        self._price_jmd = None
        self._price_jod = None
        self._price_jpy = None
        self._price_kes = None
        self._price_kgs = None
        self._price_khr = None
        self._price_kmf = None
        self._price_kpw = None
        self._price_krw = None
        self._price_kwd = None
        self._price_kyd = None
        self._price_kzt = None
        self._price_lak = None
        self._price_lbp = None
        self._price_lkr = None
        self._price_lrd = None
        self._price_lsl = None
        self._price_lyd = None
        self._price_mad = None
        self._price_mdl = None
        self._price_mga = None
        self._price_mkd = None
        self._price_mmk = None
        self._price_mnt = None
        self._price_mop = None
        self._price_mru = None
        self._price_mur = None
        self._price_mvr = None
        self._price_mwk = None
        self._price_mxn = None
        self._price_myr = None
        self._price_mzn = None
        self._price_nad = None
        self._price_ngn = None
        self._price_nio = None
        self._price_nok = None
        self._price_npr = None
        self._price_nzd = None
        self._price_omr = None
        self._price_pab = None
        self._price_pen = None
        self._price_pgk = None
        self._price_php = None
        self._price_pkr = None
        self._price_pln = None
        self._price_pyg = None
        self._price_qar = None
        self._price_rsd = None
        self._price_rub = None
        self._price_rwf = None
        self._price_sar = None
        self._price_sbd = None
        self._price_scr = None
        self._price_sdg = None
        self._price_sek = None
        self._price_sgd = None
        self._price_shp = None
        self._price_sll = None
        self._price_sos = None
        self._price_srd = None
        self._price_ssp = None
        self._price_stn = None
        self._price_syp = None
        self._price_szl = None
        self._price_thb = None
        self._price_tjs = None
        self._price_tmt = None
        self._price_tnd = None
        self._price_top = None
        self._price_try = None
        self._price_ttd = None
        self._price_twd = None
        self._price_tzs = None
        self._price_uah = None
        self._price_ugx = None
        self._price_uyu = None
        self._price_uzs = None
        self._price_ves = None
        self._price_vnd = None
        self._price_vuv = None
        self._price_wst = None
        self._price_xaf = None
        self._price_xcd = None
        self._price_xof = None
        self._price_xpf = None
        self._price_yer = None
        self._price_zar = None
        self._price_zmw = None
        self._price_zwl = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if category is not None:
            self.category = category
        self.type = type
        if currency is not None:
            self.currency = currency
        self.unit = unit
        self.name = name
        self.price = price
        if discountable is not None:
            self.discountable = discountable
        if tax is not None:
            self.tax = tax
        if code is not None:
            self.code = code
        if code_ean is not None:
            self.code_ean = code_ean
        if external_id is not None:
            self.external_id = external_id
        if active is not None:
            self.active = active
        if minimum_stock is not None:
            self.minimum_stock = minimum_stock
        if components is not None:
            self.components = components
        if conversions is not None:
            self.conversions = conversions
        if description is not None:
            self.description = description
        if materials_are_billed is not None:
            self.materials_are_billed = materials_are_billed
        if price_contains_tax is not None:
            self.price_contains_tax = price_contains_tax
        if sale_price is not None:
            self.sale_price = sale_price
        if category_order is not None:
            self.category_order = category_order
        if markup is not None:
            self.markup = markup
        if computed_markup is not None:
            self.computed_markup = computed_markup
        if width is not None:
            self.width = width
        if height is not None:
            self.height = height
        if depth is not None:
            self.depth = depth
        if weight is not None:
            self.weight = weight
        if price_chf is not None:
            self.price_chf = price_chf
        if price_fjd is not None:
            self.price_fjd = price_fjd
        if price_gbp is not None:
            self.price_gbp = price_gbp
        if price_ron is not None:
            self.price_ron = price_ron
        if price_usd is not None:
            self.price_usd = price_usd
        if price_cad is not None:
            self.price_cad = price_cad
        if price_eur is not None:
            self.price_eur = price_eur
        if price_aed is not None:
            self.price_aed = price_aed
        if price_afn is not None:
            self.price_afn = price_afn
        if price_all is not None:
            self.price_all = price_all
        if price_amd is not None:
            self.price_amd = price_amd
        if price_ang is not None:
            self.price_ang = price_ang
        if price_aoa is not None:
            self.price_aoa = price_aoa
        if price_ars is not None:
            self.price_ars = price_ars
        if price_aud is not None:
            self.price_aud = price_aud
        if price_awg is not None:
            self.price_awg = price_awg
        if price_azn is not None:
            self.price_azn = price_azn
        if price_bam is not None:
            self.price_bam = price_bam
        if price_bbd is not None:
            self.price_bbd = price_bbd
        if price_bdt is not None:
            self.price_bdt = price_bdt
        if price_bgn is not None:
            self.price_bgn = price_bgn
        if price_bhd is not None:
            self.price_bhd = price_bhd
        if price_bif is not None:
            self.price_bif = price_bif
        if price_bmd is not None:
            self.price_bmd = price_bmd
        if price_bnd is not None:
            self.price_bnd = price_bnd
        if price_bob is not None:
            self.price_bob = price_bob
        if price_brl is not None:
            self.price_brl = price_brl
        if price_bsd is not None:
            self.price_bsd = price_bsd
        if price_btn is not None:
            self.price_btn = price_btn
        if price_bwp is not None:
            self.price_bwp = price_bwp
        if price_byn is not None:
            self.price_byn = price_byn
        if price_bzd is not None:
            self.price_bzd = price_bzd
        if price_cdf is not None:
            self.price_cdf = price_cdf
        if price_clp is not None:
            self.price_clp = price_clp
        if price_cny is not None:
            self.price_cny = price_cny
        if price_cop is not None:
            self.price_cop = price_cop
        if price_crc is not None:
            self.price_crc = price_crc
        if price_cup is not None:
            self.price_cup = price_cup
        if price_cve is not None:
            self.price_cve = price_cve
        if price_czk is not None:
            self.price_czk = price_czk
        if price_djf is not None:
            self.price_djf = price_djf
        if price_dkk is not None:
            self.price_dkk = price_dkk
        if price_dop is not None:
            self.price_dop = price_dop
        if price_dzd is not None:
            self.price_dzd = price_dzd
        if price_egp is not None:
            self.price_egp = price_egp
        if price_ern is not None:
            self.price_ern = price_ern
        if price_etb is not None:
            self.price_etb = price_etb
        if price_fkp is not None:
            self.price_fkp = price_fkp
        if price_gel is not None:
            self.price_gel = price_gel
        if price_ghs is not None:
            self.price_ghs = price_ghs
        if price_gip is not None:
            self.price_gip = price_gip
        if price_gmd is not None:
            self.price_gmd = price_gmd
        if price_gnf is not None:
            self.price_gnf = price_gnf
        if price_gtq is not None:
            self.price_gtq = price_gtq
        if price_gyd is not None:
            self.price_gyd = price_gyd
        if price_hkd is not None:
            self.price_hkd = price_hkd
        if price_hnl is not None:
            self.price_hnl = price_hnl
        if price_hrk is not None:
            self.price_hrk = price_hrk
        if price_htg is not None:
            self.price_htg = price_htg
        if price_huf is not None:
            self.price_huf = price_huf
        if price_idr is not None:
            self.price_idr = price_idr
        if price_ils is not None:
            self.price_ils = price_ils
        if price_inr is not None:
            self.price_inr = price_inr
        if price_iqd is not None:
            self.price_iqd = price_iqd
        if price_irr is not None:
            self.price_irr = price_irr
        if price_isk is not None:
            self.price_isk = price_isk
        if price_jmd is not None:
            self.price_jmd = price_jmd
        if price_jod is not None:
            self.price_jod = price_jod
        if price_jpy is not None:
            self.price_jpy = price_jpy
        if price_kes is not None:
            self.price_kes = price_kes
        if price_kgs is not None:
            self.price_kgs = price_kgs
        if price_khr is not None:
            self.price_khr = price_khr
        if price_kmf is not None:
            self.price_kmf = price_kmf
        if price_kpw is not None:
            self.price_kpw = price_kpw
        if price_krw is not None:
            self.price_krw = price_krw
        if price_kwd is not None:
            self.price_kwd = price_kwd
        if price_kyd is not None:
            self.price_kyd = price_kyd
        if price_kzt is not None:
            self.price_kzt = price_kzt
        if price_lak is not None:
            self.price_lak = price_lak
        if price_lbp is not None:
            self.price_lbp = price_lbp
        if price_lkr is not None:
            self.price_lkr = price_lkr
        if price_lrd is not None:
            self.price_lrd = price_lrd
        if price_lsl is not None:
            self.price_lsl = price_lsl
        if price_lyd is not None:
            self.price_lyd = price_lyd
        if price_mad is not None:
            self.price_mad = price_mad
        if price_mdl is not None:
            self.price_mdl = price_mdl
        if price_mga is not None:
            self.price_mga = price_mga
        if price_mkd is not None:
            self.price_mkd = price_mkd
        if price_mmk is not None:
            self.price_mmk = price_mmk
        if price_mnt is not None:
            self.price_mnt = price_mnt
        if price_mop is not None:
            self.price_mop = price_mop
        if price_mru is not None:
            self.price_mru = price_mru
        if price_mur is not None:
            self.price_mur = price_mur
        if price_mvr is not None:
            self.price_mvr = price_mvr
        if price_mwk is not None:
            self.price_mwk = price_mwk
        if price_mxn is not None:
            self.price_mxn = price_mxn
        if price_myr is not None:
            self.price_myr = price_myr
        if price_mzn is not None:
            self.price_mzn = price_mzn
        if price_nad is not None:
            self.price_nad = price_nad
        if price_ngn is not None:
            self.price_ngn = price_ngn
        if price_nio is not None:
            self.price_nio = price_nio
        if price_nok is not None:
            self.price_nok = price_nok
        if price_npr is not None:
            self.price_npr = price_npr
        if price_nzd is not None:
            self.price_nzd = price_nzd
        if price_omr is not None:
            self.price_omr = price_omr
        if price_pab is not None:
            self.price_pab = price_pab
        if price_pen is not None:
            self.price_pen = price_pen
        if price_pgk is not None:
            self.price_pgk = price_pgk
        if price_php is not None:
            self.price_php = price_php
        if price_pkr is not None:
            self.price_pkr = price_pkr
        if price_pln is not None:
            self.price_pln = price_pln
        if price_pyg is not None:
            self.price_pyg = price_pyg
        if price_qar is not None:
            self.price_qar = price_qar
        if price_rsd is not None:
            self.price_rsd = price_rsd
        if price_rub is not None:
            self.price_rub = price_rub
        if price_rwf is not None:
            self.price_rwf = price_rwf
        if price_sar is not None:
            self.price_sar = price_sar
        if price_sbd is not None:
            self.price_sbd = price_sbd
        if price_scr is not None:
            self.price_scr = price_scr
        if price_sdg is not None:
            self.price_sdg = price_sdg
        if price_sek is not None:
            self.price_sek = price_sek
        if price_sgd is not None:
            self.price_sgd = price_sgd
        if price_shp is not None:
            self.price_shp = price_shp
        if price_sll is not None:
            self.price_sll = price_sll
        if price_sos is not None:
            self.price_sos = price_sos
        if price_srd is not None:
            self.price_srd = price_srd
        if price_ssp is not None:
            self.price_ssp = price_ssp
        if price_stn is not None:
            self.price_stn = price_stn
        if price_syp is not None:
            self.price_syp = price_syp
        if price_szl is not None:
            self.price_szl = price_szl
        if price_thb is not None:
            self.price_thb = price_thb
        if price_tjs is not None:
            self.price_tjs = price_tjs
        if price_tmt is not None:
            self.price_tmt = price_tmt
        if price_tnd is not None:
            self.price_tnd = price_tnd
        if price_top is not None:
            self.price_top = price_top
        if price_try is not None:
            self.price_try = price_try
        if price_ttd is not None:
            self.price_ttd = price_ttd
        if price_twd is not None:
            self.price_twd = price_twd
        if price_tzs is not None:
            self.price_tzs = price_tzs
        if price_uah is not None:
            self.price_uah = price_uah
        if price_ugx is not None:
            self.price_ugx = price_ugx
        if price_uyu is not None:
            self.price_uyu = price_uyu
        if price_uzs is not None:
            self.price_uzs = price_uzs
        if price_ves is not None:
            self.price_ves = price_ves
        if price_vnd is not None:
            self.price_vnd = price_vnd
        if price_vuv is not None:
            self.price_vuv = price_vuv
        if price_wst is not None:
            self.price_wst = price_wst
        if price_xaf is not None:
            self.price_xaf = price_xaf
        if price_xcd is not None:
            self.price_xcd = price_xcd
        if price_xof is not None:
            self.price_xof = price_xof
        if price_xpf is not None:
            self.price_xpf = price_xpf
        if price_yer is not None:
            self.price_yer = price_yer
        if price_zar is not None:
            self.price_zar = price_zar
        if price_zmw is not None:
            self.price_zmw = price_zmw
        if price_zwl is not None:
            self.price_zwl = price_zwl

    @property
    def id(self):
        """Gets the id of this Product.  # noqa: E501


        :return: The id of this Product.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Product.


        :param id: The id of this Product.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def category(self):
        """Gets the category of this Product.  # noqa: E501


        :return: The category of this Product.  # noqa: E501
        :rtype: int
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this Product.


        :param category: The category of this Product.  # noqa: E501
        :type: int
        """

        self._category = category

    @property
    def type(self):
        """Gets the type of this Product.  # noqa: E501


        :return: The type of this Product.  # noqa: E501
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Product.


        :param type: The type of this Product.  # noqa: E501
        :type: int
        """
        if self._configuration.client_side_validation and type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def currency(self):
        """Gets the currency of this Product.  # noqa: E501


        :return: The currency of this Product.  # noqa: E501
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Product.


        :param currency: The currency of this Product.  # noqa: E501
        :type: str
        """

        self._currency = currency

    @property
    def unit(self):
        """Gets the unit of this Product.  # noqa: E501


        :return: The unit of this Product.  # noqa: E501
        :rtype: str
        """
        return self._unit

    @unit.setter
    def unit(self, unit):
        """Sets the unit of this Product.


        :param unit: The unit of this Product.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and unit is None:
            raise ValueError("Invalid value for `unit`, must not be `None`")  # noqa: E501
        if (self._configuration.client_side_validation and
                unit is not None and len(unit) > 20):
            raise ValueError("Invalid value for `unit`, length must be less than or equal to `20`")  # noqa: E501
        if (self._configuration.client_side_validation and
                unit is not None and len(unit) < 1):
            raise ValueError("Invalid value for `unit`, length must be greater than or equal to `1`")  # noqa: E501

        self._unit = unit

    @property
    def name(self):
        """Gets the name of this Product.  # noqa: E501


        :return: The name of this Product.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Product.


        :param name: The name of this Product.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501
        if (self._configuration.client_side_validation and
                name is not None and len(name) > 200):
            raise ValueError("Invalid value for `name`, length must be less than or equal to `200`")  # noqa: E501
        if (self._configuration.client_side_validation and
                name is not None and len(name) < 1):
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")  # noqa: E501

        self._name = name

    @property
    def price(self):
        """Gets the price of this Product.  # noqa: E501


        :return: The price of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this Product.


        :param price: The price of this Product.  # noqa: E501
        :type: str
        """
        if self._configuration.client_side_validation and price is None:
            raise ValueError("Invalid value for `price`, must not be `None`")  # noqa: E501

        self._price = price

    @property
    def discountable(self):
        """Gets the discountable of this Product.  # noqa: E501


        :return: The discountable of this Product.  # noqa: E501
        :rtype: bool
        """
        return self._discountable

    @discountable.setter
    def discountable(self, discountable):
        """Sets the discountable of this Product.


        :param discountable: The discountable of this Product.  # noqa: E501
        :type: bool
        """

        self._discountable = discountable

    @property
    def tax(self):
        """Gets the tax of this Product.  # noqa: E501


        :return: The tax of this Product.  # noqa: E501
        :rtype: str
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this Product.


        :param tax: The tax of this Product.  # noqa: E501
        :type: str
        """

        self._tax = tax

    @property
    def code(self):
        """Gets the code of this Product.  # noqa: E501


        :return: The code of this Product.  # noqa: E501
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Product.


        :param code: The code of this Product.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                code is not None and len(code) > 40):
            raise ValueError("Invalid value for `code`, length must be less than or equal to `40`")  # noqa: E501

        self._code = code

    @property
    def code_ean(self):
        """Gets the code_ean of this Product.  # noqa: E501


        :return: The code_ean of this Product.  # noqa: E501
        :rtype: str
        """
        return self._code_ean

    @code_ean.setter
    def code_ean(self, code_ean):
        """Sets the code_ean of this Product.


        :param code_ean: The code_ean of this Product.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                code_ean is not None and len(code_ean) > 40):
            raise ValueError("Invalid value for `code_ean`, length must be less than or equal to `40`")  # noqa: E501

        self._code_ean = code_ean

    @property
    def external_id(self):
        """Gets the external_id of this Product.  # noqa: E501


        :return: The external_id of this Product.  # noqa: E501
        :rtype: str
        """
        return self._external_id

    @external_id.setter
    def external_id(self, external_id):
        """Sets the external_id of this Product.


        :param external_id: The external_id of this Product.  # noqa: E501
        :type: str
        """
        if (self._configuration.client_side_validation and
                external_id is not None and len(external_id) > 40):
            raise ValueError("Invalid value for `external_id`, length must be less than or equal to `40`")  # noqa: E501

        self._external_id = external_id

    @property
    def active(self):
        """Gets the active of this Product.  # noqa: E501


        :return: The active of this Product.  # noqa: E501
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this Product.


        :param active: The active of this Product.  # noqa: E501
        :type: bool
        """

        self._active = active

    @property
    def minimum_stock(self):
        """Gets the minimum_stock of this Product.  # noqa: E501

        Folosit pentru a genera alerte de stock  # noqa: E501

        :return: The minimum_stock of this Product.  # noqa: E501
        :rtype: str
        """
        return self._minimum_stock

    @minimum_stock.setter
    def minimum_stock(self, minimum_stock):
        """Sets the minimum_stock of this Product.

        Folosit pentru a genera alerte de stock  # noqa: E501

        :param minimum_stock: The minimum_stock of this Product.  # noqa: E501
        :type: str
        """

        self._minimum_stock = minimum_stock

    @property
    def components(self):
        """Gets the components of this Product.  # noqa: E501


        :return: The components of this Product.  # noqa: E501
        :rtype: list[int]
        """
        return self._components

    @components.setter
    def components(self, components):
        """Sets the components of this Product.


        :param components: The components of this Product.  # noqa: E501
        :type: list[int]
        """

        self._components = components

    @property
    def conversions(self):
        """Gets the conversions of this Product.  # noqa: E501


        :return: The conversions of this Product.  # noqa: E501
        :rtype: list[int]
        """
        return self._conversions

    @conversions.setter
    def conversions(self, conversions):
        """Sets the conversions of this Product.


        :param conversions: The conversions of this Product.  # noqa: E501
        :type: list[int]
        """

        self._conversions = conversions

    @property
    def description(self):
        """Gets the description of this Product.  # noqa: E501


        :return: The description of this Product.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Product.


        :param description: The description of this Product.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def materials_are_billed(self):
        """Gets the materials_are_billed of this Product.  # noqa: E501


        :return: The materials_are_billed of this Product.  # noqa: E501
        :rtype: bool
        """
        return self._materials_are_billed

    @materials_are_billed.setter
    def materials_are_billed(self, materials_are_billed):
        """Sets the materials_are_billed of this Product.


        :param materials_are_billed: The materials_are_billed of this Product.  # noqa: E501
        :type: bool
        """

        self._materials_are_billed = materials_are_billed

    @property
    def price_contains_tax(self):
        """Gets the price_contains_tax of this Product.  # noqa: E501


        :return: The price_contains_tax of this Product.  # noqa: E501
        :rtype: bool
        """
        return self._price_contains_tax

    @price_contains_tax.setter
    def price_contains_tax(self, price_contains_tax):
        """Sets the price_contains_tax of this Product.


        :param price_contains_tax: The price_contains_tax of this Product.  # noqa: E501
        :type: bool
        """

        self._price_contains_tax = price_contains_tax

    @property
    def sale_price(self):
        """Gets the sale_price of this Product.  # noqa: E501


        :return: The sale_price of this Product.  # noqa: E501
        :rtype: str
        """
        return self._sale_price

    @sale_price.setter
    def sale_price(self, sale_price):
        """Sets the sale_price of this Product.


        :param sale_price: The sale_price of this Product.  # noqa: E501
        :type: str
        """

        self._sale_price = sale_price

    @property
    def category_order(self):
        """Gets the category_order of this Product.  # noqa: E501


        :return: The category_order of this Product.  # noqa: E501
        :rtype: int
        """
        return self._category_order

    @category_order.setter
    def category_order(self, category_order):
        """Sets the category_order of this Product.


        :param category_order: The category_order of this Product.  # noqa: E501
        :type: int
        """
        if (self._configuration.client_side_validation and
                category_order is not None and category_order > 9223372036854775807):  # noqa: E501
            raise ValueError("Invalid value for `category_order`, must be a value less than or equal to `9223372036854775807`")  # noqa: E501
        if (self._configuration.client_side_validation and
                category_order is not None and category_order < 0):  # noqa: E501
            raise ValueError("Invalid value for `category_order`, must be a value greater than or equal to `0`")  # noqa: E501

        self._category_order = category_order

    @property
    def markup(self):
        """Gets the markup of this Product.  # noqa: E501


        :return: The markup of this Product.  # noqa: E501
        :rtype: int
        """
        return self._markup

    @markup.setter
    def markup(self, markup):
        """Sets the markup of this Product.


        :param markup: The markup of this Product.  # noqa: E501
        :type: int
        """
        if (self._configuration.client_side_validation and
                markup is not None and markup > 32767):  # noqa: E501
            raise ValueError("Invalid value for `markup`, must be a value less than or equal to `32767`")  # noqa: E501
        if (self._configuration.client_side_validation and
                markup is not None and markup < 0):  # noqa: E501
            raise ValueError("Invalid value for `markup`, must be a value greater than or equal to `0`")  # noqa: E501

        self._markup = markup

    @property
    def computed_markup(self):
        """Gets the computed_markup of this Product.  # noqa: E501


        :return: The computed_markup of this Product.  # noqa: E501
        :rtype: str
        """
        return self._computed_markup

    @computed_markup.setter
    def computed_markup(self, computed_markup):
        """Sets the computed_markup of this Product.


        :param computed_markup: The computed_markup of this Product.  # noqa: E501
        :type: str
        """

        self._computed_markup = computed_markup

    @property
    def width(self):
        """Gets the width of this Product.  # noqa: E501


        :return: The width of this Product.  # noqa: E501
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this Product.


        :param width: The width of this Product.  # noqa: E501
        :type: int
        """

        self._width = width

    @property
    def height(self):
        """Gets the height of this Product.  # noqa: E501


        :return: The height of this Product.  # noqa: E501
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this Product.


        :param height: The height of this Product.  # noqa: E501
        :type: int
        """

        self._height = height

    @property
    def depth(self):
        """Gets the depth of this Product.  # noqa: E501


        :return: The depth of this Product.  # noqa: E501
        :rtype: int
        """
        return self._depth

    @depth.setter
    def depth(self, depth):
        """Sets the depth of this Product.


        :param depth: The depth of this Product.  # noqa: E501
        :type: int
        """

        self._depth = depth

    @property
    def weight(self):
        """Gets the weight of this Product.  # noqa: E501


        :return: The weight of this Product.  # noqa: E501
        :rtype: int
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this Product.


        :param weight: The weight of this Product.  # noqa: E501
        :type: int
        """

        self._weight = weight

    @property
    def price_chf(self):
        """Gets the price_chf of this Product.  # noqa: E501


        :return: The price_chf of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_chf

    @price_chf.setter
    def price_chf(self, price_chf):
        """Sets the price_chf of this Product.


        :param price_chf: The price_chf of this Product.  # noqa: E501
        :type: str
        """

        self._price_chf = price_chf

    @property
    def price_fjd(self):
        """Gets the price_fjd of this Product.  # noqa: E501


        :return: The price_fjd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_fjd

    @price_fjd.setter
    def price_fjd(self, price_fjd):
        """Sets the price_fjd of this Product.


        :param price_fjd: The price_fjd of this Product.  # noqa: E501
        :type: str
        """

        self._price_fjd = price_fjd

    @property
    def price_gbp(self):
        """Gets the price_gbp of this Product.  # noqa: E501


        :return: The price_gbp of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_gbp

    @price_gbp.setter
    def price_gbp(self, price_gbp):
        """Sets the price_gbp of this Product.


        :param price_gbp: The price_gbp of this Product.  # noqa: E501
        :type: str
        """

        self._price_gbp = price_gbp

    @property
    def price_ron(self):
        """Gets the price_ron of this Product.  # noqa: E501


        :return: The price_ron of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ron

    @price_ron.setter
    def price_ron(self, price_ron):
        """Sets the price_ron of this Product.


        :param price_ron: The price_ron of this Product.  # noqa: E501
        :type: str
        """

        self._price_ron = price_ron

    @property
    def price_usd(self):
        """Gets the price_usd of this Product.  # noqa: E501


        :return: The price_usd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_usd

    @price_usd.setter
    def price_usd(self, price_usd):
        """Sets the price_usd of this Product.


        :param price_usd: The price_usd of this Product.  # noqa: E501
        :type: str
        """

        self._price_usd = price_usd

    @property
    def price_cad(self):
        """Gets the price_cad of this Product.  # noqa: E501


        :return: The price_cad of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_cad

    @price_cad.setter
    def price_cad(self, price_cad):
        """Sets the price_cad of this Product.


        :param price_cad: The price_cad of this Product.  # noqa: E501
        :type: str
        """

        self._price_cad = price_cad

    @property
    def price_eur(self):
        """Gets the price_eur of this Product.  # noqa: E501


        :return: The price_eur of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_eur

    @price_eur.setter
    def price_eur(self, price_eur):
        """Sets the price_eur of this Product.


        :param price_eur: The price_eur of this Product.  # noqa: E501
        :type: str
        """

        self._price_eur = price_eur

    @property
    def price_aed(self):
        """Gets the price_aed of this Product.  # noqa: E501


        :return: The price_aed of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_aed

    @price_aed.setter
    def price_aed(self, price_aed):
        """Sets the price_aed of this Product.


        :param price_aed: The price_aed of this Product.  # noqa: E501
        :type: str
        """

        self._price_aed = price_aed

    @property
    def price_afn(self):
        """Gets the price_afn of this Product.  # noqa: E501


        :return: The price_afn of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_afn

    @price_afn.setter
    def price_afn(self, price_afn):
        """Sets the price_afn of this Product.


        :param price_afn: The price_afn of this Product.  # noqa: E501
        :type: str
        """

        self._price_afn = price_afn

    @property
    def price_all(self):
        """Gets the price_all of this Product.  # noqa: E501


        :return: The price_all of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_all

    @price_all.setter
    def price_all(self, price_all):
        """Sets the price_all of this Product.


        :param price_all: The price_all of this Product.  # noqa: E501
        :type: str
        """

        self._price_all = price_all

    @property
    def price_amd(self):
        """Gets the price_amd of this Product.  # noqa: E501


        :return: The price_amd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_amd

    @price_amd.setter
    def price_amd(self, price_amd):
        """Sets the price_amd of this Product.


        :param price_amd: The price_amd of this Product.  # noqa: E501
        :type: str
        """

        self._price_amd = price_amd

    @property
    def price_ang(self):
        """Gets the price_ang of this Product.  # noqa: E501


        :return: The price_ang of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ang

    @price_ang.setter
    def price_ang(self, price_ang):
        """Sets the price_ang of this Product.


        :param price_ang: The price_ang of this Product.  # noqa: E501
        :type: str
        """

        self._price_ang = price_ang

    @property
    def price_aoa(self):
        """Gets the price_aoa of this Product.  # noqa: E501


        :return: The price_aoa of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_aoa

    @price_aoa.setter
    def price_aoa(self, price_aoa):
        """Sets the price_aoa of this Product.


        :param price_aoa: The price_aoa of this Product.  # noqa: E501
        :type: str
        """

        self._price_aoa = price_aoa

    @property
    def price_ars(self):
        """Gets the price_ars of this Product.  # noqa: E501


        :return: The price_ars of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ars

    @price_ars.setter
    def price_ars(self, price_ars):
        """Sets the price_ars of this Product.


        :param price_ars: The price_ars of this Product.  # noqa: E501
        :type: str
        """

        self._price_ars = price_ars

    @property
    def price_aud(self):
        """Gets the price_aud of this Product.  # noqa: E501


        :return: The price_aud of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_aud

    @price_aud.setter
    def price_aud(self, price_aud):
        """Sets the price_aud of this Product.


        :param price_aud: The price_aud of this Product.  # noqa: E501
        :type: str
        """

        self._price_aud = price_aud

    @property
    def price_awg(self):
        """Gets the price_awg of this Product.  # noqa: E501


        :return: The price_awg of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_awg

    @price_awg.setter
    def price_awg(self, price_awg):
        """Sets the price_awg of this Product.


        :param price_awg: The price_awg of this Product.  # noqa: E501
        :type: str
        """

        self._price_awg = price_awg

    @property
    def price_azn(self):
        """Gets the price_azn of this Product.  # noqa: E501


        :return: The price_azn of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_azn

    @price_azn.setter
    def price_azn(self, price_azn):
        """Sets the price_azn of this Product.


        :param price_azn: The price_azn of this Product.  # noqa: E501
        :type: str
        """

        self._price_azn = price_azn

    @property
    def price_bam(self):
        """Gets the price_bam of this Product.  # noqa: E501


        :return: The price_bam of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bam

    @price_bam.setter
    def price_bam(self, price_bam):
        """Sets the price_bam of this Product.


        :param price_bam: The price_bam of this Product.  # noqa: E501
        :type: str
        """

        self._price_bam = price_bam

    @property
    def price_bbd(self):
        """Gets the price_bbd of this Product.  # noqa: E501


        :return: The price_bbd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bbd

    @price_bbd.setter
    def price_bbd(self, price_bbd):
        """Sets the price_bbd of this Product.


        :param price_bbd: The price_bbd of this Product.  # noqa: E501
        :type: str
        """

        self._price_bbd = price_bbd

    @property
    def price_bdt(self):
        """Gets the price_bdt of this Product.  # noqa: E501


        :return: The price_bdt of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bdt

    @price_bdt.setter
    def price_bdt(self, price_bdt):
        """Sets the price_bdt of this Product.


        :param price_bdt: The price_bdt of this Product.  # noqa: E501
        :type: str
        """

        self._price_bdt = price_bdt

    @property
    def price_bgn(self):
        """Gets the price_bgn of this Product.  # noqa: E501


        :return: The price_bgn of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bgn

    @price_bgn.setter
    def price_bgn(self, price_bgn):
        """Sets the price_bgn of this Product.


        :param price_bgn: The price_bgn of this Product.  # noqa: E501
        :type: str
        """

        self._price_bgn = price_bgn

    @property
    def price_bhd(self):
        """Gets the price_bhd of this Product.  # noqa: E501


        :return: The price_bhd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bhd

    @price_bhd.setter
    def price_bhd(self, price_bhd):
        """Sets the price_bhd of this Product.


        :param price_bhd: The price_bhd of this Product.  # noqa: E501
        :type: str
        """

        self._price_bhd = price_bhd

    @property
    def price_bif(self):
        """Gets the price_bif of this Product.  # noqa: E501


        :return: The price_bif of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bif

    @price_bif.setter
    def price_bif(self, price_bif):
        """Sets the price_bif of this Product.


        :param price_bif: The price_bif of this Product.  # noqa: E501
        :type: str
        """

        self._price_bif = price_bif

    @property
    def price_bmd(self):
        """Gets the price_bmd of this Product.  # noqa: E501


        :return: The price_bmd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bmd

    @price_bmd.setter
    def price_bmd(self, price_bmd):
        """Sets the price_bmd of this Product.


        :param price_bmd: The price_bmd of this Product.  # noqa: E501
        :type: str
        """

        self._price_bmd = price_bmd

    @property
    def price_bnd(self):
        """Gets the price_bnd of this Product.  # noqa: E501


        :return: The price_bnd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bnd

    @price_bnd.setter
    def price_bnd(self, price_bnd):
        """Sets the price_bnd of this Product.


        :param price_bnd: The price_bnd of this Product.  # noqa: E501
        :type: str
        """

        self._price_bnd = price_bnd

    @property
    def price_bob(self):
        """Gets the price_bob of this Product.  # noqa: E501


        :return: The price_bob of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bob

    @price_bob.setter
    def price_bob(self, price_bob):
        """Sets the price_bob of this Product.


        :param price_bob: The price_bob of this Product.  # noqa: E501
        :type: str
        """

        self._price_bob = price_bob

    @property
    def price_brl(self):
        """Gets the price_brl of this Product.  # noqa: E501


        :return: The price_brl of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_brl

    @price_brl.setter
    def price_brl(self, price_brl):
        """Sets the price_brl of this Product.


        :param price_brl: The price_brl of this Product.  # noqa: E501
        :type: str
        """

        self._price_brl = price_brl

    @property
    def price_bsd(self):
        """Gets the price_bsd of this Product.  # noqa: E501


        :return: The price_bsd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bsd

    @price_bsd.setter
    def price_bsd(self, price_bsd):
        """Sets the price_bsd of this Product.


        :param price_bsd: The price_bsd of this Product.  # noqa: E501
        :type: str
        """

        self._price_bsd = price_bsd

    @property
    def price_btn(self):
        """Gets the price_btn of this Product.  # noqa: E501


        :return: The price_btn of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_btn

    @price_btn.setter
    def price_btn(self, price_btn):
        """Sets the price_btn of this Product.


        :param price_btn: The price_btn of this Product.  # noqa: E501
        :type: str
        """

        self._price_btn = price_btn

    @property
    def price_bwp(self):
        """Gets the price_bwp of this Product.  # noqa: E501


        :return: The price_bwp of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bwp

    @price_bwp.setter
    def price_bwp(self, price_bwp):
        """Sets the price_bwp of this Product.


        :param price_bwp: The price_bwp of this Product.  # noqa: E501
        :type: str
        """

        self._price_bwp = price_bwp

    @property
    def price_byn(self):
        """Gets the price_byn of this Product.  # noqa: E501


        :return: The price_byn of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_byn

    @price_byn.setter
    def price_byn(self, price_byn):
        """Sets the price_byn of this Product.


        :param price_byn: The price_byn of this Product.  # noqa: E501
        :type: str
        """

        self._price_byn = price_byn

    @property
    def price_bzd(self):
        """Gets the price_bzd of this Product.  # noqa: E501


        :return: The price_bzd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_bzd

    @price_bzd.setter
    def price_bzd(self, price_bzd):
        """Sets the price_bzd of this Product.


        :param price_bzd: The price_bzd of this Product.  # noqa: E501
        :type: str
        """

        self._price_bzd = price_bzd

    @property
    def price_cdf(self):
        """Gets the price_cdf of this Product.  # noqa: E501


        :return: The price_cdf of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_cdf

    @price_cdf.setter
    def price_cdf(self, price_cdf):
        """Sets the price_cdf of this Product.


        :param price_cdf: The price_cdf of this Product.  # noqa: E501
        :type: str
        """

        self._price_cdf = price_cdf

    @property
    def price_clp(self):
        """Gets the price_clp of this Product.  # noqa: E501


        :return: The price_clp of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_clp

    @price_clp.setter
    def price_clp(self, price_clp):
        """Sets the price_clp of this Product.


        :param price_clp: The price_clp of this Product.  # noqa: E501
        :type: str
        """

        self._price_clp = price_clp

    @property
    def price_cny(self):
        """Gets the price_cny of this Product.  # noqa: E501


        :return: The price_cny of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_cny

    @price_cny.setter
    def price_cny(self, price_cny):
        """Sets the price_cny of this Product.


        :param price_cny: The price_cny of this Product.  # noqa: E501
        :type: str
        """

        self._price_cny = price_cny

    @property
    def price_cop(self):
        """Gets the price_cop of this Product.  # noqa: E501


        :return: The price_cop of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_cop

    @price_cop.setter
    def price_cop(self, price_cop):
        """Sets the price_cop of this Product.


        :param price_cop: The price_cop of this Product.  # noqa: E501
        :type: str
        """

        self._price_cop = price_cop

    @property
    def price_crc(self):
        """Gets the price_crc of this Product.  # noqa: E501


        :return: The price_crc of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_crc

    @price_crc.setter
    def price_crc(self, price_crc):
        """Sets the price_crc of this Product.


        :param price_crc: The price_crc of this Product.  # noqa: E501
        :type: str
        """

        self._price_crc = price_crc

    @property
    def price_cup(self):
        """Gets the price_cup of this Product.  # noqa: E501


        :return: The price_cup of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_cup

    @price_cup.setter
    def price_cup(self, price_cup):
        """Sets the price_cup of this Product.


        :param price_cup: The price_cup of this Product.  # noqa: E501
        :type: str
        """

        self._price_cup = price_cup

    @property
    def price_cve(self):
        """Gets the price_cve of this Product.  # noqa: E501


        :return: The price_cve of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_cve

    @price_cve.setter
    def price_cve(self, price_cve):
        """Sets the price_cve of this Product.


        :param price_cve: The price_cve of this Product.  # noqa: E501
        :type: str
        """

        self._price_cve = price_cve

    @property
    def price_czk(self):
        """Gets the price_czk of this Product.  # noqa: E501


        :return: The price_czk of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_czk

    @price_czk.setter
    def price_czk(self, price_czk):
        """Sets the price_czk of this Product.


        :param price_czk: The price_czk of this Product.  # noqa: E501
        :type: str
        """

        self._price_czk = price_czk

    @property
    def price_djf(self):
        """Gets the price_djf of this Product.  # noqa: E501


        :return: The price_djf of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_djf

    @price_djf.setter
    def price_djf(self, price_djf):
        """Sets the price_djf of this Product.


        :param price_djf: The price_djf of this Product.  # noqa: E501
        :type: str
        """

        self._price_djf = price_djf

    @property
    def price_dkk(self):
        """Gets the price_dkk of this Product.  # noqa: E501


        :return: The price_dkk of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_dkk

    @price_dkk.setter
    def price_dkk(self, price_dkk):
        """Sets the price_dkk of this Product.


        :param price_dkk: The price_dkk of this Product.  # noqa: E501
        :type: str
        """

        self._price_dkk = price_dkk

    @property
    def price_dop(self):
        """Gets the price_dop of this Product.  # noqa: E501


        :return: The price_dop of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_dop

    @price_dop.setter
    def price_dop(self, price_dop):
        """Sets the price_dop of this Product.


        :param price_dop: The price_dop of this Product.  # noqa: E501
        :type: str
        """

        self._price_dop = price_dop

    @property
    def price_dzd(self):
        """Gets the price_dzd of this Product.  # noqa: E501


        :return: The price_dzd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_dzd

    @price_dzd.setter
    def price_dzd(self, price_dzd):
        """Sets the price_dzd of this Product.


        :param price_dzd: The price_dzd of this Product.  # noqa: E501
        :type: str
        """

        self._price_dzd = price_dzd

    @property
    def price_egp(self):
        """Gets the price_egp of this Product.  # noqa: E501


        :return: The price_egp of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_egp

    @price_egp.setter
    def price_egp(self, price_egp):
        """Sets the price_egp of this Product.


        :param price_egp: The price_egp of this Product.  # noqa: E501
        :type: str
        """

        self._price_egp = price_egp

    @property
    def price_ern(self):
        """Gets the price_ern of this Product.  # noqa: E501


        :return: The price_ern of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ern

    @price_ern.setter
    def price_ern(self, price_ern):
        """Sets the price_ern of this Product.


        :param price_ern: The price_ern of this Product.  # noqa: E501
        :type: str
        """

        self._price_ern = price_ern

    @property
    def price_etb(self):
        """Gets the price_etb of this Product.  # noqa: E501


        :return: The price_etb of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_etb

    @price_etb.setter
    def price_etb(self, price_etb):
        """Sets the price_etb of this Product.


        :param price_etb: The price_etb of this Product.  # noqa: E501
        :type: str
        """

        self._price_etb = price_etb

    @property
    def price_fkp(self):
        """Gets the price_fkp of this Product.  # noqa: E501


        :return: The price_fkp of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_fkp

    @price_fkp.setter
    def price_fkp(self, price_fkp):
        """Sets the price_fkp of this Product.


        :param price_fkp: The price_fkp of this Product.  # noqa: E501
        :type: str
        """

        self._price_fkp = price_fkp

    @property
    def price_gel(self):
        """Gets the price_gel of this Product.  # noqa: E501


        :return: The price_gel of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_gel

    @price_gel.setter
    def price_gel(self, price_gel):
        """Sets the price_gel of this Product.


        :param price_gel: The price_gel of this Product.  # noqa: E501
        :type: str
        """

        self._price_gel = price_gel

    @property
    def price_ghs(self):
        """Gets the price_ghs of this Product.  # noqa: E501


        :return: The price_ghs of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ghs

    @price_ghs.setter
    def price_ghs(self, price_ghs):
        """Sets the price_ghs of this Product.


        :param price_ghs: The price_ghs of this Product.  # noqa: E501
        :type: str
        """

        self._price_ghs = price_ghs

    @property
    def price_gip(self):
        """Gets the price_gip of this Product.  # noqa: E501


        :return: The price_gip of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_gip

    @price_gip.setter
    def price_gip(self, price_gip):
        """Sets the price_gip of this Product.


        :param price_gip: The price_gip of this Product.  # noqa: E501
        :type: str
        """

        self._price_gip = price_gip

    @property
    def price_gmd(self):
        """Gets the price_gmd of this Product.  # noqa: E501


        :return: The price_gmd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_gmd

    @price_gmd.setter
    def price_gmd(self, price_gmd):
        """Sets the price_gmd of this Product.


        :param price_gmd: The price_gmd of this Product.  # noqa: E501
        :type: str
        """

        self._price_gmd = price_gmd

    @property
    def price_gnf(self):
        """Gets the price_gnf of this Product.  # noqa: E501


        :return: The price_gnf of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_gnf

    @price_gnf.setter
    def price_gnf(self, price_gnf):
        """Sets the price_gnf of this Product.


        :param price_gnf: The price_gnf of this Product.  # noqa: E501
        :type: str
        """

        self._price_gnf = price_gnf

    @property
    def price_gtq(self):
        """Gets the price_gtq of this Product.  # noqa: E501


        :return: The price_gtq of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_gtq

    @price_gtq.setter
    def price_gtq(self, price_gtq):
        """Sets the price_gtq of this Product.


        :param price_gtq: The price_gtq of this Product.  # noqa: E501
        :type: str
        """

        self._price_gtq = price_gtq

    @property
    def price_gyd(self):
        """Gets the price_gyd of this Product.  # noqa: E501


        :return: The price_gyd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_gyd

    @price_gyd.setter
    def price_gyd(self, price_gyd):
        """Sets the price_gyd of this Product.


        :param price_gyd: The price_gyd of this Product.  # noqa: E501
        :type: str
        """

        self._price_gyd = price_gyd

    @property
    def price_hkd(self):
        """Gets the price_hkd of this Product.  # noqa: E501


        :return: The price_hkd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_hkd

    @price_hkd.setter
    def price_hkd(self, price_hkd):
        """Sets the price_hkd of this Product.


        :param price_hkd: The price_hkd of this Product.  # noqa: E501
        :type: str
        """

        self._price_hkd = price_hkd

    @property
    def price_hnl(self):
        """Gets the price_hnl of this Product.  # noqa: E501


        :return: The price_hnl of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_hnl

    @price_hnl.setter
    def price_hnl(self, price_hnl):
        """Sets the price_hnl of this Product.


        :param price_hnl: The price_hnl of this Product.  # noqa: E501
        :type: str
        """

        self._price_hnl = price_hnl

    @property
    def price_hrk(self):
        """Gets the price_hrk of this Product.  # noqa: E501


        :return: The price_hrk of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_hrk

    @price_hrk.setter
    def price_hrk(self, price_hrk):
        """Sets the price_hrk of this Product.


        :param price_hrk: The price_hrk of this Product.  # noqa: E501
        :type: str
        """

        self._price_hrk = price_hrk

    @property
    def price_htg(self):
        """Gets the price_htg of this Product.  # noqa: E501


        :return: The price_htg of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_htg

    @price_htg.setter
    def price_htg(self, price_htg):
        """Sets the price_htg of this Product.


        :param price_htg: The price_htg of this Product.  # noqa: E501
        :type: str
        """

        self._price_htg = price_htg

    @property
    def price_huf(self):
        """Gets the price_huf of this Product.  # noqa: E501


        :return: The price_huf of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_huf

    @price_huf.setter
    def price_huf(self, price_huf):
        """Sets the price_huf of this Product.


        :param price_huf: The price_huf of this Product.  # noqa: E501
        :type: str
        """

        self._price_huf = price_huf

    @property
    def price_idr(self):
        """Gets the price_idr of this Product.  # noqa: E501


        :return: The price_idr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_idr

    @price_idr.setter
    def price_idr(self, price_idr):
        """Sets the price_idr of this Product.


        :param price_idr: The price_idr of this Product.  # noqa: E501
        :type: str
        """

        self._price_idr = price_idr

    @property
    def price_ils(self):
        """Gets the price_ils of this Product.  # noqa: E501


        :return: The price_ils of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ils

    @price_ils.setter
    def price_ils(self, price_ils):
        """Sets the price_ils of this Product.


        :param price_ils: The price_ils of this Product.  # noqa: E501
        :type: str
        """

        self._price_ils = price_ils

    @property
    def price_inr(self):
        """Gets the price_inr of this Product.  # noqa: E501


        :return: The price_inr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_inr

    @price_inr.setter
    def price_inr(self, price_inr):
        """Sets the price_inr of this Product.


        :param price_inr: The price_inr of this Product.  # noqa: E501
        :type: str
        """

        self._price_inr = price_inr

    @property
    def price_iqd(self):
        """Gets the price_iqd of this Product.  # noqa: E501


        :return: The price_iqd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_iqd

    @price_iqd.setter
    def price_iqd(self, price_iqd):
        """Sets the price_iqd of this Product.


        :param price_iqd: The price_iqd of this Product.  # noqa: E501
        :type: str
        """

        self._price_iqd = price_iqd

    @property
    def price_irr(self):
        """Gets the price_irr of this Product.  # noqa: E501


        :return: The price_irr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_irr

    @price_irr.setter
    def price_irr(self, price_irr):
        """Sets the price_irr of this Product.


        :param price_irr: The price_irr of this Product.  # noqa: E501
        :type: str
        """

        self._price_irr = price_irr

    @property
    def price_isk(self):
        """Gets the price_isk of this Product.  # noqa: E501


        :return: The price_isk of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_isk

    @price_isk.setter
    def price_isk(self, price_isk):
        """Sets the price_isk of this Product.


        :param price_isk: The price_isk of this Product.  # noqa: E501
        :type: str
        """

        self._price_isk = price_isk

    @property
    def price_jmd(self):
        """Gets the price_jmd of this Product.  # noqa: E501


        :return: The price_jmd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_jmd

    @price_jmd.setter
    def price_jmd(self, price_jmd):
        """Sets the price_jmd of this Product.


        :param price_jmd: The price_jmd of this Product.  # noqa: E501
        :type: str
        """

        self._price_jmd = price_jmd

    @property
    def price_jod(self):
        """Gets the price_jod of this Product.  # noqa: E501


        :return: The price_jod of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_jod

    @price_jod.setter
    def price_jod(self, price_jod):
        """Sets the price_jod of this Product.


        :param price_jod: The price_jod of this Product.  # noqa: E501
        :type: str
        """

        self._price_jod = price_jod

    @property
    def price_jpy(self):
        """Gets the price_jpy of this Product.  # noqa: E501


        :return: The price_jpy of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_jpy

    @price_jpy.setter
    def price_jpy(self, price_jpy):
        """Sets the price_jpy of this Product.


        :param price_jpy: The price_jpy of this Product.  # noqa: E501
        :type: str
        """

        self._price_jpy = price_jpy

    @property
    def price_kes(self):
        """Gets the price_kes of this Product.  # noqa: E501


        :return: The price_kes of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_kes

    @price_kes.setter
    def price_kes(self, price_kes):
        """Sets the price_kes of this Product.


        :param price_kes: The price_kes of this Product.  # noqa: E501
        :type: str
        """

        self._price_kes = price_kes

    @property
    def price_kgs(self):
        """Gets the price_kgs of this Product.  # noqa: E501


        :return: The price_kgs of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_kgs

    @price_kgs.setter
    def price_kgs(self, price_kgs):
        """Sets the price_kgs of this Product.


        :param price_kgs: The price_kgs of this Product.  # noqa: E501
        :type: str
        """

        self._price_kgs = price_kgs

    @property
    def price_khr(self):
        """Gets the price_khr of this Product.  # noqa: E501


        :return: The price_khr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_khr

    @price_khr.setter
    def price_khr(self, price_khr):
        """Sets the price_khr of this Product.


        :param price_khr: The price_khr of this Product.  # noqa: E501
        :type: str
        """

        self._price_khr = price_khr

    @property
    def price_kmf(self):
        """Gets the price_kmf of this Product.  # noqa: E501


        :return: The price_kmf of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_kmf

    @price_kmf.setter
    def price_kmf(self, price_kmf):
        """Sets the price_kmf of this Product.


        :param price_kmf: The price_kmf of this Product.  # noqa: E501
        :type: str
        """

        self._price_kmf = price_kmf

    @property
    def price_kpw(self):
        """Gets the price_kpw of this Product.  # noqa: E501


        :return: The price_kpw of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_kpw

    @price_kpw.setter
    def price_kpw(self, price_kpw):
        """Sets the price_kpw of this Product.


        :param price_kpw: The price_kpw of this Product.  # noqa: E501
        :type: str
        """

        self._price_kpw = price_kpw

    @property
    def price_krw(self):
        """Gets the price_krw of this Product.  # noqa: E501


        :return: The price_krw of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_krw

    @price_krw.setter
    def price_krw(self, price_krw):
        """Sets the price_krw of this Product.


        :param price_krw: The price_krw of this Product.  # noqa: E501
        :type: str
        """

        self._price_krw = price_krw

    @property
    def price_kwd(self):
        """Gets the price_kwd of this Product.  # noqa: E501


        :return: The price_kwd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_kwd

    @price_kwd.setter
    def price_kwd(self, price_kwd):
        """Sets the price_kwd of this Product.


        :param price_kwd: The price_kwd of this Product.  # noqa: E501
        :type: str
        """

        self._price_kwd = price_kwd

    @property
    def price_kyd(self):
        """Gets the price_kyd of this Product.  # noqa: E501


        :return: The price_kyd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_kyd

    @price_kyd.setter
    def price_kyd(self, price_kyd):
        """Sets the price_kyd of this Product.


        :param price_kyd: The price_kyd of this Product.  # noqa: E501
        :type: str
        """

        self._price_kyd = price_kyd

    @property
    def price_kzt(self):
        """Gets the price_kzt of this Product.  # noqa: E501


        :return: The price_kzt of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_kzt

    @price_kzt.setter
    def price_kzt(self, price_kzt):
        """Sets the price_kzt of this Product.


        :param price_kzt: The price_kzt of this Product.  # noqa: E501
        :type: str
        """

        self._price_kzt = price_kzt

    @property
    def price_lak(self):
        """Gets the price_lak of this Product.  # noqa: E501


        :return: The price_lak of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_lak

    @price_lak.setter
    def price_lak(self, price_lak):
        """Sets the price_lak of this Product.


        :param price_lak: The price_lak of this Product.  # noqa: E501
        :type: str
        """

        self._price_lak = price_lak

    @property
    def price_lbp(self):
        """Gets the price_lbp of this Product.  # noqa: E501


        :return: The price_lbp of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_lbp

    @price_lbp.setter
    def price_lbp(self, price_lbp):
        """Sets the price_lbp of this Product.


        :param price_lbp: The price_lbp of this Product.  # noqa: E501
        :type: str
        """

        self._price_lbp = price_lbp

    @property
    def price_lkr(self):
        """Gets the price_lkr of this Product.  # noqa: E501


        :return: The price_lkr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_lkr

    @price_lkr.setter
    def price_lkr(self, price_lkr):
        """Sets the price_lkr of this Product.


        :param price_lkr: The price_lkr of this Product.  # noqa: E501
        :type: str
        """

        self._price_lkr = price_lkr

    @property
    def price_lrd(self):
        """Gets the price_lrd of this Product.  # noqa: E501


        :return: The price_lrd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_lrd

    @price_lrd.setter
    def price_lrd(self, price_lrd):
        """Sets the price_lrd of this Product.


        :param price_lrd: The price_lrd of this Product.  # noqa: E501
        :type: str
        """

        self._price_lrd = price_lrd

    @property
    def price_lsl(self):
        """Gets the price_lsl of this Product.  # noqa: E501


        :return: The price_lsl of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_lsl

    @price_lsl.setter
    def price_lsl(self, price_lsl):
        """Sets the price_lsl of this Product.


        :param price_lsl: The price_lsl of this Product.  # noqa: E501
        :type: str
        """

        self._price_lsl = price_lsl

    @property
    def price_lyd(self):
        """Gets the price_lyd of this Product.  # noqa: E501


        :return: The price_lyd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_lyd

    @price_lyd.setter
    def price_lyd(self, price_lyd):
        """Sets the price_lyd of this Product.


        :param price_lyd: The price_lyd of this Product.  # noqa: E501
        :type: str
        """

        self._price_lyd = price_lyd

    @property
    def price_mad(self):
        """Gets the price_mad of this Product.  # noqa: E501


        :return: The price_mad of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mad

    @price_mad.setter
    def price_mad(self, price_mad):
        """Sets the price_mad of this Product.


        :param price_mad: The price_mad of this Product.  # noqa: E501
        :type: str
        """

        self._price_mad = price_mad

    @property
    def price_mdl(self):
        """Gets the price_mdl of this Product.  # noqa: E501


        :return: The price_mdl of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mdl

    @price_mdl.setter
    def price_mdl(self, price_mdl):
        """Sets the price_mdl of this Product.


        :param price_mdl: The price_mdl of this Product.  # noqa: E501
        :type: str
        """

        self._price_mdl = price_mdl

    @property
    def price_mga(self):
        """Gets the price_mga of this Product.  # noqa: E501


        :return: The price_mga of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mga

    @price_mga.setter
    def price_mga(self, price_mga):
        """Sets the price_mga of this Product.


        :param price_mga: The price_mga of this Product.  # noqa: E501
        :type: str
        """

        self._price_mga = price_mga

    @property
    def price_mkd(self):
        """Gets the price_mkd of this Product.  # noqa: E501


        :return: The price_mkd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mkd

    @price_mkd.setter
    def price_mkd(self, price_mkd):
        """Sets the price_mkd of this Product.


        :param price_mkd: The price_mkd of this Product.  # noqa: E501
        :type: str
        """

        self._price_mkd = price_mkd

    @property
    def price_mmk(self):
        """Gets the price_mmk of this Product.  # noqa: E501


        :return: The price_mmk of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mmk

    @price_mmk.setter
    def price_mmk(self, price_mmk):
        """Sets the price_mmk of this Product.


        :param price_mmk: The price_mmk of this Product.  # noqa: E501
        :type: str
        """

        self._price_mmk = price_mmk

    @property
    def price_mnt(self):
        """Gets the price_mnt of this Product.  # noqa: E501


        :return: The price_mnt of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mnt

    @price_mnt.setter
    def price_mnt(self, price_mnt):
        """Sets the price_mnt of this Product.


        :param price_mnt: The price_mnt of this Product.  # noqa: E501
        :type: str
        """

        self._price_mnt = price_mnt

    @property
    def price_mop(self):
        """Gets the price_mop of this Product.  # noqa: E501


        :return: The price_mop of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mop

    @price_mop.setter
    def price_mop(self, price_mop):
        """Sets the price_mop of this Product.


        :param price_mop: The price_mop of this Product.  # noqa: E501
        :type: str
        """

        self._price_mop = price_mop

    @property
    def price_mru(self):
        """Gets the price_mru of this Product.  # noqa: E501


        :return: The price_mru of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mru

    @price_mru.setter
    def price_mru(self, price_mru):
        """Sets the price_mru of this Product.


        :param price_mru: The price_mru of this Product.  # noqa: E501
        :type: str
        """

        self._price_mru = price_mru

    @property
    def price_mur(self):
        """Gets the price_mur of this Product.  # noqa: E501


        :return: The price_mur of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mur

    @price_mur.setter
    def price_mur(self, price_mur):
        """Sets the price_mur of this Product.


        :param price_mur: The price_mur of this Product.  # noqa: E501
        :type: str
        """

        self._price_mur = price_mur

    @property
    def price_mvr(self):
        """Gets the price_mvr of this Product.  # noqa: E501


        :return: The price_mvr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mvr

    @price_mvr.setter
    def price_mvr(self, price_mvr):
        """Sets the price_mvr of this Product.


        :param price_mvr: The price_mvr of this Product.  # noqa: E501
        :type: str
        """

        self._price_mvr = price_mvr

    @property
    def price_mwk(self):
        """Gets the price_mwk of this Product.  # noqa: E501


        :return: The price_mwk of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mwk

    @price_mwk.setter
    def price_mwk(self, price_mwk):
        """Sets the price_mwk of this Product.


        :param price_mwk: The price_mwk of this Product.  # noqa: E501
        :type: str
        """

        self._price_mwk = price_mwk

    @property
    def price_mxn(self):
        """Gets the price_mxn of this Product.  # noqa: E501


        :return: The price_mxn of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mxn

    @price_mxn.setter
    def price_mxn(self, price_mxn):
        """Sets the price_mxn of this Product.


        :param price_mxn: The price_mxn of this Product.  # noqa: E501
        :type: str
        """

        self._price_mxn = price_mxn

    @property
    def price_myr(self):
        """Gets the price_myr of this Product.  # noqa: E501


        :return: The price_myr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_myr

    @price_myr.setter
    def price_myr(self, price_myr):
        """Sets the price_myr of this Product.


        :param price_myr: The price_myr of this Product.  # noqa: E501
        :type: str
        """

        self._price_myr = price_myr

    @property
    def price_mzn(self):
        """Gets the price_mzn of this Product.  # noqa: E501


        :return: The price_mzn of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_mzn

    @price_mzn.setter
    def price_mzn(self, price_mzn):
        """Sets the price_mzn of this Product.


        :param price_mzn: The price_mzn of this Product.  # noqa: E501
        :type: str
        """

        self._price_mzn = price_mzn

    @property
    def price_nad(self):
        """Gets the price_nad of this Product.  # noqa: E501


        :return: The price_nad of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_nad

    @price_nad.setter
    def price_nad(self, price_nad):
        """Sets the price_nad of this Product.


        :param price_nad: The price_nad of this Product.  # noqa: E501
        :type: str
        """

        self._price_nad = price_nad

    @property
    def price_ngn(self):
        """Gets the price_ngn of this Product.  # noqa: E501


        :return: The price_ngn of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ngn

    @price_ngn.setter
    def price_ngn(self, price_ngn):
        """Sets the price_ngn of this Product.


        :param price_ngn: The price_ngn of this Product.  # noqa: E501
        :type: str
        """

        self._price_ngn = price_ngn

    @property
    def price_nio(self):
        """Gets the price_nio of this Product.  # noqa: E501


        :return: The price_nio of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_nio

    @price_nio.setter
    def price_nio(self, price_nio):
        """Sets the price_nio of this Product.


        :param price_nio: The price_nio of this Product.  # noqa: E501
        :type: str
        """

        self._price_nio = price_nio

    @property
    def price_nok(self):
        """Gets the price_nok of this Product.  # noqa: E501


        :return: The price_nok of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_nok

    @price_nok.setter
    def price_nok(self, price_nok):
        """Sets the price_nok of this Product.


        :param price_nok: The price_nok of this Product.  # noqa: E501
        :type: str
        """

        self._price_nok = price_nok

    @property
    def price_npr(self):
        """Gets the price_npr of this Product.  # noqa: E501


        :return: The price_npr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_npr

    @price_npr.setter
    def price_npr(self, price_npr):
        """Sets the price_npr of this Product.


        :param price_npr: The price_npr of this Product.  # noqa: E501
        :type: str
        """

        self._price_npr = price_npr

    @property
    def price_nzd(self):
        """Gets the price_nzd of this Product.  # noqa: E501


        :return: The price_nzd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_nzd

    @price_nzd.setter
    def price_nzd(self, price_nzd):
        """Sets the price_nzd of this Product.


        :param price_nzd: The price_nzd of this Product.  # noqa: E501
        :type: str
        """

        self._price_nzd = price_nzd

    @property
    def price_omr(self):
        """Gets the price_omr of this Product.  # noqa: E501


        :return: The price_omr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_omr

    @price_omr.setter
    def price_omr(self, price_omr):
        """Sets the price_omr of this Product.


        :param price_omr: The price_omr of this Product.  # noqa: E501
        :type: str
        """

        self._price_omr = price_omr

    @property
    def price_pab(self):
        """Gets the price_pab of this Product.  # noqa: E501


        :return: The price_pab of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_pab

    @price_pab.setter
    def price_pab(self, price_pab):
        """Sets the price_pab of this Product.


        :param price_pab: The price_pab of this Product.  # noqa: E501
        :type: str
        """

        self._price_pab = price_pab

    @property
    def price_pen(self):
        """Gets the price_pen of this Product.  # noqa: E501


        :return: The price_pen of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_pen

    @price_pen.setter
    def price_pen(self, price_pen):
        """Sets the price_pen of this Product.


        :param price_pen: The price_pen of this Product.  # noqa: E501
        :type: str
        """

        self._price_pen = price_pen

    @property
    def price_pgk(self):
        """Gets the price_pgk of this Product.  # noqa: E501


        :return: The price_pgk of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_pgk

    @price_pgk.setter
    def price_pgk(self, price_pgk):
        """Sets the price_pgk of this Product.


        :param price_pgk: The price_pgk of this Product.  # noqa: E501
        :type: str
        """

        self._price_pgk = price_pgk

    @property
    def price_php(self):
        """Gets the price_php of this Product.  # noqa: E501


        :return: The price_php of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_php

    @price_php.setter
    def price_php(self, price_php):
        """Sets the price_php of this Product.


        :param price_php: The price_php of this Product.  # noqa: E501
        :type: str
        """

        self._price_php = price_php

    @property
    def price_pkr(self):
        """Gets the price_pkr of this Product.  # noqa: E501


        :return: The price_pkr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_pkr

    @price_pkr.setter
    def price_pkr(self, price_pkr):
        """Sets the price_pkr of this Product.


        :param price_pkr: The price_pkr of this Product.  # noqa: E501
        :type: str
        """

        self._price_pkr = price_pkr

    @property
    def price_pln(self):
        """Gets the price_pln of this Product.  # noqa: E501


        :return: The price_pln of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_pln

    @price_pln.setter
    def price_pln(self, price_pln):
        """Sets the price_pln of this Product.


        :param price_pln: The price_pln of this Product.  # noqa: E501
        :type: str
        """

        self._price_pln = price_pln

    @property
    def price_pyg(self):
        """Gets the price_pyg of this Product.  # noqa: E501


        :return: The price_pyg of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_pyg

    @price_pyg.setter
    def price_pyg(self, price_pyg):
        """Sets the price_pyg of this Product.


        :param price_pyg: The price_pyg of this Product.  # noqa: E501
        :type: str
        """

        self._price_pyg = price_pyg

    @property
    def price_qar(self):
        """Gets the price_qar of this Product.  # noqa: E501


        :return: The price_qar of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_qar

    @price_qar.setter
    def price_qar(self, price_qar):
        """Sets the price_qar of this Product.


        :param price_qar: The price_qar of this Product.  # noqa: E501
        :type: str
        """

        self._price_qar = price_qar

    @property
    def price_rsd(self):
        """Gets the price_rsd of this Product.  # noqa: E501


        :return: The price_rsd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_rsd

    @price_rsd.setter
    def price_rsd(self, price_rsd):
        """Sets the price_rsd of this Product.


        :param price_rsd: The price_rsd of this Product.  # noqa: E501
        :type: str
        """

        self._price_rsd = price_rsd

    @property
    def price_rub(self):
        """Gets the price_rub of this Product.  # noqa: E501


        :return: The price_rub of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_rub

    @price_rub.setter
    def price_rub(self, price_rub):
        """Sets the price_rub of this Product.


        :param price_rub: The price_rub of this Product.  # noqa: E501
        :type: str
        """

        self._price_rub = price_rub

    @property
    def price_rwf(self):
        """Gets the price_rwf of this Product.  # noqa: E501


        :return: The price_rwf of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_rwf

    @price_rwf.setter
    def price_rwf(self, price_rwf):
        """Sets the price_rwf of this Product.


        :param price_rwf: The price_rwf of this Product.  # noqa: E501
        :type: str
        """

        self._price_rwf = price_rwf

    @property
    def price_sar(self):
        """Gets the price_sar of this Product.  # noqa: E501


        :return: The price_sar of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_sar

    @price_sar.setter
    def price_sar(self, price_sar):
        """Sets the price_sar of this Product.


        :param price_sar: The price_sar of this Product.  # noqa: E501
        :type: str
        """

        self._price_sar = price_sar

    @property
    def price_sbd(self):
        """Gets the price_sbd of this Product.  # noqa: E501


        :return: The price_sbd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_sbd

    @price_sbd.setter
    def price_sbd(self, price_sbd):
        """Sets the price_sbd of this Product.


        :param price_sbd: The price_sbd of this Product.  # noqa: E501
        :type: str
        """

        self._price_sbd = price_sbd

    @property
    def price_scr(self):
        """Gets the price_scr of this Product.  # noqa: E501


        :return: The price_scr of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_scr

    @price_scr.setter
    def price_scr(self, price_scr):
        """Sets the price_scr of this Product.


        :param price_scr: The price_scr of this Product.  # noqa: E501
        :type: str
        """

        self._price_scr = price_scr

    @property
    def price_sdg(self):
        """Gets the price_sdg of this Product.  # noqa: E501


        :return: The price_sdg of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_sdg

    @price_sdg.setter
    def price_sdg(self, price_sdg):
        """Sets the price_sdg of this Product.


        :param price_sdg: The price_sdg of this Product.  # noqa: E501
        :type: str
        """

        self._price_sdg = price_sdg

    @property
    def price_sek(self):
        """Gets the price_sek of this Product.  # noqa: E501


        :return: The price_sek of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_sek

    @price_sek.setter
    def price_sek(self, price_sek):
        """Sets the price_sek of this Product.


        :param price_sek: The price_sek of this Product.  # noqa: E501
        :type: str
        """

        self._price_sek = price_sek

    @property
    def price_sgd(self):
        """Gets the price_sgd of this Product.  # noqa: E501


        :return: The price_sgd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_sgd

    @price_sgd.setter
    def price_sgd(self, price_sgd):
        """Sets the price_sgd of this Product.


        :param price_sgd: The price_sgd of this Product.  # noqa: E501
        :type: str
        """

        self._price_sgd = price_sgd

    @property
    def price_shp(self):
        """Gets the price_shp of this Product.  # noqa: E501


        :return: The price_shp of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_shp

    @price_shp.setter
    def price_shp(self, price_shp):
        """Sets the price_shp of this Product.


        :param price_shp: The price_shp of this Product.  # noqa: E501
        :type: str
        """

        self._price_shp = price_shp

    @property
    def price_sll(self):
        """Gets the price_sll of this Product.  # noqa: E501


        :return: The price_sll of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_sll

    @price_sll.setter
    def price_sll(self, price_sll):
        """Sets the price_sll of this Product.


        :param price_sll: The price_sll of this Product.  # noqa: E501
        :type: str
        """

        self._price_sll = price_sll

    @property
    def price_sos(self):
        """Gets the price_sos of this Product.  # noqa: E501


        :return: The price_sos of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_sos

    @price_sos.setter
    def price_sos(self, price_sos):
        """Sets the price_sos of this Product.


        :param price_sos: The price_sos of this Product.  # noqa: E501
        :type: str
        """

        self._price_sos = price_sos

    @property
    def price_srd(self):
        """Gets the price_srd of this Product.  # noqa: E501


        :return: The price_srd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_srd

    @price_srd.setter
    def price_srd(self, price_srd):
        """Sets the price_srd of this Product.


        :param price_srd: The price_srd of this Product.  # noqa: E501
        :type: str
        """

        self._price_srd = price_srd

    @property
    def price_ssp(self):
        """Gets the price_ssp of this Product.  # noqa: E501


        :return: The price_ssp of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ssp

    @price_ssp.setter
    def price_ssp(self, price_ssp):
        """Sets the price_ssp of this Product.


        :param price_ssp: The price_ssp of this Product.  # noqa: E501
        :type: str
        """

        self._price_ssp = price_ssp

    @property
    def price_stn(self):
        """Gets the price_stn of this Product.  # noqa: E501


        :return: The price_stn of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_stn

    @price_stn.setter
    def price_stn(self, price_stn):
        """Sets the price_stn of this Product.


        :param price_stn: The price_stn of this Product.  # noqa: E501
        :type: str
        """

        self._price_stn = price_stn

    @property
    def price_syp(self):
        """Gets the price_syp of this Product.  # noqa: E501


        :return: The price_syp of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_syp

    @price_syp.setter
    def price_syp(self, price_syp):
        """Sets the price_syp of this Product.


        :param price_syp: The price_syp of this Product.  # noqa: E501
        :type: str
        """

        self._price_syp = price_syp

    @property
    def price_szl(self):
        """Gets the price_szl of this Product.  # noqa: E501


        :return: The price_szl of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_szl

    @price_szl.setter
    def price_szl(self, price_szl):
        """Sets the price_szl of this Product.


        :param price_szl: The price_szl of this Product.  # noqa: E501
        :type: str
        """

        self._price_szl = price_szl

    @property
    def price_thb(self):
        """Gets the price_thb of this Product.  # noqa: E501


        :return: The price_thb of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_thb

    @price_thb.setter
    def price_thb(self, price_thb):
        """Sets the price_thb of this Product.


        :param price_thb: The price_thb of this Product.  # noqa: E501
        :type: str
        """

        self._price_thb = price_thb

    @property
    def price_tjs(self):
        """Gets the price_tjs of this Product.  # noqa: E501


        :return: The price_tjs of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_tjs

    @price_tjs.setter
    def price_tjs(self, price_tjs):
        """Sets the price_tjs of this Product.


        :param price_tjs: The price_tjs of this Product.  # noqa: E501
        :type: str
        """

        self._price_tjs = price_tjs

    @property
    def price_tmt(self):
        """Gets the price_tmt of this Product.  # noqa: E501


        :return: The price_tmt of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_tmt

    @price_tmt.setter
    def price_tmt(self, price_tmt):
        """Sets the price_tmt of this Product.


        :param price_tmt: The price_tmt of this Product.  # noqa: E501
        :type: str
        """

        self._price_tmt = price_tmt

    @property
    def price_tnd(self):
        """Gets the price_tnd of this Product.  # noqa: E501


        :return: The price_tnd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_tnd

    @price_tnd.setter
    def price_tnd(self, price_tnd):
        """Sets the price_tnd of this Product.


        :param price_tnd: The price_tnd of this Product.  # noqa: E501
        :type: str
        """

        self._price_tnd = price_tnd

    @property
    def price_top(self):
        """Gets the price_top of this Product.  # noqa: E501


        :return: The price_top of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_top

    @price_top.setter
    def price_top(self, price_top):
        """Sets the price_top of this Product.


        :param price_top: The price_top of this Product.  # noqa: E501
        :type: str
        """

        self._price_top = price_top

    @property
    def price_try(self):
        """Gets the price_try of this Product.  # noqa: E501


        :return: The price_try of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_try

    @price_try.setter
    def price_try(self, price_try):
        """Sets the price_try of this Product.


        :param price_try: The price_try of this Product.  # noqa: E501
        :type: str
        """

        self._price_try = price_try

    @property
    def price_ttd(self):
        """Gets the price_ttd of this Product.  # noqa: E501


        :return: The price_ttd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ttd

    @price_ttd.setter
    def price_ttd(self, price_ttd):
        """Sets the price_ttd of this Product.


        :param price_ttd: The price_ttd of this Product.  # noqa: E501
        :type: str
        """

        self._price_ttd = price_ttd

    @property
    def price_twd(self):
        """Gets the price_twd of this Product.  # noqa: E501


        :return: The price_twd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_twd

    @price_twd.setter
    def price_twd(self, price_twd):
        """Sets the price_twd of this Product.


        :param price_twd: The price_twd of this Product.  # noqa: E501
        :type: str
        """

        self._price_twd = price_twd

    @property
    def price_tzs(self):
        """Gets the price_tzs of this Product.  # noqa: E501


        :return: The price_tzs of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_tzs

    @price_tzs.setter
    def price_tzs(self, price_tzs):
        """Sets the price_tzs of this Product.


        :param price_tzs: The price_tzs of this Product.  # noqa: E501
        :type: str
        """

        self._price_tzs = price_tzs

    @property
    def price_uah(self):
        """Gets the price_uah of this Product.  # noqa: E501


        :return: The price_uah of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_uah

    @price_uah.setter
    def price_uah(self, price_uah):
        """Sets the price_uah of this Product.


        :param price_uah: The price_uah of this Product.  # noqa: E501
        :type: str
        """

        self._price_uah = price_uah

    @property
    def price_ugx(self):
        """Gets the price_ugx of this Product.  # noqa: E501


        :return: The price_ugx of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ugx

    @price_ugx.setter
    def price_ugx(self, price_ugx):
        """Sets the price_ugx of this Product.


        :param price_ugx: The price_ugx of this Product.  # noqa: E501
        :type: str
        """

        self._price_ugx = price_ugx

    @property
    def price_uyu(self):
        """Gets the price_uyu of this Product.  # noqa: E501


        :return: The price_uyu of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_uyu

    @price_uyu.setter
    def price_uyu(self, price_uyu):
        """Sets the price_uyu of this Product.


        :param price_uyu: The price_uyu of this Product.  # noqa: E501
        :type: str
        """

        self._price_uyu = price_uyu

    @property
    def price_uzs(self):
        """Gets the price_uzs of this Product.  # noqa: E501


        :return: The price_uzs of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_uzs

    @price_uzs.setter
    def price_uzs(self, price_uzs):
        """Sets the price_uzs of this Product.


        :param price_uzs: The price_uzs of this Product.  # noqa: E501
        :type: str
        """

        self._price_uzs = price_uzs

    @property
    def price_ves(self):
        """Gets the price_ves of this Product.  # noqa: E501


        :return: The price_ves of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_ves

    @price_ves.setter
    def price_ves(self, price_ves):
        """Sets the price_ves of this Product.


        :param price_ves: The price_ves of this Product.  # noqa: E501
        :type: str
        """

        self._price_ves = price_ves

    @property
    def price_vnd(self):
        """Gets the price_vnd of this Product.  # noqa: E501


        :return: The price_vnd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_vnd

    @price_vnd.setter
    def price_vnd(self, price_vnd):
        """Sets the price_vnd of this Product.


        :param price_vnd: The price_vnd of this Product.  # noqa: E501
        :type: str
        """

        self._price_vnd = price_vnd

    @property
    def price_vuv(self):
        """Gets the price_vuv of this Product.  # noqa: E501


        :return: The price_vuv of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_vuv

    @price_vuv.setter
    def price_vuv(self, price_vuv):
        """Sets the price_vuv of this Product.


        :param price_vuv: The price_vuv of this Product.  # noqa: E501
        :type: str
        """

        self._price_vuv = price_vuv

    @property
    def price_wst(self):
        """Gets the price_wst of this Product.  # noqa: E501


        :return: The price_wst of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_wst

    @price_wst.setter
    def price_wst(self, price_wst):
        """Sets the price_wst of this Product.


        :param price_wst: The price_wst of this Product.  # noqa: E501
        :type: str
        """

        self._price_wst = price_wst

    @property
    def price_xaf(self):
        """Gets the price_xaf of this Product.  # noqa: E501


        :return: The price_xaf of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_xaf

    @price_xaf.setter
    def price_xaf(self, price_xaf):
        """Sets the price_xaf of this Product.


        :param price_xaf: The price_xaf of this Product.  # noqa: E501
        :type: str
        """

        self._price_xaf = price_xaf

    @property
    def price_xcd(self):
        """Gets the price_xcd of this Product.  # noqa: E501


        :return: The price_xcd of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_xcd

    @price_xcd.setter
    def price_xcd(self, price_xcd):
        """Sets the price_xcd of this Product.


        :param price_xcd: The price_xcd of this Product.  # noqa: E501
        :type: str
        """

        self._price_xcd = price_xcd

    @property
    def price_xof(self):
        """Gets the price_xof of this Product.  # noqa: E501


        :return: The price_xof of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_xof

    @price_xof.setter
    def price_xof(self, price_xof):
        """Sets the price_xof of this Product.


        :param price_xof: The price_xof of this Product.  # noqa: E501
        :type: str
        """

        self._price_xof = price_xof

    @property
    def price_xpf(self):
        """Gets the price_xpf of this Product.  # noqa: E501


        :return: The price_xpf of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_xpf

    @price_xpf.setter
    def price_xpf(self, price_xpf):
        """Sets the price_xpf of this Product.


        :param price_xpf: The price_xpf of this Product.  # noqa: E501
        :type: str
        """

        self._price_xpf = price_xpf

    @property
    def price_yer(self):
        """Gets the price_yer of this Product.  # noqa: E501


        :return: The price_yer of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_yer

    @price_yer.setter
    def price_yer(self, price_yer):
        """Sets the price_yer of this Product.


        :param price_yer: The price_yer of this Product.  # noqa: E501
        :type: str
        """

        self._price_yer = price_yer

    @property
    def price_zar(self):
        """Gets the price_zar of this Product.  # noqa: E501


        :return: The price_zar of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_zar

    @price_zar.setter
    def price_zar(self, price_zar):
        """Sets the price_zar of this Product.


        :param price_zar: The price_zar of this Product.  # noqa: E501
        :type: str
        """

        self._price_zar = price_zar

    @property
    def price_zmw(self):
        """Gets the price_zmw of this Product.  # noqa: E501


        :return: The price_zmw of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_zmw

    @price_zmw.setter
    def price_zmw(self, price_zmw):
        """Sets the price_zmw of this Product.


        :param price_zmw: The price_zmw of this Product.  # noqa: E501
        :type: str
        """

        self._price_zmw = price_zmw

    @property
    def price_zwl(self):
        """Gets the price_zwl of this Product.  # noqa: E501


        :return: The price_zwl of this Product.  # noqa: E501
        :rtype: str
        """
        return self._price_zwl

    @price_zwl.setter
    def price_zwl(self, price_zwl):
        """Sets the price_zwl of this Product.


        :param price_zwl: The price_zwl of this Product.  # noqa: E501
        :type: str
        """

        self._price_zwl = price_zwl

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Product, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Product):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, Product):
            return True

        return self.to_dict() != other.to_dict()
