on:
  workflow_dispatch:
  push:
    tags:
      - "v**"

name: Python release

env:
  name: ethers

jobs:
  macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Build wheels - x86_64
        uses: messense/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist
      - name: Test wheel - x86_64
        run: |
          pip install ${{ env.name }} --no-index --find-links dist --force-reinstall
          pip install pytest pytest-asyncio
          pytest
      - name: Build wheels - universal2
        uses: messense/maturin-action@v1
        with:
          args: --release --universal2 --out dist --no-sdist
      - name: Test wheel - universal2
        run: |
          pip install ${{ env.name }} --no-index --find-links dist --force-reinstall
          pytest
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x64, x86]
        python_version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: ${{ matrix.target }}
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      
      - uses: Swatinem/rust-cache@v1
      - name: Build wheels
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --no-sdist
      - name: Test wheel
        run: |
          pip install ${{ env.name }} --no-index --find-links dist --force-reinstall
          pip install pytest pytest-asyncio
          pytest
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64, i686]
        python_version: ["3.7", "3.8", "3.9", "3.10"]
        
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python_version }}
        architecture: x64
    - name: Build Wheels
      uses: messense/maturin-action@v1
      with:
        rust-toolchain: stable
        target: ${{ matrix.target }}
        manylinux: auto
        args: --release --out dist --no-sdist
    - name: Test wheel
      if: matrix.target == 'x86_64'
      run: |
        pip install ${{ env.name }} --no-index --find-links dist --force-reinstall
        pip install pytest pytest-asyncio
        pytest
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist


  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [windows, macos, linux]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: dist
      - name: Publish to PyPi
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        uses: messense/maturin-action@v1
        with:
          command: upload
          args: --skip-existing dist/*
