# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from code_engine_client import bot_api_conn_grpc_pb2 as bot__api__conn__grpc__pb2


class BotApiConnGrpcStub(object):
    """service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendBotMsg = channel.unary_unary(
                '/bot_api_conn_grpc.BotApiConnGrpc/SendBotMsg',
                request_serializer=bot__api__conn__grpc__pb2.SendBotMsgRequest.SerializeToString,
                response_deserializer=bot__api__conn__grpc__pb2.SendBotMsgResponse.FromString,
                )
        self.DriveEventMsg = channel.unary_unary(
                '/bot_api_conn_grpc.BotApiConnGrpc/DriveEventMsg',
                request_serializer=bot__api__conn__grpc__pb2.DriveEventMsgRequest.SerializeToString,
                response_deserializer=bot__api__conn__grpc__pb2.DriveEventMsgResponse.FromString,
                )
        self.CodeSaveMsg = channel.unary_unary(
                '/bot_api_conn_grpc.BotApiConnGrpc/CodeSaveMsg',
                request_serializer=bot__api__conn__grpc__pb2.CodeSaveMsgRequest.SerializeToString,
                response_deserializer=bot__api__conn__grpc__pb2.CodeSaveMsgResponse.FromString,
                )
        self.CodeTestMsg = channel.unary_unary(
                '/bot_api_conn_grpc.BotApiConnGrpc/CodeTestMsg',
                request_serializer=bot__api__conn__grpc__pb2.CodeTestMsgRequest.SerializeToString,
                response_deserializer=bot__api__conn__grpc__pb2.CodeTestMsgResponse.FromString,
                )
        self.CodePcMsg = channel.unary_unary(
                '/bot_api_conn_grpc.BotApiConnGrpc/CodePcMsg',
                request_serializer=bot__api__conn__grpc__pb2.CodePcMsgRequest.SerializeToString,
                response_deserializer=bot__api__conn__grpc__pb2.CodePcMsgResponse.FromString,
                )


class BotApiConnGrpcServicer(object):
    """service definition.
    """

    def SendBotMsg(self, request, context):
        """send msg to bot
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DriveEventMsg(self, request, context):
        """event msg from drive
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CodeSaveMsg(self, request, context):
        """code save button
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CodeTestMsg(self, request, context):
        """code test button
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CodePcMsg(self, request, context):
        """code pc button
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BotApiConnGrpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendBotMsg': grpc.unary_unary_rpc_method_handler(
                    servicer.SendBotMsg,
                    request_deserializer=bot__api__conn__grpc__pb2.SendBotMsgRequest.FromString,
                    response_serializer=bot__api__conn__grpc__pb2.SendBotMsgResponse.SerializeToString,
            ),
            'DriveEventMsg': grpc.unary_unary_rpc_method_handler(
                    servicer.DriveEventMsg,
                    request_deserializer=bot__api__conn__grpc__pb2.DriveEventMsgRequest.FromString,
                    response_serializer=bot__api__conn__grpc__pb2.DriveEventMsgResponse.SerializeToString,
            ),
            'CodeSaveMsg': grpc.unary_unary_rpc_method_handler(
                    servicer.CodeSaveMsg,
                    request_deserializer=bot__api__conn__grpc__pb2.CodeSaveMsgRequest.FromString,
                    response_serializer=bot__api__conn__grpc__pb2.CodeSaveMsgResponse.SerializeToString,
            ),
            'CodeTestMsg': grpc.unary_unary_rpc_method_handler(
                    servicer.CodeTestMsg,
                    request_deserializer=bot__api__conn__grpc__pb2.CodeTestMsgRequest.FromString,
                    response_serializer=bot__api__conn__grpc__pb2.CodeTestMsgResponse.SerializeToString,
            ),
            'CodePcMsg': grpc.unary_unary_rpc_method_handler(
                    servicer.CodePcMsg,
                    request_deserializer=bot__api__conn__grpc__pb2.CodePcMsgRequest.FromString,
                    response_serializer=bot__api__conn__grpc__pb2.CodePcMsgResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'bot_api_conn_grpc.BotApiConnGrpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BotApiConnGrpc(object):
    """service definition.
    """

    @staticmethod
    def SendBotMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bot_api_conn_grpc.BotApiConnGrpc/SendBotMsg',
            bot__api__conn__grpc__pb2.SendBotMsgRequest.SerializeToString,
            bot__api__conn__grpc__pb2.SendBotMsgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DriveEventMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bot_api_conn_grpc.BotApiConnGrpc/DriveEventMsg',
            bot__api__conn__grpc__pb2.DriveEventMsgRequest.SerializeToString,
            bot__api__conn__grpc__pb2.DriveEventMsgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CodeSaveMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bot_api_conn_grpc.BotApiConnGrpc/CodeSaveMsg',
            bot__api__conn__grpc__pb2.CodeSaveMsgRequest.SerializeToString,
            bot__api__conn__grpc__pb2.CodeSaveMsgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CodeTestMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bot_api_conn_grpc.BotApiConnGrpc/CodeTestMsg',
            bot__api__conn__grpc__pb2.CodeTestMsgRequest.SerializeToString,
            bot__api__conn__grpc__pb2.CodeTestMsgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CodePcMsg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/bot_api_conn_grpc.BotApiConnGrpc/CodePcMsg',
            bot__api__conn__grpc__pb2.CodePcMsgRequest.SerializeToString,
            bot__api__conn__grpc__pb2.CodePcMsgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
