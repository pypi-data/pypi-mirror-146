import numpy as np

pcelist = [2, 3, 4, 5]
pces = [0.8809823,
        0.8810921,
        0.8810151,
        0.8810211]

for pcers in pces:
    print(pcers-pces[-1])

# GQ-MC-HD-142890.out:31:mc:1000/1000: estxy[0]=0.8828239386763104
# GQ-MC-HD-142891.out:31:mc:1000/1000: estxy[0]=0.8804753821461133
# GQ-MC-HD-142892.out:31:mc:1000/1000: estxy[0]=0.8765455721067179
# GQ-MC-HD-142893.out:31:mc:1000/1000: estxy[0]=0.8792293283708384
# GQ-MC-HD-142894.out:31:mc:1000/1000: estxy[0]=0.8836003894252067
# GQ-MC-HD-142913.out:31:mc:1000/1000: estxy[0]=0.8809124472623131
# GQ-MC-HD-142914.out:31:mc:1000/1000: estxy[0]=0.8812300016316496
# GQ-MC-HD-142915.out:31:mc:1000/1000: estxy[0]=0.8804289552051776
# GQ-MC-HD-142916.out:31:mc:1000/1000: estxy[0]=0.8850765693327264
# GQ-MC-HD-142917.out:31:mc:1000/1000: estxy[0]=0.8872645563923877
# GQ-MC-HD-143002.out:31:mc:1000/1000: estxy[0]=0.8803112620439154
# GQ-MC-HD-143003.out:31:mc:1000/1000: estxy[0]=0.875519806999519
# GQ-MC-HD-143004.out:31:mc:1000/1000: estxy[0]=0.8881222875035939
# GQ-MC-HD-143005.out:31:mc:1000/1000: estxy[0]=0.8817222086354587
# GQ-MC-HD-143006.out:31:mc:1000/1000: estxy[0]=0.8806005056808069
# GQ-MC-HD-143129.out:31:mc:1000/1000: estxy[0]=0.8838255605764108
# GQ-MC-HD-143130.out:31:mc:1000/1000: estxy[0]=0.8814108402893766
# GQ-MC-HD-143131.out:31:mc:1000/1000: estxy[0]=0.8873272581049876
# GQ-MC-HD-143132.out:31:mc:1000/1000: estxy[0]=0.8863847982666916
# GQ-MC-HD-143133.out:31:mc:1000/1000: estxy[0]=0.882422682775834
# GQ-MC-HD-143408.out:31:mc:1000/1000: estxy[0]=0.8811875764207759
# GQ-MC-HD-143409.out:31:mc:1000/1000: estxy[0]=0.873636180527579
# GQ-MC-HD-143410.out:31:mc:1000/1000: estxy[0]=0.8809894477189878
# GQ-MC-HD-143411.out:31:mc:1000/1000: estxy[0]=0.8781940382265064
# GQ-MC-HD-143412.out:31:mc:1000/1000: estxy[0]=0.8837186749216912
# GQ-MC-HD-143413.out:31:mc:1000/1000: estxy[0]=0.8837725711072815
# GQ-MC-HD-143414.out:31:mc:1000/1000: estxy[0]=0.8823146765632011
# GQ-MC-HD-143415.out:31:mc:1000/1000: estxy[0]=0.8763341286133038
# GQ-MC-HD-143416.out:31:mc:1000/1000: estxy[0]=0.8819563421304956
# GQ-MC-HD-143417.out:31:mc:1000/1000: estxy[0]=0.8855113539488538

# GQ-MC-HD-142890.out:16:expected value of nu:
# GQ-MC-HD-142891.out:16:expected value of nu:
# GQ-MC-HD-142892.out:16:expected value of nu:
# GQ-MC-HD-142893.out:16:expected value of nu:
# GQ-MC-HD-142894.out:16:expected value of nu:
# GQ-MC-HD-142913.out:16:expected value of nu:
# GQ-MC-HD-142914.out:16:expected value of nu:
# GQ-MC-HD-142915.out:16:expected value of nu:
# GQ-MC-HD-142916.out:16:expected value of nu:
# GQ-MC-HD-142917.out:16:expected value of nu:
# GQ-MC-HD-143002.out:16:expected value of nu:
# GQ-MC-HD-143003.out:16:expected value of nu:
# GQ-MC-HD-143004.out:16:expected value of nu:
# GQ-MC-HD-143005.out:16:expected value of nu:
# GQ-MC-HD-143006.out:16:expected value of nu:
# GQ-MC-HD-143129.out:16:expected value of nu:
# GQ-MC-HD-143130.out:16:expected value of nu:
# GQ-MC-HD-143131.out:16:expected value of nu:
# GQ-MC-HD-143132.out:16:expected value of nu:
# GQ-MC-HD-143133.out:16:expected value of nu:
# GQ-MC-HD-143408.out:16:expected value of nu:
# GQ-MC-HD-143409.out:16:expected value of nu:
# GQ-MC-HD-143410.out:16:expected value of nu:
# GQ-MC-HD-143411.out:16:expected value of nu:
# GQ-MC-HD-143412.out:16:expected value of nu:
# GQ-MC-HD-143413.out:16:expected value of nu:
# GQ-MC-HD-143414.out:16:expected value of nu:
# GQ-MC-HD-143415.out:16:expected value of nu:
# GQ-MC-HD-143416.out:16:expected value of nu:
# GQ-MC-HD-143417.out:16:expected value of nu:
expvnu = [[0.00049182, 0.00050155, 0.00049816, 0.00050325],
          [0.00049716, 0.00050061, 0.00050035, 0.0005035],
          [0.0005042, 0.00049712, 0.00050626, 0.00050219],
          [0.00050475, 0.00049938, 0.00049966, 0.00050265],
          [0.00050492, 0.00049465, 0.00049479, 0.00050001],
          [0.0004958, 0.00049985, 0.00050094, 0.00050402],
          [0.00050151, 0.00050217, 0.0004961, 0.0004995],
          [0.00050114, 0.00050115, 0.00049765, 0.00050141],
          [0.00049812, 0.00049376, 0.000494, 0.00050402],
          [0.00050277, 0.00049204, 0.00049079, 0.00049994],
          [0.00050208, 0.00050285, 0.00049851, 0.00049756],
          [0.00050323, 0.00050519, 0.00050165, 0.00050316],
          [0.00049652, 0.00049754, 0.00050013, 0.00048786],
          [0.00050138, 0.0005033, 0.00049309, 0.00050104],
          [0.00049739, 0.00050017, 0.0005044, 0.00049925],
          [0.00050245, 0.00049415, 0.0004974, 0.00049949],
          [0.00049994, 0.00049777, 0.00050139, 0.00049911],
          [0.00049513, 0.00049755, 0.00049928, 0.0004941],
          [0.00049541, 0.00049516, 0.000497, 0.00049971],
          [0.00049962, 0.0004986, 0.00050025, 0.00049783],
          [0.00049766, 0.00050021, 0.00050022, 0.00050022],
          [0.00050605, 0.00050344, 0.00050576, 0.00050391],
          [0.0005031, 0.00049908, 0.00050332, 0.0004966],
          [0.00050371, 0.0005029, 0.00050237, 0.00049956],
          [0.00049937, 0.00049933, 0.0005002, 0.00049646],
          [0.00049844, 0.00050387, 0.00049533, 0.00049501],
          [0.00050187, 0.00049664, 0.00049606, 0.00050063],
          [0.00050317, 0.00050529, 0.00050112, 0.00050172],
          [0.00050059, 0.00049719, 0.00050025, 0.00049993],
          [0.00049373, 0.00050013, 0.00050115, 0.00049473]]

expnu = np.mean(np.array(expvnu))
print('MCs: expected value of nu: {0}'.format(expnu))

mcreslist = [0.8828239386763104,
             0.8804753821461133,
             0.8765455721067179,
             0.8792293283708384,
             0.8836003894252067,
             0.8809124472623131,
             0.8812300016316496,
             0.8804289552051776,
             0.8850765693327264,
             0.8872645563923877,
             0.8803112620439154,
             0.875519806999519,
             0.8881222875035939,
             0.8817222086354587,
             0.8806005056808069,
             0.8838255605764108,
             0.8814108402893766,
             0.8873272581049876,
             0.8863847982666916,
             0.882422682775834,
             0.8811875764207759,
             0.873636180527579,
             0.8809894477189878,
             0.8781940382265064,
             0.8837186749216912,
             0.8837725711072815,
             0.8823146765632011,
             0.8763341286133038,
             0.8819563421304956,
             0.8855113539488538]

chunkl = 5
npit = 1000
mcrsar = np.array(mcreslist)
chunks = np.arange(0, len(mcreslist), chunkl)
print(chunks)

for chk in chunks[1:]:
    estk = np.mean(mcrsar[:chk])
    print('{0} mc runs: estimated mean {1}'.format((chk)*npit, estk))

estk = np.mean(mcrsar)
print('{0} mc runs: estimated mean {1}'.format(len(mcreslist)*npit, estk))
