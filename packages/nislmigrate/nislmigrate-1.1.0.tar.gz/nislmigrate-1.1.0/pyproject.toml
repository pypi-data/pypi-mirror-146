[tool.poetry]
name = "nislmigrate"
version = "1.1.0"
description = "The tool for migrating SystemLink data."
authors = ["cnunnall <christian.nunnally@ni.com>"]
readme="README.md"
documentation="https://github.com/ni/NI-SystemLink-Migration"
classifiers=[
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
]

[tool.poetry.dependencies]
python = "^3.6.8"
argparse = "^1.4.0"
cryptography = "^35.0.0"
pymongo = "^3.12.1"

[tool.poetry.dev-dependencies]
tox = "^3.24.2"
pytest = "^6.2.4"
pyproject-flake8 = "^0.0.1a2"
testfixtures = "^6.18.1"
mypy = "^0.910"
taskipy = "^1.8.1"
types-requests = "^2.25.6"
requests = "^2.26.0"
flake8-quotes = "^3.3.0"

[tool.poetry.scripts]
nislmigrate = 'nislmigrate.migration_tool:main'

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.flake8]
max-line-length=120
exclude=".git,__pycache__,.venv"

[tool.mypy]
ignore_missing_imports ="True"

[tool.taskipy.tasks]
test_pytest = { cmd = "pytest", help = "runs all unit tests" }
lint_flake8 = { cmd = "pflake8", help = "runs pflake8 linter" }
lint_mypy = { cmd = "mypy .", help = "runs mypy linter" }
lint = { cmd = "task lint_flake8 && task lint_mypy", help = "runs all linters" }
test = { cmd = "pytest", help = "runs all tests." }
verify = { cmd = "task lint && task test", help = "Run all linters and then all tests." }

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py37, py36
isolated_build = True

[testenv]
deps = poetry
whitelist_externals = poetry
commands =
    poetry install -v
    poetry run pytest {posargs}
passenv =
    ProgramW6432
    ProgramData
"""
