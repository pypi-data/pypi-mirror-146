# autogenerated
# mypy: ignore-errors
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from rime_sdk.protos.continuous import continuous_pb2 as protos_dot_continuous_dot_continuous__pb2
from rime_sdk.protos.results_upload import results_upload_pb2 as protos_dot_results__upload_dot_results__upload__pb2


class CTServiceStub(object):
    """/////////////////////////////////////////////////////////////////
    CT Service
    /////////////////////////////////////////////////////////////////

    V13 CT endpoints
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetActiveCTInstanceID = channel.unary_unary(
                '/rime.CTService/GetActiveCTInstanceID',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.GetActiveCTInstanceIDRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.GetActiveCTInstanceIDResponse.FromString,
                )
        self.GetCTInstance = channel.unary_unary(
                '/rime.CTService/GetCTInstance',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.GetCTInstanceRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.GetCTInstanceResponse.FromString,
                )
        self.CTIncrementalUpload = channel.stream_unary(
                '/rime.CTService/CTIncrementalUpload',
                request_serializer=protos_dot_results__upload_dot_results__upload__pb2.Chunk.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.CTIncrementalUploadResponse.FromString,
                )
        self.CreateCTInstance = channel.unary_unary(
                '/rime.CTService/CreateCTInstance',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.CreateCTInstanceRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.CreateCTInstanceResponse.FromString,
                )
        self.DeleteCTInstance = channel.unary_unary(
                '/rime.CTService/DeleteCTInstance',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.DeleteCTInstanceRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.DeleteCTInstanceResponse.FromString,
                )
        self.UpdateCTInstance = channel.unary_unary(
                '/rime.CTService/UpdateCTInstance',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.UpdateCTInstanceRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.UpdateCTInstanceResponse.FromString,
                )
        self.ListCTInstanceIDs = channel.unary_unary(
                '/rime.CTService/ListCTInstanceIDs',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstanceIDsRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstanceIDsResponse.FromString,
                )
        self.ListProjectCTInstanceIDs = channel.unary_unary(
                '/rime.CTService/ListProjectCTInstanceIDs',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.ListProjectCTInstanceIDsRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.ListProjectCTInstanceIDsResponse.FromString,
                )
        self.ListProjectsCTInstanceIDs = channel.unary_stream(
                '/rime.CTService/ListProjectsCTInstanceIDs',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.ListProjectsCTInstanceIDsRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.ListProjectsCTInstanceIDsResponse.FromString,
                )
        self.ListCTInstances = channel.unary_unary(
                '/rime.CTService/ListCTInstances',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstancesRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstancesResponse.FromString,
                )
        self.ListCTSummaries = channel.unary_stream(
                '/rime.CTService/ListCTSummaries',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.ListCTSummariesRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.CTSummary.FromString,
                )
        self.ListCTDetails = channel.unary_stream(
                '/rime.CTService/ListCTDetails',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.ListCTDetailsRequest.SerializeToString,
                response_deserializer=protos_dot_results__upload_dot_results__upload__pb2.Chunk.FromString,
                )
        self.GetCTInstanceOTCliConfig = channel.unary_unary(
                '/rime.CTService/GetCTInstanceOTCliConfig',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.GetCTInstanceOTCliConfigRequest.SerializeToString,
                response_deserializer=protos_dot_results__upload_dot_results__upload__pb2.CLIConfig.FromString,
                )
        self.ListCTInstancesOTCliConfig = channel.unary_stream(
                '/rime.CTService/ListCTInstancesOTCliConfig',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstancesOTCliConfigRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstancesOTCliConfigResponse.FromString,
                )
        self.GetCTAggregateIssues = channel.unary_unary(
                '/rime.CTService/GetCTAggregateIssues',
                request_serializer=protos_dot_continuous_dot_continuous__pb2.GetCTAggregateIssuesRequest.SerializeToString,
                response_deserializer=protos_dot_continuous_dot_continuous__pb2.GetCTAggregateIssuesResponse.FromString,
                )


class CTServiceServicer(object):
    """/////////////////////////////////////////////////////////////////
    CT Service
    /////////////////////////////////////////////////////////////////

    V13 CT endpoints
    """

    def GetActiveCTInstanceID(self, request, context):
        """
        Errors:
        - NOT_FOUND (code 5) : when there is NO active CTInstance for a given Project we return this error
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCTInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CTIncrementalUpload(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCTInstance(self, request, context):
        """V12 CT endpoints are in the catch-all GRPCWebService gRPC service.
        TODO: move the V12 CT endpoints here.

        V13 CT endpoints.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCTInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCTInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCTInstanceIDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjectCTInstanceIDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjectsCTInstanceIDs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCTInstances(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCTSummaries(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCTDetails(self, request, context):
        """//////////////////////////////////
        ListCTDetails returns a stream of byte chunks due to limitation in gRPC per-message size.
        We serialize/deserialize the actual message using a proto message before/after sending the chunks.
        This does force us to keep the full message in memory on both send/receive side but the benefits of typing the payload is greater.
        Eventually we'll break the testRun into smaller units to be able to stream.
        //////////////////////////////////
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCTInstanceOTCliConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCTInstancesOTCliConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCTAggregateIssues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CTServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetActiveCTInstanceID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveCTInstanceID,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.GetActiveCTInstanceIDRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.GetActiveCTInstanceIDResponse.SerializeToString,
            ),
            'GetCTInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCTInstance,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.GetCTInstanceRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.GetCTInstanceResponse.SerializeToString,
            ),
            'CTIncrementalUpload': grpc.stream_unary_rpc_method_handler(
                    servicer.CTIncrementalUpload,
                    request_deserializer=protos_dot_results__upload_dot_results__upload__pb2.Chunk.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.CTIncrementalUploadResponse.SerializeToString,
            ),
            'CreateCTInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCTInstance,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.CreateCTInstanceRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.CreateCTInstanceResponse.SerializeToString,
            ),
            'DeleteCTInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCTInstance,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.DeleteCTInstanceRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.DeleteCTInstanceResponse.SerializeToString,
            ),
            'UpdateCTInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCTInstance,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.UpdateCTInstanceRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.UpdateCTInstanceResponse.SerializeToString,
            ),
            'ListCTInstanceIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCTInstanceIDs,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstanceIDsRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstanceIDsResponse.SerializeToString,
            ),
            'ListProjectCTInstanceIDs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjectCTInstanceIDs,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.ListProjectCTInstanceIDsRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.ListProjectCTInstanceIDsResponse.SerializeToString,
            ),
            'ListProjectsCTInstanceIDs': grpc.unary_stream_rpc_method_handler(
                    servicer.ListProjectsCTInstanceIDs,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.ListProjectsCTInstanceIDsRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.ListProjectsCTInstanceIDsResponse.SerializeToString,
            ),
            'ListCTInstances': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCTInstances,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstancesRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstancesResponse.SerializeToString,
            ),
            'ListCTSummaries': grpc.unary_stream_rpc_method_handler(
                    servicer.ListCTSummaries,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.ListCTSummariesRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.CTSummary.SerializeToString,
            ),
            'ListCTDetails': grpc.unary_stream_rpc_method_handler(
                    servicer.ListCTDetails,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.ListCTDetailsRequest.FromString,
                    response_serializer=protos_dot_results__upload_dot_results__upload__pb2.Chunk.SerializeToString,
            ),
            'GetCTInstanceOTCliConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCTInstanceOTCliConfig,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.GetCTInstanceOTCliConfigRequest.FromString,
                    response_serializer=protos_dot_results__upload_dot_results__upload__pb2.CLIConfig.SerializeToString,
            ),
            'ListCTInstancesOTCliConfig': grpc.unary_stream_rpc_method_handler(
                    servicer.ListCTInstancesOTCliConfig,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstancesOTCliConfigRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.ListCTInstancesOTCliConfigResponse.SerializeToString,
            ),
            'GetCTAggregateIssues': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCTAggregateIssues,
                    request_deserializer=protos_dot_continuous_dot_continuous__pb2.GetCTAggregateIssuesRequest.FromString,
                    response_serializer=protos_dot_continuous_dot_continuous__pb2.GetCTAggregateIssuesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'rime.CTService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CTService(object):
    """/////////////////////////////////////////////////////////////////
    CT Service
    /////////////////////////////////////////////////////////////////

    V13 CT endpoints
    """

    @staticmethod
    def GetActiveCTInstanceID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/GetActiveCTInstanceID',
            protos_dot_continuous_dot_continuous__pb2.GetActiveCTInstanceIDRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.GetActiveCTInstanceIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCTInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/GetCTInstance',
            protos_dot_continuous_dot_continuous__pb2.GetCTInstanceRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.GetCTInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CTIncrementalUpload(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/rime.CTService/CTIncrementalUpload',
            protos_dot_results__upload_dot_results__upload__pb2.Chunk.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.CTIncrementalUploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCTInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/CreateCTInstance',
            protos_dot_continuous_dot_continuous__pb2.CreateCTInstanceRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.CreateCTInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCTInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/DeleteCTInstance',
            protos_dot_continuous_dot_continuous__pb2.DeleteCTInstanceRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.DeleteCTInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCTInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/UpdateCTInstance',
            protos_dot_continuous_dot_continuous__pb2.UpdateCTInstanceRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.UpdateCTInstanceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCTInstanceIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/ListCTInstanceIDs',
            protos_dot_continuous_dot_continuous__pb2.ListCTInstanceIDsRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.ListCTInstanceIDsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProjectCTInstanceIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/ListProjectCTInstanceIDs',
            protos_dot_continuous_dot_continuous__pb2.ListProjectCTInstanceIDsRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.ListProjectCTInstanceIDsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProjectsCTInstanceIDs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/rime.CTService/ListProjectsCTInstanceIDs',
            protos_dot_continuous_dot_continuous__pb2.ListProjectsCTInstanceIDsRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.ListProjectsCTInstanceIDsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCTInstances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/ListCTInstances',
            protos_dot_continuous_dot_continuous__pb2.ListCTInstancesRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.ListCTInstancesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCTSummaries(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/rime.CTService/ListCTSummaries',
            protos_dot_continuous_dot_continuous__pb2.ListCTSummariesRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.CTSummary.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCTDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/rime.CTService/ListCTDetails',
            protos_dot_continuous_dot_continuous__pb2.ListCTDetailsRequest.SerializeToString,
            protos_dot_results__upload_dot_results__upload__pb2.Chunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCTInstanceOTCliConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/GetCTInstanceOTCliConfig',
            protos_dot_continuous_dot_continuous__pb2.GetCTInstanceOTCliConfigRequest.SerializeToString,
            protos_dot_results__upload_dot_results__upload__pb2.CLIConfig.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListCTInstancesOTCliConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/rime.CTService/ListCTInstancesOTCliConfig',
            protos_dot_continuous_dot_continuous__pb2.ListCTInstancesOTCliConfigRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.ListCTInstancesOTCliConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCTAggregateIssues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/rime.CTService/GetCTAggregateIssues',
            protos_dot_continuous_dot_continuous__pb2.GetCTAggregateIssuesRequest.SerializeToString,
            protos_dot_continuous_dot_continuous__pb2.GetCTAggregateIssuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
