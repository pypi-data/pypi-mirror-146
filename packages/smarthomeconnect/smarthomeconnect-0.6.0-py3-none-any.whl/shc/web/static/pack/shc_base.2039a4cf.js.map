{"version":3,"sources":["shc_base.js"],"names":["ws_path","path","startsWith","loc","window","location","new_proto","protocol","host","URL","href","forEachNodeRecursive","node","func","res","firstChild","nextSibling","SwitchWidget","domElement","writeValue","$","closest","checkbox","widget","subscribeIds","parseInt","getAttribute","confirm_values","split","map","v","confirm_message","update","value","for_id","checked","addEventListener","event","indexOf","target","confirm","SelectWidget","$semanticUIDropdown","sendingDisabled","dropdown","onDropdownChange","text","$selectedItem","JSON","parse","stringify","ButtonWidget","id","stateful","onClasses","offClasses","send","on","push","cls","classList","toggle","remove","add","TextDisplayWidget","innerHTML","TextInputWidget","BLUR_TIMEOUT","valueFromServer","timeout","clearValue","blur","document","activeElement","clearTimeout","keyCode","preventDefault","setTimeout","SliderWidget","$semanticUiSlider","slider","min","max","step","showLabelTicks","labelDistance","interpretLabel","Math","round","toString","onChange","onSliderChange","displayBox","parentNode","nodeType","contains","textContent","ColorChoserWidget","colorPicker","iro","ColorPicker","color","red","green","blue","rgb","HideRowWidget","_writeValue","childNodes","values","transition","WIDGET_TYPES","Map","widgetMap","ws","connectionErrorToast","connectionPreviouslyEstablished","init","console","info","widgetElements","querySelectorAll","widgetElement","type","obj","get","the_id","set","openWebsocket","WebSocket","shcRootURL","onopen","subscribe","onmessage","dispatch_message","onclose","e","reason","toast","showIcon","displayTime","closeOnClick","onerror","err","error","message","close","shcServerToken","keys","messageEvent","debug","data","reload","readyState","OPEN","sidebar","each","popup","parent","attr","position","movePopup","forcePosition"],"mappings":"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","file":"shc_base.2039a4cf.js","sourceRoot":"../../../../web_ui_src","sourcesContent":["/* Copyright 2020 Michael Thies <mail@mhthies.de>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations under the License.\n */\n\nfunction ws_path(path) {\n    if (path.startsWith(\"/\")) {\n        const loc = window.location;\n        let new_proto;\n        if (loc.protocol === \"https:\") {\n            new_proto = \"wss:\";\n        } else {\n            new_proto = \"ws:\";\n        }\n        return new_proto + \"//\" + loc.host + path;\n    } else {\n        const loc = new URL(path);\n        if (loc.protocol === \"https:\") {\n            loc.protocol = \"wss:\";\n        } else {\n            loc.protocol = \"ws:\";\n        }\n        return loc.href;\n    }\n}\n\nfunction forEachNodeRecursive(node, func) {\n    /**\n     * Iterate DOM subtree recursively in a depth-first pre-order, starting at `node`, and call `func` for each node\n     * (incl. `node`).\n     *\n     * If `func` returns `false`, the iteration is stopped.\n     */\n    let res = func(node);\n    if (res === false)\n        return false;\n    node = node.firstChild;\n    while (node) {\n        res = forEachNodeRecursive(node, func);\n        if (res === false)\n            return false;\n        node = node.nextSibling;\n    }\n}\n\nfunction SwitchWidget(domElement, writeValue) {\n    $(domElement).closest('.checkbox').checkbox();\n    const widget = this;\n    this.subscribeIds = [parseInt(domElement.getAttribute('data-id'))];\n    const confirm_values = domElement.getAttribute('data-confirm')\n        ? domElement.getAttribute('data-confirm')\n            .split(',')\n            .map(v => parseInt(v))\n        : [];\n    const confirm_message = domElement.getAttribute('data-confirm-message');\n\n    this.update = function(value, for_id) {\n        domElement.checked = value;\n    };\n\n    domElement.addEventListener('change', function (event) {\n        if (confirm_values.indexOf(1 * event.target.checked) !== -1) {\n            event.target.checked = !event.target.checked;\n            if (window.confirm(confirm_message || \"Are you sure?\")) {\n                event.target.checked = !event.target.checked;\n            } else {\n                return;\n            }\n        }\n        writeValue(widget.subscribeIds[0], event.target.checked);\n    });\n}\n\nfunction SelectWidget(domElement, writeValue) {\n    const widget = this;\n    const $semanticUIDropdown = $(domElement).closest('.dropdown');\n    let sendingDisabled = false;\n    $semanticUIDropdown.dropdown({\n        'onChange': onDropdownChange\n    });\n    this.subscribeIds = [parseInt(domElement.getAttribute('data-id'))];\n\n    this.update = function(value, for_id) {\n        sendingDisabled = true;\n        $semanticUIDropdown.dropdown('set selected', JSON.stringify(value));\n        sendingDisabled = false;\n    };\n\n    function onDropdownChange(value, text, $selectedItem) {\n        if (!sendingDisabled)\n            writeValue(widget.subscribeIds[0], JSON.parse(value));\n    }\n}\n\nfunction ButtonWidget(domElement, writeValue) {\n    const id = parseInt(domElement.getAttribute('data-id'));\n    const stateful = domElement.getAttribute('data-stateful') === 'True';\n    const confirm_values = domElement.getAttribute('data-confirm')\n        ? domElement.getAttribute('data-confirm')\n            .split(',')\n            .map(v => parseInt(v))\n        : [];\n    const confirm_message = domElement.getAttribute('data-confirm-message');\n    const onClasses = domElement.getAttribute('data-on-class')\n        ? domElement.getAttribute('data-on-class').split(\" \")\n        : [];\n    const offClasses = domElement.getAttribute('data-off-class')\n        ? domElement.getAttribute('data-off-class').split(\" \")\n        : [];\n    const send = !((domElement.getAttribute('data-send') || '') == 'false');\n    let on = false;\n    this.subscribeIds = [];\n\n    if (stateful)\n        this.subscribeIds.push(id);\n\n    this.update = function(value, for_id) {\n        on = value;\n        for (const cls of onClasses)\n            domElement.classList.toggle(cls, value);\n        for (const cls of offClasses)\n            domElement.classList.toggle(cls, !value);\n        domElement.classList.remove('loading', 'active');\n    };\n\n    if (send) {\n        domElement.addEventListener('click', function (event) {\n            let value = !on;\n            if (confirm_values.indexOf(1 * value) !== -1 && !window.confirm(confirm_message || \"Are you sure?\")) {\n                return;\n            }\n            writeValue(id, value);\n            if (stateful)\n                domElement.classList.add('active');\n        });\n    }\n}\n\nfunction TextDisplayWidget(domElement, writeValue) {\n    this.subscribeIds = [parseInt(domElement.getAttribute('data-id'))];\n\n    this.update = function(value, for_id) {\n        domElement.innerHTML = value;\n    };\n}\n\nfunction TextInputWidget(domElement, writeValue) {\n    const BLUR_TIMEOUT = 8000; // ms\n    const id = parseInt(domElement.getAttribute('data-id'));\n    this.subscribeIds = [id];\n    let valueFromServer = null;\n    let timeout = null;\n    let sendingDisabled = false;\n\n    this.update = function(value, for_id) {\n        valueFromServer = value;\n        if (document.activeElement !== domElement)\n            domElement.value = value;\n    };\n\n    function sendValue() {\n        writeValue(id, domElement.value);\n    }\n    function clearValue() {\n        sendingDisabled = true;\n        domElement.blur();\n        sendingDisabled = false;\n        domElement.value = valueFromServer;\n    }\n\n    domElement.addEventListener('blur', function (event) {\n        if (!sendingDisabled)\n            sendValue();\n    });\n    domElement.addEventListener('keydown', function (event) {\n        clearTimeout(timeout);\n        if (event.keyCode === 13) { /* ENTER */\n            domElement.blur();\n            event.preventDefault();\n            return;\n        } else if (event.keyCode === 27) { /* ESC */\n            clearValue();\n            return;\n        }\n        timeout = setTimeout(clearValue, BLUR_TIMEOUT);\n    });\n    domElement.addEventListener('mousedown', function (event) {\n        clearTimeout(timeout);\n        timeout = setTimeout(clearValue, BLUR_TIMEOUT);\n    })\n}\n\nfunction SliderWidget(domElement, writeValue) {\n    const id = parseInt(domElement.getAttribute('data-id'));\n    this.subscribeIds = [id];\n    let $semanticUiSlider = $(domElement);\n    let sendingDisabled = false;\n    $semanticUiSlider.slider({\n        min: 0,\n        max: 1000,\n        step: 1,\n        showLabelTicks: true,\n        labelDistance: 200,\n        interpretLabel: function(v) {\n            if (v % 250 === 0)\n                return Math.round(v / 10).toString() + \" %\";\n            else\n                return \"\";\n        },\n        onChange: onSliderChange\n    });\n    let displayBox = null;\n    forEachNodeRecursive(domElement.parentNode, function(node) {\n        if (node.nodeType === 1 && node.classList.contains('value-display')) {\n            displayBox = node;\n            return false;\n        }\n    });\n\n    this.update = function(value, for_id) {\n        sendingDisabled = true;\n        $semanticUiSlider.slider('set value', Math.round(value * 1000));\n        displayBox.textContent = Math.round(value * 100).toString() + \" %\";\n        sendingDisabled = false;\n    };\n\n    function onSliderChange() {\n        if (!sendingDisabled)\n            writeValue(id, $semanticUiSlider.slider('get value') / 1000);\n    }\n}\n\nfunction ColorChoserWidget(domElement, writeValue) {\n    const id = parseInt(domElement.getAttribute('data-id'));\n    this.subscribeIds = [id];\n    var colorPicker = new iro.ColorPicker(domElement, {\n        color: \"#000\"\n    });\n\n    colorPicker.on('input:end', function(color) {\n        writeValue(id, [color.red, color.green, color.blue]);\n    });\n\n    this.update = function(value, for_id) {\n        colorPicker.color.rgb = {'r': value[0], 'g': value[1], 'b': value[2]};\n    };\n}\n\nfunction HideRowWidget(domElement, _writeValue) {\n    const id = parseInt(domElement.getAttribute('data-id'));\n    this.subscribeIds = [id];\n    let displayBox = null;\n    for (const node of domElement.parentNode.childNodes.values()) {\n        if (node.nodeType === 1 && node.classList.contains('value-display')) {\n            displayBox = node;\n            break;\n        }\n    }\n\n    this.update = function(value, for_id) {\n        if (value === domElement.classList.contains('hidden'))\n            $(domElement).transition('zoom ' + (value ? 'in' : 'out'));\n    };\n}\n\nconst WIDGET_TYPES = new Map([\n   ['switch', SwitchWidget],\n   ['select', SelectWidget],\n   ['button', ButtonWidget],\n   ['text-display', TextDisplayWidget],\n   ['text-input', TextInputWidget],\n   ['slider', SliderWidget],\n   ['colorchoser', ColorChoserWidget],\n   ['hiderow', HideRowWidget],\n]);\n\n(function () {\n    let widgetMap = new Map();\n    let ws;\n    let connectionErrorToast = null;  // The Semantic UI 'toast' element which indicates a lost websocket connection.\n    let connectionPreviouslyEstablished = false; // true, once we established a websocket connection successfully.\n\n    function init() {\n        console.info(\"Intializing Smart Home Connect web UI.\");\n        const widgetElements = document.querySelectorAll('[data-widget]');\n        for (const widgetElement of widgetElements) {\n            let type = widgetElement.getAttribute('data-widget');\n            let obj = new (WIDGET_TYPES.get(type))(widgetElement, writeValue);\n            for (const the_id of obj.subscribeIds) {\n                widgetMap.set(the_id, obj);\n            }\n        }\n\n        openWebsocket();\n    }\n\n    function openWebsocket() {\n        console.info(\"Opening websocket ...\");\n        ws = new WebSocket(ws_path(shcRootURL + '/ws'));\n        ws.onopen = subscribe;\n        ws.onmessage = dispatch_message;\n        ws.onclose = function (e) {\n            console.info('Socket is closed. Reconnect will be attempted in 1 second.', e.reason);\n            if (!connectionErrorToast) {\n                connectionErrorToast = $('body').toast({\n                    'message': connectionPreviouslyEstablished\n                        ? \"Connection to websocket server failed ...\"\n                        : \"Connection to SHC server lost ...\",\n                    'class': 'error',\n                    showIcon: 'exclamation circle',\n                    displayTime: 0,\n                    closeOnClick: false\n                });\n            }\n            setTimeout(function () {\n                openWebsocket();\n            }, 1000);\n        };\n        ws.onerror = function (err) {\n            console.error('Socket encountered error: ', err.message, 'Closing socket');\n            ws.close();\n        };\n    }\n\n    function subscribe() {\n        if (connectionErrorToast) {\n            connectionErrorToast.toast('close');\n            connectionErrorToast = null;\n        }\n        console.info(\"Websocket opened. Subscribing widget values ...\");\n        // Send serverToken to server to reload page on server restarts\n        ws.send(JSON.stringify({\n            'serverToken': shcServerToken\n        }));\n        // Subscribe to WebConnector objects\n        for (const id of widgetMap.keys()) {\n            ws.send(JSON.stringify({\n                'sub': true,\n                'id': id\n            }));\n        }\n    }\n\n    function dispatch_message(messageEvent) {\n        console.debug(\"Received message \" + messageEvent.data);\n        let data = JSON.parse(messageEvent.data);\n        if (data['reload']) {\n            console.debug(\"Reloading page, because server told us to do so.\");\n            location.reload();\n        } else if (data['id']) {\n            console.debug(\"Updating widget id \" + data['id'].toString() + \" ...\");\n            widgetMap.get(data['id']).update(data['v'], data['id']);\n        } else {\n            console.error(\"Don't know how to handle websocket message \", data);\n        }\n    }\n\n    function writeValue(id, value) {\n        console.debug(\"Writing new value \" + JSON.stringify(value) + \" for widget id \" + id.toString());\n        try {\n            if (!ws)\n                throw \"Websocket not available\";\n            if (ws.readyState !== WebSocket.OPEN)\n                throw \"Websocket is not open.\"\n            ws.send(JSON.stringify({\n                'id': id,\n                'v': value\n            }));\n        } catch (e) {\n            console.error(\"Error while sending value via websocket:\", e);\n            $('body').toast({\n                'message': \"Error while sending value.\",\n                'class': 'warning',\n                showIcon: 'exclamation circle'});\n        }\n    }\n\n    document.addEventListener('DOMContentLoaded', (event) => init());\n})();\n\n$(function() {\n    $('.main-menu .ui.dropdown').dropdown();\n    $('.ui.sidebar').sidebar({transition: 'overlay'}).sidebar('attach events', '#mobile_item');\n    $('.shc.image-container .with-popup>*').each(function(){\n        $(this).popup({\n            on: 'click',\n            popup: $(this).parent().attr('data-popup-id'),\n            position: $(this).parent().attr('data-popup-position'),\n            movePopup: false,\n            forcePosition: true});\n    });\n});"]}