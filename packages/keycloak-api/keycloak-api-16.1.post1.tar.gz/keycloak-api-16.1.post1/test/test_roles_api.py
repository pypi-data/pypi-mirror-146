"""
    Keycloak Admin REST API

    This is a REST API reference for the Keycloak Admin  # noqa: E501

    The version of the OpenAPI document: 1
    Generated by: https://openapi-generator.tech
"""


import unittest

import keycloak_api
from keycloak_api.api.roles_api import RolesApi  # noqa: E501


class TestRolesApi(unittest.TestCase):
    """RolesApi unit test stubs"""

    def setUp(self):
        self.api = RolesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_realm_clients_id_roles_get(self):
        """Test case for realm_clients_id_roles_get

        Get all roles for the realm or client  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_post(self):
        """Test case for realm_clients_id_roles_post

        Create a new role for the realm or client  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_composites_clients_client_uuid_get(self):
        """Test case for realm_clients_id_roles_role_name_composites_clients_client_uuid_get

        Get client-level roles for the client that are in the role’s composite  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_composites_delete(self):
        """Test case for realm_clients_id_roles_role_name_composites_delete

        Remove roles from the role’s composite  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_composites_get(self):
        """Test case for realm_clients_id_roles_role_name_composites_get

        Get composites of the role  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_composites_post(self):
        """Test case for realm_clients_id_roles_role_name_composites_post

        Add a composite to the role  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_composites_realm_get(self):
        """Test case for realm_clients_id_roles_role_name_composites_realm_get

        Get realm-level roles of the role’s composite  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_delete(self):
        """Test case for realm_clients_id_roles_role_name_delete

        Delete a role by name  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_get(self):
        """Test case for realm_clients_id_roles_role_name_get

        Get a role by name  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_groups_get(self):
        """Test case for realm_clients_id_roles_role_name_groups_get

        Returns a stream of groups that have the specified role name  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_management_permissions_get(self):
        """Test case for realm_clients_id_roles_role_name_management_permissions_get

        Return object stating whether role Authorization permissions have been initialized or not and a reference  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_management_permissions_put(self):
        """Test case for realm_clients_id_roles_role_name_management_permissions_put

        Return object stating whether role Authorization permissions have been initialized or not and a reference  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_put(self):
        """Test case for realm_clients_id_roles_role_name_put

        Update a role by name  # noqa: E501
        """
        pass

    def test_realm_clients_id_roles_role_name_users_get(self):
        """Test case for realm_clients_id_roles_role_name_users_get

        Returns a stream of users that have the specified role name.  # noqa: E501
        """
        pass

    def test_realm_roles_get(self):
        """Test case for realm_roles_get

        Get all roles for the realm or client  # noqa: E501
        """
        pass

    def test_realm_roles_post(self):
        """Test case for realm_roles_post

        Create a new role for the realm or client  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_composites_clients_client_uuid_get(self):
        """Test case for realm_roles_role_name_composites_clients_client_uuid_get

        Get client-level roles for the client that are in the role’s composite  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_composites_delete(self):
        """Test case for realm_roles_role_name_composites_delete

        Remove roles from the role’s composite  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_composites_get(self):
        """Test case for realm_roles_role_name_composites_get

        Get composites of the role  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_composites_post(self):
        """Test case for realm_roles_role_name_composites_post

        Add a composite to the role  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_composites_realm_get(self):
        """Test case for realm_roles_role_name_composites_realm_get

        Get realm-level roles of the role’s composite  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_delete(self):
        """Test case for realm_roles_role_name_delete

        Delete a role by name  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_get(self):
        """Test case for realm_roles_role_name_get

        Get a role by name  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_groups_get(self):
        """Test case for realm_roles_role_name_groups_get

        Returns a stream of groups that have the specified role name  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_management_permissions_get(self):
        """Test case for realm_roles_role_name_management_permissions_get

        Return object stating whether role Authorization permissions have been initialized or not and a reference  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_management_permissions_put(self):
        """Test case for realm_roles_role_name_management_permissions_put

        Return object stating whether role Authorization permissions have been initialized or not and a reference  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_put(self):
        """Test case for realm_roles_role_name_put

        Update a role by name  # noqa: E501
        """
        pass

    def test_realm_roles_role_name_users_get(self):
        """Test case for realm_roles_role_name_users_get

        Returns a stream of users that have the specified role name.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
