{"version":3,"sources":["BtnSelect.tsx","index.tsx"],"names":["library","add","fas","fab","MyComponent","state","current","undefined","onClicked","idx","setState","prevState","Streamlit","setComponentValue","document","body","style","background","options","this","props","args","icons","bs_classes","defaultIndex","align","className","justifyContent","map","option","onClick","disabled","key","icon","marginRight","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","StrictMode","BtnSelect","getElementById"],"mappings":"4SAYAA,IAAQC,IAAIC,IAAIC,K,IAOVC,E,4MACGC,MAAQ,CAAEC,aAASC,G,EAoClBC,UAAY,SAACC,GACnB,EAAKC,UACH,SAAAC,GAAS,MAAK,CAAEL,QAASG,MACzB,kBAAMG,IAAUC,kBAAkBJ,O,uDArCtC,WACE,0EACAK,SAASC,KAAKC,MAAMC,WAAa,gB,oBAGnC,WAAqB,IAAD,SAEZC,EAAoBC,KAAKC,MAAMC,KAAX,QACpBC,EAAkBH,KAAKC,MAAMC,KAAX,MAClBE,EAAuBJ,KAAKC,MAAMC,KAAX,WACvBG,EAAuBL,KAAKC,MAAMC,KAAX,QACvBI,EAAgBN,KAAKC,MAAMC,KAAX,MAGhBf,EAAe,UAAGa,KAAKd,MAAMC,eAAd,QAAyBkB,EAG9C,OACE,kBAHc,MAGd,CAASE,UAAU,UAAUV,MAAO,CAACW,eAAe,GAAD,OAAIF,KACpDP,EAAQU,KAAI,SAACC,EAAQpB,GAAT,OACX,4BACEqB,QAAS,kBAAM,EAAKtB,UAAUC,IAC9BiB,UAAS,cAASH,EAAWd,IAC7BsB,SAAUtB,IAAQH,EAClB0B,IAAKvB,GAEL,kBAAC,IAAD,CAAiBwB,KAAI,UAAKX,EAAMb,IAAoBO,MAAO,CAACkB,YAAY,SACvEL,W,GA9BaM,KAkDXC,cAAwBhC,GCjEvCiC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAD,OAEF1B,SAAS2B,eAAe,W","file":"static/js/main.b3e96cc5.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, {ReactNode } from \"react\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {library,IconProp} from \"@fortawesome/fontawesome-svg-core\";\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\nimport {fab} from \"@fortawesome/free-brands-svg-icons\";\nimport './custom.css'\n\nlibrary.add(fas,fab)\n\ninterface State {\n  current: number | undefined\n}\n\n\nclass MyComponent extends StreamlitComponentBase<State> {\n  public state = { current: undefined }\n\n  componentDidMount(): void {\n    super.componentDidMount()\n    document.body.style.background = 'transparent'\n  }\n\n  render(): ReactNode {\n    // Arguments\n    const options: string[] = this.props.args['options']\n    const icons: string[] = this.props.args['icons']\n    const bs_classes: string[] = this.props.args['bs_classes']\n    const defaultIndex: number = this.props.args['default']\n    const align: number = this.props.args['align']\n\n    // Computed values\n    const current: number = this.state.current ?? defaultIndex\n    const Wrapper = 'div'\n\n    return (\n      <Wrapper className=\"wrapper\" style={{justifyContent:`${align}`}}>\n        {options.map((option, idx) => (\n          <button\n            onClick={() => this.onClicked(idx)}\n            className={`btn ${bs_classes[idx]}`}\n            disabled={idx === current}\n            key={idx}\n          >\n            <FontAwesomeIcon icon={`${icons[idx]}` as IconProp} style={{marginRight:'5px'}}/>\n            {option}\n          </button>\n        ))}\n      </Wrapper>\n    )\n  }\n\n  private onClicked = (idx: number): void => {\n    this.setState(\n      prevState => ({ current: idx }),\n      () => Streamlit.setComponentValue(idx)\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(MyComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport BtnSelect from \"./BtnSelect\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BtnSelect />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}