{"version":3,"sources":["Button.tsx","index.tsx"],"names":["library","add","fas","fab","MyComponent","props","state","click","onClicked","setState","prevState","Streamlit","setComponentValue","document","body","style","background","label","this","args","icon","left","right","bs_class","disabled","key","onClick","className","marginRight","display","marginLeft","StreamlitComponentBase","withStreamlitConnection","ReactDOM","render","StrictMode","getElementById"],"mappings":"oSAaAA,IAAQC,IAAIC,IAAIC,K,IAOVC,E,kDAOJ,WAAYC,GAA6B,IAAD,8BACtC,cAAMA,IAPDC,MAAQ,CAAEC,OAAO,GAMgB,EA6BhCC,UAAY,WAClB,EAAKC,UACH,SAAAC,GAAS,MAAK,CAAEH,OAAO,MACvB,kBAAMI,IAAUC,kBAAkB,EAAKN,MAAMC,WA9B/C,EAAKD,MAAMC,OAAQ,EAFmB,E,qDAJxC,WACE,0EACAM,SAASC,KAAKC,MAAMC,WAAa,gB,oBAOnC,WAAqB,IAAD,OAEZC,EAAgBC,KAAKb,MAAMc,KAAX,MAChBC,EAAeF,KAAKb,MAAMc,KAAX,KACfE,EAAeH,KAAKb,MAAMc,KAAX,KACfG,EAAgBJ,KAAKb,MAAMc,KAAX,MAChBI,EAAmBL,KAAKb,MAAMc,KAAX,SACnBK,EAAoBN,KAAKb,MAAMc,KAAX,SACpBM,EAAcP,KAAKb,MAAMc,KAAX,IAEpB,OACI,4BACIO,QAAS,kBAAM,EAAKlB,aACpBmB,UAAS,cAASJ,GAClBC,SAAUA,EACVC,IAAKA,GAEL,kBAAC,IAAD,CAAiBL,KAAI,UAAKA,GAAoBL,MAAO,CAACa,YAAY,MAAMC,QAAQ,GAAD,OAAIR,MAClFJ,EACH,kBAAC,IAAD,CAAiBG,KAAI,UAAKA,GAAoBL,MAAO,CAACe,WAAW,MAAMD,QAAQ,GAAD,OAAIP,W,GA/BlES,KAiDXC,cAAwB5B,GCjEvC6B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFtB,SAASuB,eAAe,W","file":"static/js/main.35a6668f.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, {ComponentProps,ReactNode } from \"react\"\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {library,IconProp} from \"@fortawesome/fontawesome-svg-core\";\nimport {fas} from \"@fortawesome/free-solid-svg-icons\";\nimport {fab} from \"@fortawesome/free-brands-svg-icons\";\nimport './custom.css'\n\n\nlibrary.add(fas,fab)\n\ninterface State {\n  click: boolean\n}\n\n\nclass MyComponent extends StreamlitComponentBase<State> {\n  public state = { click: false }\n\n  componentDidMount(): void {\n    super.componentDidMount()\n    document.body.style.background = 'transparent'\n  }\n  constructor(props: ComponentProps<any>) {\n    super(props)\n    this.state.click = false\n  }\n\n  render(): ReactNode {\n    // Arguments\n    const label: string = this.props.args['label']\n    const icon: string = this.props.args['icon']\n    const left: string = this.props.args['left']\n    const right: string = this.props.args['right']\n    const bs_class: string = this.props.args['bs_class']\n    const disabled: boolean = this.props.args['disabled']\n    const key: string = this.props.args['key']\n\n    return (\n        <button\n            onClick={() => this.onClicked()}\n            className={`btn ${bs_class}`}\n            disabled={disabled}\n            key={key}\n          >\n            <FontAwesomeIcon icon={`${icon}` as IconProp} style={{marginRight:'5px',display:`${left}`}}/>\n            {label}\n          <FontAwesomeIcon icon={`${icon}` as IconProp} style={{marginLeft:'5px',display:`${right}`}}/>\n          </button>\n    )\n  }\n\n  private onClicked = (): void => {\n    this.setState(\n      prevState => ({ click: true }),\n      () => Streamlit.setComponentValue(this.state.click)\n    )\n  }\n}\n\n// \"withStreamlitConnection\" is a wrapper function. It bootstraps the\n// connection between your component and the Streamlit app, and handles\n// passing arguments from Python -> Component.\n//\n// You don't need to edit withStreamlitConnection (but you're welcome to!).\nexport default withStreamlitConnection(MyComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Btn from \"./Button\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Btn />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}