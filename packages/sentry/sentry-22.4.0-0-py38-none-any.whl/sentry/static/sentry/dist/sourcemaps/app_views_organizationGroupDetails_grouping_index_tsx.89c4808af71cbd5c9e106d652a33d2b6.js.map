{"version":3,"file":"chunks/app_views_organizationGroupDetails_grouping_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"sjDAuCA,SAASA,EAAT,GAOU,UAPY,MACpBC,EADoB,QAEpBC,EAFoB,QAGpBC,EAHoB,QAIpBC,EAJoB,SAKpBC,EALoB,sBAMpBC,GACQ,EA8FR,GAAqB,iBAAVL,EACT,OAAO,QAAC,IAAD,CAAOM,KAAK,UAAZ,SAAuBN,IAGhC,GAAqB,MAAjBA,EAAMO,QAAN,UAAwBP,EAAMQ,oBAA9B,OAAwB,EAAoBC,OAAQ,CACtD,MAAM,KAACC,EAAD,QAAOC,GAAWX,EAAMQ,aAAaC,QACrC,OAACG,EAAD,MAASC,EAAT,SAAgBC,EAAhB,YAA0BC,GAnGlC,SAAyBC,GACvB,OAAQA,GACN,IAAK,gBACH,MAAO,CACLH,OAAOI,EAAAA,EAAAA,GAAE,qDACTH,UAAUG,EAAAA,EAAAA,GACR,gFAEFL,QACE,QAAC,KAAD,CACEM,SAAS,UACTC,GAAK,kBAAiBhB,YAAkBF,aAAmBmB,SAASC,SAFtE,UAIGJ,EAAAA,EAAAA,GAAE,oBAIX,IAAK,kBACH,MAAO,CACLJ,OAAOI,EAAAA,EAAAA,GACL,8GAIN,IAAK,YACH,MAAO,CACLJ,OAAOI,EAAAA,EAAAA,GAAE,6BAEb,IAAK,yBACH,MAAO,CACLJ,OAAOI,EAAAA,EAAAA,GAAE,qDACTH,UAAUG,EAAAA,EAAAA,GACR,kFAGN,IAAK,2BACH,MAAO,CACLJ,OACE,QAAC,EAAAS,SAAD,YACGL,EAAAA,EAAAA,GAAE,gCACH,QAAC,IAAD,CAAcX,KAAK,YAGvBQ,UACE,QAAC,EAAAQ,SAAD,YACE,uBACGL,EAAAA,EAAAA,GACC,kHAIJ,yBACE,wBACGM,EAAAA,EAAAA,IACC,uEACA,CAACC,QAAQ,0BAGb,wBACGD,EAAAA,EAAAA,IACC,kHACA,CAACC,QAAQ,+BAMnBT,aAAa,EACbH,QACE,QAAC,KAAD,CAAWa,IAAK,EAAhB,WACE,QAAC,KAAD,CACEP,SAAS,UACTC,GAAK,aAAYhB,cAAoBC,qCACrCsB,UAAWrB,EACXQ,MACGR,OAEGsB,GADAV,EAAAA,EAAAA,GAAE,qDANV,UAUGA,EAAAA,EAAAA,GAAE,gCAEL,QAAC,KAAD,CAAQW,KAAK,6FAAb,UACGX,EAAAA,EAAAA,GAAE,uBAKb,QACE,MAAO,IAUoCY,CAAgBnB,GAE/D,OACE,QAAC,KAAD,WACE,QAAC,IAAD,CACEoB,KAAK,QACLjB,MAAOA,MAAAA,EAAAA,EAASF,EAChBoB,YAAajB,EACbF,OAAQA,EACRG,YAAaA,MAMrB,OACE,QAAC,IAAD,CACEJ,SAASM,EAAAA,EAAAA,GAAE,0DACXf,QAASA,IA7HNH,EAAAA,YAAAA,eAkIT,U,yFCxJA,SAASiC,EAAT,GAAkE,IAAhD,YAACC,EAAD,WAAcC,EAAd,aAA0BC,GAAsB,EAChE,OACE,QAAC,EAAAb,SAAD,YACE,QAACc,EAAD,YACE,QAAC,IAAD,CACEC,KAAMJ,EACNE,aAAcA,EACdG,UAAQ,EACRC,WAAS,EACTC,WAAS,KAEX,QAACC,EAAD,WACE,QAACC,EAAD,YACE,QAACC,EAAD,CAAiBb,KAAK,UACtB,QAAC,IAAD,CACEc,KACEX,EAAYY,YACRZ,EAAYY,YACZZ,EAAYa,aAElBC,QAAQ9B,EAAAA,EAAAA,GAAE,kBAKlB,QAAC+B,EAAD,UAAad,OAzBVF,EAAAA,YAAAA,WA8BT,UAEMI,GAAe,OAAO,MAAP,qBAAH,2DAKZK,GAAY,OAAO,MAAP,qBAAH,2CAGNQ,EAAAA,EAAAA,GAAM,GAHA,gCAOTP,GAAc,OAAO,MAAP,qBAAH,qBAERO,EAAAA,EAAAA,GAAM,IAFE,wEAKFC,GAAKA,EAAEC,MAAMC,eALX,KAQXJ,GAAa,OAAO,MAAP,qBAAH,gGAMVL,GAAkB,OAAOU,EAAAA,GAAP,qBAAH,UACVH,GAAKA,EAAEC,MAAMG,SADH,KC3BrB,SAASC,IACP,OACE,QAACC,EAAD,WACE,QAAC,IAAD,CACE5B,KAAO,qCAAoC6B,mBACzC,6BACQA,mBACP,QAAOC,OAAOtC,SAASQ,qFAJ5B,WAOE,QAAC+B,EAAD,IAPF,KAO2B1C,EAAAA,EAAAA,GAAE,sBAMnC,SAAS2C,EAAT,GAAmF,YAAjE,IAACC,EAAD,QAAM5D,EAAN,SAAemB,EAAf,aAAyBe,EAAzB,OAAuC2B,EAAvC,SAA+C1D,GAAkB,EACjF,MAAM,OAAC2D,EAAD,MAASC,GAAS5C,EAAS6C,OAC1BC,EAAWC,IAAgBC,EAAAA,EAAAA,WAAS,IACpCC,EAA+BC,IACpCF,EAAAA,EAAAA,WAAS,IACJpE,EAAOuE,IAAYH,EAAAA,EAAAA,eAAqCzC,IACxD6C,EAAgBC,IAAqBL,EAAAA,EAAAA,UAA0B,KAC/DM,EAAqBC,IAA0BP,EAAAA,EAAAA,eACpDzC,IAEKiD,EAA4BC,IAAiCT,EAAAA,EAAAA,UAElE,KAEKU,EAAYC,IAAiBX,EAAAA,EAAAA,UAAS,IAmB7C,SAASY,EAAiBC,GACxB,OACEA,EAAYC,WAAa9D,EAAS8D,UACjCD,EAAYC,WAAa9D,EAAS8D,eACJvD,IAA7BsD,EAAYhB,MAAMF,aACUpC,IAA5BsD,EAAYhB,MAAMD,QAOtBmB,EAAAA,eAAAA,QAAuB,CACrBD,SAAUD,EAAYC,SACtBjB,MAAO,IACFgB,EAAYhB,MACfF,YAAQpC,EACRqC,WAAOrC,MAIJ,IAtCTyD,EAAAA,EAAAA,YAAU,KACRC,IACOF,EAAAA,eAAAA,OAAsBH,KAC5B,KAEHI,EAAAA,EAAAA,YAAU,MA+FV,WACE,GAAKZ,EAAec,OAIpB,IAAIC,EAAAA,EAAAA,IAAQvB,GAAZ,CACE,KAAKuB,EAAAA,EAAAA,IAAQf,EAAeR,IAE1B,YADAO,GAAStD,EAAAA,EAAAA,GAAE,kDAIb,GAAI+C,IAAUU,EACZ,OAGFC,EAAuBX,QAIrBQ,EAAec,OAAS,EAC1BX,EAAuBH,EAAe,GAAGgB,IAI3Cb,EAAuBH,EAAe,GAAGgB,IAtHzCC,KACC,CAACjB,KAEJY,EAAAA,EAAAA,YAAU,MAiFHG,EAAAA,EAAAA,IAAQb,IAAwBV,IAAUU,GAI/CZ,EAAO4B,QAAQ,CACbR,SAAU9D,EAAS8D,SACnBjB,MAAO,IAAI7C,EAAS6C,MAAOF,YAAQpC,EAAWqC,MAAOU,OArFtD,CAACA,KAEJU,EAAAA,EAAAA,YAAU,MA6CVO,iBACE,GAAKnB,EAAec,SAAWC,EAAAA,EAAAA,IAAQb,GAAvC,CAIAJ,GAAiC,GACjCC,OAAS5C,GAET,IAAI,MACF,MAAOU,EAAD,CAASuD,SAAc/B,EAAIgC,eAC9B,WAAU5F,qBAA2ByE,gBACtC,CACEoB,OAAQ,MACRC,gBAAgB,EAChB9B,MAAO,IACF7C,EAAS6C,MACZ+B,SAAU,MAKVC,EAAYL,MAAAA,GAAH,UAAGA,EAAMM,yBAAT,aAAG,OAAAN,EAA0B,QAC5Cb,EAAckB,MAAAA,EAAAA,EAAa,IAC3BpB,EAA8BsB,MAAMC,QAAQ/D,GAAQA,EAAO,CAACA,IAC5DiC,GAAiC,GACjC,MAAO+B,GACP/B,GAAiC,GACjCC,EAAS8B,KAvEXC,KACC,CAAC5B,EAAqBX,IA0BzB,MAAMwC,EAA+BC,GAAAA,EAAUC,IAC7C9B,EAAuB+B,OAAOD,MAC7BE,EAAAA,IAEHhB,eAAeN,IACblB,GAAa,GACbI,OAAS5C,GACT,IACE,MAAMiF,QAAiB/C,EAAIgC,eAAgB,WAAU5F,sBACrDkE,GAAa,GACbM,EAAkBmC,EAASC,QAC3B,MAAOR,GACPlC,GAAa,GACbI,EAAS8B,IAyEb,GAAInC,EACF,OAAO,QAAC,IAAD,IAGT,GAAIlE,EACF,OACE,QAAC,EAAAsB,SAAD,WACE,QAAC,KAAD,WACE,QAAC,KAAD,CAAawF,WAAS,EAAtB,WACE,QAAC,EAAD,CACE5G,QAASmF,EACTpF,QAASA,EACTD,MAAOA,EACPI,SAAUA,EACVD,QAASgC,EAAa4E,KACtB1G,sBAAuB8B,EAAa6E,OAAOC,SAAS,oBAEtD,QAAC1D,EAAD,WAOV,IAAKqB,EAA2BU,OAC9B,OAAO,QAAC,IAAD,IAGT,MAAM4B,GAAQC,EAAAA,EAAAA,GAAgBrC,GACxBsC,GAAU,UAAAF,EAAMG,gBAAN,eAAgBC,WAAhB,UAA2BJ,EAAMK,YAAjC,aAA2B,EAAYD,SACjDE,EAA4B5C,EAA2BU,OAE7D,OACE,QAAC,KAAD,WACE,QAAC,KAAD,CAAawB,WAAS,EAAtB,UACE,QAACW,EAAD,YACE,QAACC,EAAD,WACGzG,EAAAA,EAAAA,GACC,8LAGJ,QAAC0G,EAAD,YACE,QAACC,GAAD,YACG3G,EAAAA,EAAAA,GAAE,iBACH,QAAC4G,GAAD,CACEC,KAAK,iBACLC,cAAevD,EAAewD,KAAIC,GAChCvB,OAAOuB,EAAczC,MAEvB0C,MAAOxD,MAAAA,EAAAA,EAAuB,EAC9ByD,SAAU5B,EACV6B,WAAW,KAEZnH,EAAAA,EAAAA,GAAE,mBAEL,QAACoH,EAAD,CAASC,YAAajE,EAAtB,WACE,QAACkE,EAAD,CAAkBC,QAAS,CAAC,IAAIvH,EAAAA,EAAAA,GAAE,WAAlC,SACG2D,EAA2BoD,KAC1B,IAAsD,IAArD,KAACS,EAAD,MAAO5H,EAAP,SAAc6H,EAAd,YAAwBC,EAAxB,WAAqCzG,GAAgB,EAEpD,OACE,QAAC,EAAD,CAEED,YAAa,IACR0G,EACHD,SAAU,IACJA,GAAYC,EAAYD,SAC5BE,cAAelE,GAEjB7D,MAAOA,GAAS8H,EAAY9H,OAE9BqB,WAAYA,EACZC,aAAcA,GAVTsG,SAgBf,QAACI,EAAD,CACE5C,UAAWnB,EACXpD,SAAU2C,EACVyE,SAASvH,EAAAA,EAAAA,IAAI,wCAAyC,CACpDwH,OAAQ3B,GACJnG,EAAAA,EAAAA,GAAE,YACF+H,EAAAA,EAAAA,IAAG,SAAU,UAAWxB,GAC5ByB,QAASzB,EACT0B,MAAO9B,EACF,GAAEI,KACHA,aAKZ,QAACjE,EAAD,WA5PDA,EAAAA,YAAAA,aAgBAK,EAAAA,YAAAA,WAmPT,SAAeuF,EAAAA,EAAAA,GAAQvF,GAEjBD,GAAsB,OAAOyF,EAAAA,GAAP,sBAAH,iBACPnG,EAAAA,EAAAA,GAAM,IADC,KAInBwE,GAAU,OAAO,MAAP,sBAAH,yDAIAxE,EAAAA,EAAAA,GAAM,GAJN,MAIaA,EAAAA,EAAAA,GAAM,GAJnB,aAKAA,EAAAA,EAAAA,GAAM,GALN,KAKYA,EAAAA,EAAAA,GAAM,GALlB,KAQPyE,GAAS,OAAO,IAAP,sBAAH,qBAESzE,EAAAA,EAAAA,GAAM,GAFf,MAMNO,GAAS,OAAO,IAAP,sBAAH,kBAEMP,EAAAA,EAAAA,GAAM,GAFZ,MAMN0E,GAAO,OAAO,MAAP,sBAAH,qBAED1E,EAAAA,EAAAA,GAAM,GAFL,KAKJsF,GAAmB,OAAOc,EAAAA,GAAP,sBAAH,4DAGPpG,EAAAA,EAAAA,GAAM,KAHC,KAGOA,EAAAA,EAAAA,GAAM,GAHb,gCAKLA,EAAAA,EAAAA,GAAM,GALD,iGAcCC,GAAKA,EAAEC,MAAMmG,YAAY,IAd1B,oDAmBhBT,GAAmB,OAAOU,EAAAA,EAAP,sBAAH,wCAIhBlB,GAAU,OAAO,MAAP,uBACZnF,GACAA,EAAEoF,aACD,WACGC,MAAqBM,4EAJhB,KAWPjB,IAAgB,OAAO,MAAP,sBAAH,qBAEV3E,EAAAA,EAAAA,GAAM,KAFI,oIAOJC,GAAKA,EAAEC,MAAMqG,gBAPT,WAQRtG,GAAKA,EAAEC,MAAMG,SARL,oBASCL,EAAAA,EAAAA,GAAM,GATP,iKAmBb4E,IAAoB,OAAO4B,EAAAA,EAAP,sBACtBC,EAAAA,EADmB,0FAOOxG,GAAKA,EAAEC,MAAMwG,qBAPpB,8CAWOzG,GAAKA,EAAEC,MAAMwG,qBAXpB,kDAeOzG,GAAKA,EAAEC,MAAMwG,qBAfpB,uCAqBb1G,EAAAA,EAAAA,GAAM,KArBO,WAsBZA,EAAAA,EAAAA,GAAM,KAtBM,qECtXvB,SAAS2G,GAAT,GAAoF,IAAzD,aAACzH,EAAD,SAAef,EAAf,MAAyByI,EAAzB,OAAgC/F,EAAhC,QAAwCgG,GAAiB,EAClF,OACE,QAAC,IAAD,CACEC,SAAU,CAAC,oBACX5H,aAAcA,EACd6H,eAAgB,KACd,QAAC,KAAD,WACE,QAAC,IAAD,CAAO1J,KAAK,UAAZ,UAAuBW,EAAAA,EAAAA,GAAE,6CAL/B,UASE,QAAC,EAAD,CACEG,SAAUA,EACVnB,QAAS4J,EAAMrE,GACfrD,aAAcA,EACd2B,OAAQA,EACR1D,SAAU0J,EAAQ/C,SAhBjB6C,GAAAA,YAAAA,oBAsBT,UAAeK,EAAAA,EAAAA,GAAiBL","sources":["webpack:///./app/views/organizationGroupDetails/grouping/errorMessage.tsx","webpack:///./app/views/organizationGroupDetails/grouping/newIssue.tsx","webpack:///./app/views/organizationGroupDetails/grouping/grouping.tsx","webpack:///./app/views/organizationGroupDetails/grouping/index.tsx"],"sourcesContent":["import {Fragment} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {Group, Organization, Project} from 'sentry/types';\nimport EmptyMessage from 'sentry/views/settings/components/emptyMessage';\n\ntype ErrorCode =\n  | 'issue_not_hierarchical'\n  | 'project_not_hierarchical'\n  | 'no_events'\n  | 'merged_issues'\n  | 'missing_feature';\n\ntype Error = {\n  status: number;\n  responseJSON?: {\n    detail: {\n      code: ErrorCode;\n      extra: Record<string, any>;\n      message: string;\n    };\n  };\n};\n\ntype Props = {\n  error: Error | string;\n  groupId: Group['id'];\n  hasProjectWriteAccess: boolean;\n  onRetry: () => void;\n  orgSlug: Organization['slug'];\n  projSlug: Project['slug'];\n};\n\nfunction ErrorMessage({\n  error,\n  groupId,\n  onRetry,\n  orgSlug,\n  projSlug,\n  hasProjectWriteAccess,\n}: Props) {\n  function getErrorDetails(errorCode: ErrorCode) {\n    switch (errorCode) {\n      case 'merged_issues':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'This issue needs to be fully unmerged before grouping breakdown is available'\n          ),\n          action: (\n            <Button\n              priority=\"primary\"\n              to={`/organizations/${orgSlug}/issues/${groupId}/merged/?${location.search}`}\n            >\n              {t('Unmerge issue')}\n            </Button>\n          ),\n        };\n      case 'missing_feature':\n        return {\n          title: t(\n            'This project does not have the grouping breakdown available. Is your organization still an early adopter?'\n          ),\n        };\n\n      case 'no_events':\n        return {\n          title: t('This issue has no events'),\n        };\n      case 'issue_not_hierarchical':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'Only new issues with the latest grouping strategy have this feature available'\n          ),\n        };\n      case 'project_not_hierarchical':\n        return {\n          title: (\n            <Fragment>\n              {t('Update your Grouping Config')}\n              <FeatureBadge type=\"beta\" />\n            </Fragment>\n          ),\n          subTitle: (\n            <Fragment>\n              <p>\n                {t(\n                  'Enable advanced grouping insights and functionality by updating this project to the latest Grouping Config:'\n                )}\n              </p>\n\n              <ul>\n                <li>\n                  {tct(\n                    '[strong:Breakdowns:] Explore events in this issue by call hierarchy.',\n                    {strong: <strong />}\n                  )}\n                </li>\n                <li>\n                  {tct(\n                    '[strong:Stack trace annotations:] See important frames Sentry uses to group issues directly in the stack trace.',\n                    {strong: <strong />}\n                  )}\n                </li>\n              </ul>\n            </Fragment>\n          ),\n          leftAligned: true,\n          action: (\n            <ButtonBar gap={1}>\n              <Button\n                priority=\"primary\"\n                to={`/settings/${orgSlug}/projects/${projSlug}/issue-grouping/#upgrade-grouping`}\n                disabled={!hasProjectWriteAccess}\n                title={\n                  !hasProjectWriteAccess\n                    ? t('You do not have permission to update this project')\n                    : undefined\n                }\n              >\n                {t('Upgrade Grouping Strategy')}\n              </Button>\n              <Button href=\"https://docs.sentry.io/product/data-management-settings/event-grouping/grouping-breakdown/\">\n                {t('Read the docs')}\n              </Button>\n            </ButtonBar>\n          ),\n        };\n      default:\n        return {};\n    }\n  }\n\n  if (typeof error === 'string') {\n    return <Alert type=\"warning\">{error}</Alert>;\n  }\n\n  if (error.status === 403 && error.responseJSON?.detail) {\n    const {code, message} = error.responseJSON.detail;\n    const {action, title, subTitle, leftAligned} = getErrorDetails(code);\n\n    return (\n      <Panel>\n        <EmptyMessage\n          size=\"large\"\n          title={title ?? message}\n          description={subTitle}\n          action={action}\n          leftAligned={leftAligned}\n        />\n      </Panel>\n    );\n  }\n\n  return (\n    <LoadingError\n      message={t('Unable to load grouping levels, please try again later')}\n      onRetry={onRetry}\n    />\n  );\n}\n\nexport default ErrorMessage;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport EventOrGroupHeader from 'sentry/components/eventOrGroupHeader';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconClock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  eventCount: number;\n  organization: Organization;\n  sampleEvent: Event;\n};\n\nfunction NewIssue({sampleEvent, eventCount, organization}: Props) {\n  return (\n    <Fragment>\n      <EventDetails>\n        <EventOrGroupHeader\n          data={sampleEvent}\n          organization={organization}\n          grouping\n          hideIcons\n          hideLevel\n        />\n        <ExtraInfo>\n          <TimeWrapper>\n            <StyledIconClock size=\"11px\" />\n            <TimeSince\n              date={\n                sampleEvent.dateCreated\n                  ? sampleEvent.dateCreated\n                  : sampleEvent.dateReceived\n              }\n              suffix={t('old')}\n            />\n          </TimeWrapper>\n        </ExtraInfo>\n      </EventDetails>\n      <EventCount>{eventCount}</EventCount>\n    </Fragment>\n  );\n}\n\nexport default NewIssue;\n\nconst EventDetails = styled('div')`\n  overflow: hidden;\n  line-height: 1.1;\n`;\n\nconst ExtraInfo = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  justify-content: flex-start;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: max-content 1fr;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst EventCount = styled('div')`\n  align-items: center;\n  font-variant-numeric: tabular-nums;\n  line-height: 1.1;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  color: ${p => p.theme.subText};\n`;\n","import {Fragment, useEffect, useState} from 'react';\nimport {browserHistory, InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'sentry/api';\nimport RangeSlider from 'sentry/components/forms/controls/rangeSlider';\nimport Slider from 'sentry/components/forms/controls/rangeSlider/slider';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {IconMegaphone} from 'sentry/icons';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {BaseGroup, Group, Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport withApi from 'sentry/utils/withApi';\n\nimport ErrorMessage from './errorMessage';\nimport NewIssue from './newIssue';\n\ntype Error = React.ComponentProps<typeof ErrorMessage>['error'];\n\ntype Props = {\n  api: Client;\n  groupId: Group['id'];\n  location: Location<{cursor?: string; level?: number}>;\n  organization: Organization;\n  projSlug: Project['slug'];\n  router: InjectedRouter;\n};\n\ntype GroupingLevelDetails = Partial<Pick<BaseGroup, 'title' | 'metadata'>> & {\n  eventCount: number;\n  hash: string;\n  latestEvent: BaseGroup['latestEvent'];\n};\n\ntype GroupingLevel = {\n  id: number;\n  isCurrent: boolean;\n};\n\nfunction LinkFooter() {\n  return (\n    <Footer>\n      <ExternalLink\n        href={`mailto:grouping@sentry.io?subject=${encodeURIComponent(\n          'Grouping Feedback'\n        )}&body=${encodeURIComponent(\n          `URL: ${window.location.href}\\n\\nThanks for taking the time to provide us feedback. What's on your mind?`\n        )}`}\n      >\n        <StyledIconMegaphone /> {t('Give Feedback')}\n      </ExternalLink>\n    </Footer>\n  );\n}\n\nfunction Grouping({api, groupId, location, organization, router, projSlug}: Props) {\n  const {cursor, level} = location.query;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGroupingLevelDetailsLoading, setIsGroupingLevelDetailsLoading] =\n    useState(false);\n  const [error, setError] = useState<undefined | Error | string>(undefined);\n  const [groupingLevels, setGroupingLevels] = useState<GroupingLevel[]>([]);\n  const [activeGroupingLevel, setActiveGroupingLevel] = useState<number | undefined>(\n    undefined\n  );\n  const [activeGroupingLevelDetails, setActiveGroupingLevelDetails] = useState<\n    GroupingLevelDetails[]\n  >([]);\n\n  const [pagination, setPagination] = useState('');\n\n  useEffect(() => {\n    fetchGroupingLevels();\n    return browserHistory.listen(handleRouteLeave);\n  }, []);\n\n  useEffect(() => {\n    setSecondGrouping();\n  }, [groupingLevels]);\n\n  useEffect(() => {\n    updateUrlWithNewLevel();\n  }, [activeGroupingLevel]);\n\n  useEffect(() => {\n    fetchGroupingLevelDetails();\n  }, [activeGroupingLevel, cursor]);\n\n  function handleRouteLeave(newLocation: Location<{cursor?: string; level?: number}>) {\n    if (\n      newLocation.pathname === location.pathname ||\n      (newLocation.pathname !== location.pathname &&\n        newLocation.query.cursor === undefined &&\n        newLocation.query.level === undefined)\n    ) {\n      return true;\n    }\n\n    // Removes cursor and level from the URL on route leave\n    // so that the parameters will not interfere with other pages\n    browserHistory.replace({\n      pathname: newLocation.pathname,\n      query: {\n        ...newLocation.query,\n        cursor: undefined,\n        level: undefined,\n      },\n    });\n\n    return false;\n  }\n\n  const handleSetActiveGroupingLevel = debounce((groupingLevelId: number | '') => {\n    setActiveGroupingLevel(Number(groupingLevelId));\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  async function fetchGroupingLevels() {\n    setIsLoading(true);\n    setError(undefined);\n    try {\n      const response = await api.requestPromise(`/issues/${groupId}/grouping/levels/`);\n      setIsLoading(false);\n      setGroupingLevels(response.levels);\n    } catch (err) {\n      setIsLoading(false);\n      setError(err);\n    }\n  }\n\n  async function fetchGroupingLevelDetails() {\n    if (!groupingLevels.length || !defined(activeGroupingLevel)) {\n      return;\n    }\n\n    setIsGroupingLevelDetailsLoading(true);\n    setError(undefined);\n\n    try {\n      const [data, , resp] = await api.requestPromise(\n        `/issues/${groupId}/grouping/levels/${activeGroupingLevel}/new-issues/`,\n        {\n          method: 'GET',\n          includeAllArgs: true,\n          query: {\n            ...location.query,\n            per_page: 10,\n          },\n        }\n      );\n\n      const pageLinks = resp?.getResponseHeader?.('Link');\n      setPagination(pageLinks ?? '');\n      setActiveGroupingLevelDetails(Array.isArray(data) ? data : [data]);\n      setIsGroupingLevelDetailsLoading(false);\n    } catch (err) {\n      setIsGroupingLevelDetailsLoading(false);\n      setError(err);\n    }\n  }\n\n  function updateUrlWithNewLevel() {\n    if (!defined(activeGroupingLevel) || level === activeGroupingLevel) {\n      return;\n    }\n\n    router.replace({\n      pathname: location.pathname,\n      query: {...location.query, cursor: undefined, level: activeGroupingLevel},\n    });\n  }\n\n  function setSecondGrouping() {\n    if (!groupingLevels.length) {\n      return;\n    }\n\n    if (defined(level)) {\n      if (!defined(groupingLevels[level])) {\n        setError(t('The level you were looking for was not found.'));\n        return;\n      }\n\n      if (level === activeGroupingLevel) {\n        return;\n      }\n\n      setActiveGroupingLevel(level);\n      return;\n    }\n\n    if (groupingLevels.length > 1) {\n      setActiveGroupingLevel(groupingLevels[1].id);\n      return;\n    }\n\n    setActiveGroupingLevel(groupingLevels[0].id);\n  }\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return (\n      <Fragment>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <ErrorMessage\n              onRetry={fetchGroupingLevels}\n              groupId={groupId}\n              error={error}\n              projSlug={projSlug}\n              orgSlug={organization.slug}\n              hasProjectWriteAccess={organization.access.includes('project:write')}\n            />\n            <LinkFooter />\n          </Layout.Main>\n        </Layout.Body>\n      </Fragment>\n    );\n  }\n\n  if (!activeGroupingLevelDetails.length) {\n    return <LoadingIndicator />;\n  }\n\n  const links = parseLinkHeader(pagination);\n  const hasMore = links.previous?.results || links.next?.results;\n  const paginationCurrentQuantity = activeGroupingLevelDetails.length;\n\n  return (\n    <Layout.Body>\n      <Layout.Main fullWidth>\n        <Wrapper>\n          <Header>\n            {t(\n              'This issue is an aggregate of multiple events that sentry determined originate from the same root-cause. Use this page to explore more detailed groupings that exist within this issue.'\n            )}\n          </Header>\n          <Body>\n            <SliderWrapper>\n              {t('Fewer issues')}\n              <StyledRangeSlider\n                name=\"grouping-level\"\n                allowedValues={groupingLevels.map(groupingLevel =>\n                  Number(groupingLevel.id)\n                )}\n                value={activeGroupingLevel ?? 0}\n                onChange={handleSetActiveGroupingLevel}\n                showLabel={false}\n              />\n              {t('More issues')}\n            </SliderWrapper>\n            <Content isReloading={isGroupingLevelDetailsLoading}>\n              <StyledPanelTable headers={['', t('Events')]}>\n                {activeGroupingLevelDetails.map(\n                  ({hash, title, metadata, latestEvent, eventCount}) => {\n                    // XXX(markus): Ugly hack to make NewIssue show the right things.\n                    return (\n                      <NewIssue\n                        key={hash}\n                        sampleEvent={{\n                          ...latestEvent,\n                          metadata: {\n                            ...(metadata || latestEvent.metadata),\n                            current_level: activeGroupingLevel,\n                          },\n                          title: title || latestEvent.title,\n                        }}\n                        eventCount={eventCount}\n                        organization={organization}\n                      />\n                    );\n                  }\n                )}\n              </StyledPanelTable>\n              <StyledPagination\n                pageLinks={pagination}\n                disabled={isGroupingLevelDetailsLoading}\n                caption={tct('Showing [current] of [total] [result]', {\n                  result: hasMore\n                    ? t('results')\n                    : tn('result', 'results', paginationCurrentQuantity),\n                  current: paginationCurrentQuantity,\n                  total: hasMore\n                    ? `${paginationCurrentQuantity}+`\n                    : paginationCurrentQuantity,\n                })}\n              />\n            </Content>\n          </Body>\n          <LinkFooter />\n        </Wrapper>\n      </Layout.Main>\n    </Layout.Body>\n  );\n}\n\nexport default withApi(Grouping);\n\nconst StyledIconMegaphone = styled(IconMegaphone)`\n  margin-right: ${space(0.5)};\n`;\n\nconst Wrapper = styled('div')`\n  flex: 1;\n  display: grid;\n  align-content: flex-start;\n  margin: -${space(3)} -${space(4)};\n  padding: ${space(3)} ${space(4)};\n`;\n\nconst Header = styled('p')`\n  && {\n    margin-bottom: ${space(2)};\n  }\n`;\n\nconst Footer = styled('p')`\n  && {\n    margin-top: ${space(2)};\n  }\n`;\n\nconst Body = styled('div')`\n  display: grid;\n  gap: ${space(3)};\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr minmax(60px, auto);\n  > * {\n    padding: ${space(1.5)} ${space(2)};\n    :nth-child(-n + 2) {\n      padding: ${space(2)};\n    }\n    :nth-child(2n) {\n      display: flex;\n      text-align: right;\n      justify-content: flex-end;\n    }\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints[3]}) {\n    grid-template-columns: 1fr minmax(80px, auto);\n  }\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 0;\n`;\n\nconst Content = styled('div')<{isReloading: boolean}>`\n  ${p =>\n    p.isReloading &&\n    `\n      ${StyledPanelTable}, ${StyledPagination} {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    `}\n`;\n\nconst SliderWrapper = styled('div')`\n  display: grid;\n  gap: ${space(1.5)};\n  grid-template-columns: max-content max-content;\n  justify-content: space-between;\n  align-items: flex-start;\n  position: relative;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  padding-bottom: ${space(2)};\n\n  @media (min-width: 700px) {\n    grid-template-columns: max-content minmax(270px, auto) max-content;\n    align-items: center;\n    justify-content: flex-start;\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledRangeSlider = styled(RangeSlider)`\n  ${Slider} {\n    background: transparent;\n    margin-top: 0;\n    margin-bottom: 0;\n\n    ::-ms-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-moz-range-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-webkit-slider-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n  }\n\n  position: absolute;\n  bottom: 0;\n  left: ${space(1.5)};\n  right: ${space(1.5)};\n\n  @media (min-width: 700px) {\n    position: static;\n    left: auto;\n    right: auto;\n  }\n`;\n","import {RouteComponentProps} from 'react-router';\n\nimport Feature from 'sentry/components/acl/feature';\nimport Alert from 'sentry/components/alert';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Group, Organization, Project} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport Grouping from './grouping';\n\ntype Props = RouteComponentProps<{}, {}> & {\n  group: Group;\n  organization: Organization;\n  project: Project;\n};\n\nfunction GroupingContainer({organization, location, group, router, project}: Props) {\n  return (\n    <Feature\n      features={['grouping-tree-ui']}\n      organization={organization}\n      renderDisabled={() => (\n        <PageContent>\n          <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n        </PageContent>\n      )}\n    >\n      <Grouping\n        location={location}\n        groupId={group.id}\n        organization={organization}\n        router={router}\n        projSlug={project.slug}\n      />\n    </Feature>\n  );\n}\n\nexport default withOrganization(GroupingContainer);\n"],"names":["ErrorMessage","error","groupId","onRetry","orgSlug","projSlug","hasProjectWriteAccess","type","status","responseJSON","detail","code","message","action","title","subTitle","leftAligned","errorCode","t","priority","to","location","search","Fragment","tct","strong","gap","disabled","undefined","href","getErrorDetails","size","description","NewIssue","sampleEvent","eventCount","organization","EventDetails","data","grouping","hideIcons","hideLevel","ExtraInfo","TimeWrapper","StyledIconClock","date","dateCreated","dateReceived","suffix","EventCount","space","p","theme","fontSizeSmall","IconClock","subText","LinkFooter","Footer","encodeURIComponent","window","StyledIconMegaphone","Grouping","api","router","cursor","level","query","isLoading","setIsLoading","useState","isGroupingLevelDetailsLoading","setIsGroupingLevelDetailsLoading","setError","groupingLevels","setGroupingLevels","activeGroupingLevel","setActiveGroupingLevel","activeGroupingLevelDetails","setActiveGroupingLevelDetails","pagination","setPagination","handleRouteLeave","newLocation","pathname","browserHistory","useEffect","fetchGroupingLevels","length","defined","id","setSecondGrouping","replace","async","resp","requestPromise","method","includeAllArgs","per_page","pageLinks","getResponseHeader","Array","isArray","err","fetchGroupingLevelDetails","handleSetActiveGroupingLevel","debounce","groupingLevelId","Number","DEFAULT_DEBOUNCE_DURATION","response","levels","fullWidth","slug","access","includes","links","parseLinkHeader","hasMore","previous","results","next","paginationCurrentQuantity","Wrapper","Header","Body","SliderWrapper","StyledRangeSlider","name","allowedValues","map","groupingLevel","value","onChange","showLabel","Content","isReloading","StyledPanelTable","headers","hash","metadata","latestEvent","current_level","StyledPagination","caption","result","tn","current","total","withApi","IconMegaphone","PanelTable","breakpoints","Pagination","fontSizeMedium","RangeSlider","Slider","backgroundSecondary","GroupingContainer","group","project","features","renderDisabled","withOrganization"],"sourceRoot":""}