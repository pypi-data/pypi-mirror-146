{"version":3,"file":"chunks/app_utils_discover_charts_tsx-app_views_alerts_rules_teamFilter_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/discover/charts.tsx","webpack:///./app/views/alerts/rules/filter.tsx","webpack:///./app/views/alerts/rules/teamFilter.tsx"],"sourcesContent":["import {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {\n  DAY,\n  formatAbbreviatedNumber,\n  formatPercentage,\n  getDuration,\n  HOUR,\n  MINUTE,\n  SECOND,\n  WEEK,\n} from 'sentry/utils/formatters';\n\n/**\n * Formatter for chart tooltips that handle a variety of discover and metrics result values.\n * If the result is metric values, the value can be of type number or null\n */\nexport function tooltipFormatter(value: number | null, seriesName: string = ''): string {\n  if (!defined(value)) {\n    return '\\u2014';\n  }\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 2);\n    case 'duration':\n      return getDuration(value / 1000, 2, true);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Formatter for chart axis labels that handle a variety of discover result values\n * This function is *very similar* to tooltipFormatter but outputs data with less precision.\n */\nexport function axisLabelFormatter(\n  value: number,\n  seriesName: string,\n  abbreviation: boolean = false\n): string {\n  switch (aggregateOutputType(seriesName)) {\n    case 'integer':\n    case 'number':\n      return abbreviation ? formatAbbreviatedNumber(value) : value.toLocaleString();\n    case 'percentage':\n      return formatPercentage(value, 0);\n    case 'duration':\n      return axisDuration(value);\n    default:\n      return value.toString();\n  }\n}\n\n/**\n * Specialized duration formatting for axis labels.\n * In that context we are ok sacrificing accuracy for more\n * consistent sizing.\n *\n * @param value Number of milliseconds to format.\n */\nexport function axisDuration(value: number): string {\n  if (value === 0) {\n    return '0';\n  }\n  if (value >= WEEK) {\n    const label = (value / WEEK).toFixed(0);\n    return t('%swk', label);\n  }\n  if (value >= DAY) {\n    const label = (value / DAY).toFixed(0);\n    return t('%sd', label);\n  }\n  if (value >= HOUR) {\n    const label = (value / HOUR).toFixed(0);\n    return t('%shr', label);\n  }\n  if (value >= MINUTE) {\n    const label = (value / MINUTE).toFixed(0);\n    return t('%smin', label);\n  }\n  if (value >= SECOND) {\n    const label = (value / SECOND).toFixed(0);\n    return t('%ss', label);\n  }\n  const label = value.toFixed(0);\n  return t('%sms', label);\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Badge from 'sentry/components/badge';\nimport CheckboxFancy from 'sentry/components/checkboxFancy/checkboxFancy';\nimport DropdownButton from 'sentry/components/dropdownButton';\nimport DropdownControl, {Content} from 'sentry/components/dropdownControl';\nimport {IconUser} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport overflowEllipsis from 'sentry/styles/overflowEllipsis';\nimport space from 'sentry/styles/space';\n\ntype DropdownSection = {\n  id: string;\n  items: Array<{checked: boolean; filtered: boolean; label: string; value: string}>;\n  label: string;\n};\n\ntype SectionProps = DropdownSection & {\n  toggleFilter: (section: string, value: string) => void;\n  toggleSection: (id: string) => void;\n};\n\nfunction FilterSection({id, label, items, toggleSection, toggleFilter}: SectionProps) {\n  const checkedItemsCount = items.filter(item => item.checked).length;\n  return (\n    <Fragment>\n      <Header>\n        <span>{label}</span>\n        <CheckboxFancy\n          isChecked={checkedItemsCount === items.length}\n          isIndeterminate={checkedItemsCount > 0 && checkedItemsCount !== items.length}\n          onClick={event => {\n            event.stopPropagation();\n            toggleSection(id);\n          }}\n        />\n      </Header>\n      {items\n        .filter(item => !item.filtered)\n        .map(item => (\n          <ListItem\n            key={item.value}\n            isChecked={item.checked}\n            onClick={event => {\n              event.stopPropagation();\n              toggleFilter(id, item.value);\n            }}\n          >\n            <TeamName>{item.label}</TeamName>\n            <CheckboxFancy isChecked={item.checked} />\n          </ListItem>\n        ))}\n    </Fragment>\n  );\n}\n\ntype Props = {\n  dropdownSections: DropdownSection[];\n  header: React.ReactElement;\n  onFilterChange: (section: string, filterSelection: Set<string>) => void;\n  fullWidth?: boolean;\n  showMyTeamsDescription?: boolean;\n};\n\nfunction Filter({\n  onFilterChange,\n  header,\n  dropdownSections,\n  showMyTeamsDescription,\n  fullWidth = false,\n}: Props) {\n  function toggleFilter(sectionId: string, value: string) {\n    const section = dropdownSections.find(\n      dropdownSection => dropdownSection.id === sectionId\n    )!;\n    const newSelection = new Set(\n      section.items.filter(item => item.checked).map(item => item.value)\n    );\n    if (newSelection.has(value)) {\n      newSelection.delete(value);\n    } else {\n      newSelection.add(value);\n    }\n    onFilterChange(sectionId, newSelection);\n  }\n\n  function toggleSection(sectionId: string) {\n    const section = dropdownSections.find(\n      dropdownSection => dropdownSection.id === sectionId\n    )!;\n    const activeItems = section.items.filter(item => item.checked);\n\n    const newSelection =\n      section.items.length === activeItems.length\n        ? new Set<string>()\n        : new Set(section.items.map(item => item.value));\n\n    onFilterChange(sectionId, newSelection);\n  }\n\n  function getActiveFilters() {\n    return dropdownSections\n      .map(section => section.items)\n      .flat()\n      .filter(item => item.checked);\n  }\n\n  const activeFilters = getActiveFilters();\n\n  let filterDescription = showMyTeamsDescription ? t('My Teams') : t('All Teams');\n  if (activeFilters.length > 0) {\n    filterDescription = activeFilters[0].label;\n  }\n\n  return (\n    <DropdownControl\n      menuWidth=\"240px\"\n      fullWidth={fullWidth}\n      blendWithActor\n      alwaysRenderMenu={false}\n      button={({isOpen, getActorProps}) => (\n        <StyledDropdownButton\n          {...getActorProps()}\n          isOpen={isOpen}\n          icon={<IconUser />}\n          priority=\"default\"\n          data-test-id=\"filter-button\"\n          fullWidth={fullWidth}\n        >\n          <DropdownButtonText fullWidth={fullWidth}>\n            {filterDescription}\n          </DropdownButtonText>\n          {activeFilters.length > 1 && (\n            <StyledBadge text={`+${activeFilters.length - 1}`} />\n          )}\n        </StyledDropdownButton>\n      )}\n    >\n      {({isOpen, getMenuProps}) => (\n        <MenuContent\n          {...getMenuProps()}\n          isOpen={isOpen}\n          blendCorner\n          alignMenu=\"left\"\n          width=\"240px\"\n          detached\n        >\n          <List>\n            {header}\n            {dropdownSections.map(section => (\n              <FilterSection\n                key={section.id}\n                {...section}\n                toggleSection={toggleSection}\n                toggleFilter={toggleFilter}\n              />\n            ))}\n          </List>\n        </MenuContent>\n      )}\n    </DropdownControl>\n  );\n}\n\nconst MenuContent = styled(Content)`\n  max-height: 290px;\n  overflow-y: auto;\n`;\n\nconst Header = styled('div')`\n  display: grid;\n  grid-template-columns: auto min-content;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n\n  margin: 0;\n  background-color: ${p => p.theme.backgroundSecondary};\n  color: ${p => p.theme.gray300};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeMedium};\n  padding: ${space(1)} ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.border};\n`;\n\nconst StyledDropdownButton = styled(DropdownButton)<{fullWidth: boolean}>`\n  white-space: nowrap;\n  display: flex;\n  align-items: center;\n\n  z-index: ${p => p.theme.zIndex.dropdown};\n\n  ${p =>\n    p.fullWidth\n      ? `\n      width: 100%\n  `\n      : `max-width: 200px`}\n`;\n\nconst DropdownButtonText = styled('span')<{fullWidth: boolean}>`\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  flex: 1;\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    text-align: ${p => p.fullWidth && 'start'};\n  }\n`;\n\nconst StyledBadge = styled(Badge)`\n  flex-shrink: 0;\n`;\n\nconst List = styled('ul')`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst ListItem = styled('li')<{isChecked?: boolean}>`\n  display: grid;\n  grid-template-columns: 1fr max-content;\n  grid-column-gap: ${space(1)};\n  align-items: center;\n  padding: ${space(1)} ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.border};\n  :hover {\n    background-color: ${p => p.theme.backgroundSecondary};\n  }\n  ${CheckboxFancy} {\n    opacity: ${p => (p.isChecked ? 1 : 0.3)};\n  }\n\n  &:hover ${CheckboxFancy} {\n    opacity: 1;\n  }\n\n  &:hover span {\n    color: ${p => p.theme.blue300};\n    text-decoration: underline;\n  }\n`;\n\nconst TeamName = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  ${overflowEllipsis};\n`;\n\nexport default Filter;\n","import {useState} from 'react';\nimport styled from '@emotion/styled';\nimport debounce from 'lodash/debounce';\n\nimport Input from 'sentry/components/forms/controls/input';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport useTeams from 'sentry/utils/useTeams';\n\nimport Filter from './filter';\n\ntype Props = {\n  handleChangeFilter: (sectionId: string, activeFilters: Set<string>) => void;\n  selectedTeams: Set<string>;\n  fullWidth?: boolean;\n  selectedStatus?: Set<string>;\n  /**\n   * only show teams user is a member of\n   */\n  showIsMemberTeams?: boolean;\n  /**\n   * show My Teams and Unassigned options\n   */\n  showMyTeamsAndUnassigned?: boolean;\n  /**\n   * show My Teams as the default dropdown description\n   */\n  showMyTeamsDescription?: boolean;\n  showStatus?: boolean;\n};\n\nfunction TeamFilter({\n  selectedTeams,\n  showStatus = false,\n  selectedStatus = new Set(),\n  handleChangeFilter,\n  fullWidth = false,\n  showIsMemberTeams = false,\n  showMyTeamsAndUnassigned = true,\n  showMyTeamsDescription = false,\n}: Props) {\n  const {teams, onSearch, fetching} = useTeams();\n  const debouncedSearch = debounce(onSearch, DEFAULT_DEBOUNCE_DURATION);\n  const [teamFilterSearch, setTeamFilterSearch] = useState<string | undefined>();\n  const isSuperuser = isActiveSuperuser();\n\n  const statusOptions = [\n    {\n      label: t('Unresolved'),\n      value: 'open',\n      checked: selectedStatus.has('open'),\n      filtered: false,\n    },\n    {\n      label: t('Resolved'),\n      value: 'closed',\n      checked: selectedStatus.has('closed'),\n      filtered: false,\n    },\n  ];\n\n  const additionalOptions = [\n    {\n      label: t('My Teams'),\n      value: 'myteams',\n      checked: selectedTeams.has('myteams'),\n      filtered: false,\n    },\n    {\n      label: t('Unassigned'),\n      value: 'unassigned',\n      checked: selectedTeams.has('unassigned'),\n      filtered: false,\n    },\n  ];\n  const isMemberTeams = teams.filter(team => team.isMember);\n  const teamItems = (isSuperuser ? teams : showIsMemberTeams ? isMemberTeams : teams).map(\n    ({id, slug}) => ({\n      label: slug,\n      value: id,\n      filtered: teamFilterSearch\n        ? !slug.toLowerCase().includes(teamFilterSearch.toLowerCase())\n        : false,\n      checked: selectedTeams.has(id),\n    })\n  );\n\n  return (\n    <Filter\n      fullWidth={fullWidth}\n      showMyTeamsDescription={showMyTeamsDescription}\n      header={\n        <InputWrapper>\n          <StyledInput\n            autoFocus\n            placeholder={t('Filter teams')}\n            onClick={event => {\n              event.stopPropagation();\n            }}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              const search = event.target.value;\n              setTeamFilterSearch(search);\n              debouncedSearch(search);\n            }}\n            value={teamFilterSearch || ''}\n          />\n          {fetching && <StyledLoadingIndicator size={16} mini />}\n        </InputWrapper>\n      }\n      onFilterChange={handleChangeFilter}\n      dropdownSections={[\n        ...(showStatus\n          ? [\n              {\n                id: 'status',\n                label: t('Status'),\n                items: statusOptions,\n              },\n            ]\n          : []),\n        {\n          id: 'teams',\n          label: t('Teams'),\n          items: showMyTeamsAndUnassigned\n            ? [...additionalOptions, ...teamItems]\n            : [...teamItems],\n        },\n      ]}\n    />\n  );\n}\n\nexport default TeamFilter;\n\nconst InputWrapper = styled('div')`\n  position: relative;\n`;\n\nconst StyledInput = styled(Input)`\n  border: none;\n  border-radius: 0;\n  border-bottom: solid 1px ${p => p.theme.border};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  position: absolute;\n  right: 0;\n  top: ${space(0.75)};\n`;\n"],"names":["tooltipFormatter","value","seriesName","defined","aggregateOutputType","toLocaleString","formatPercentage","getDuration","toString","axisLabelFormatter","abbreviation","formatAbbreviatedNumber","axisDuration","WEEK","label","toFixed","t","DAY","HOUR","MINUTE","SECOND","FilterSection","id","items","toggleSection","toggleFilter","checkedItemsCount","filter","item","checked","length","Fragment","Header","isChecked","isIndeterminate","onClick","event","stopPropagation","filtered","map","ListItem","TeamName","Filter","onFilterChange","header","dropdownSections","showMyTeamsDescription","fullWidth","sectionId","section","find","dropdownSection","newSelection","Set","has","delete","add","activeItems","activeFilters","flat","filterDescription","menuWidth","blendWithActor","alwaysRenderMenu","button","isOpen","getActorProps","StyledDropdownButton","icon","priority","DropdownButtonText","StyledBadge","text","getMenuProps","MenuContent","blendCorner","alignMenu","width","detached","List","Content","space","p","theme","backgroundSecondary","gray300","fontSizeMedium","border","DropdownButton","zIndex","dropdown","breakpoints","Badge","CheckboxFancy","blue300","overflowEllipsis","TeamFilter","selectedTeams","showStatus","selectedStatus","handleChangeFilter","showIsMemberTeams","showMyTeamsAndUnassigned","teams","onSearch","fetching","useTeams","debouncedSearch","debounce","DEFAULT_DEBOUNCE_DURATION","teamFilterSearch","setTeamFilterSearch","useState","isSuperuser","isActiveSuperuser","statusOptions","additionalOptions","isMemberTeams","team","isMember","teamItems","slug","toLowerCase","includes","InputWrapper","StyledInput","autoFocus","placeholder","onChange","search","target","StyledLoadingIndicator","size","mini","Input","LoadingIndicator"],"sourceRoot":""}