{"version":3,"file":"chunks/app_views_eventsV2_table_columnEditCollection_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/userselect.tsx","webpack:///./app/utils/touch.tsx","webpack:///./app/views/eventsV2/table/columnEditCollection.tsx"],"sourcesContent":["export type UserSelectValues = {\n  MozUserSelect: string | null;\n  msUserSelect: string | null;\n  userSelect: string | null;\n  webkitUserSelect: string | null;\n};\n\nexport const setBodyUserSelect = (nextValues: UserSelectValues): UserSelectValues => {\n  // NOTE: Vendor prefixes other than `ms` should begin with a capital letter.\n  // ref: https://reactjs.org/docs/dom-elements.html#style\n\n  const previousValues = {\n    userSelect: document.body.style.userSelect,\n    // MozUserSelect is not typed in TS\n    // @ts-expect-error\n    MozUserSelect: document.body.style.MozUserSelect,\n    // msUserSelect is not typed in TS\n    // @ts-expect-error\n    msUserSelect: document.body.style.msUserSelect,\n    webkitUserSelect: document.body.style.webkitUserSelect,\n  };\n\n  document.body.style.userSelect = nextValues.userSelect || '';\n  // MozUserSelect is not typed in TS\n  // @ts-expect-error\n  document.body.style.MozUserSelect = nextValues.MozUserSelect || '';\n  // msUserSelect is not typed in TS\n  // @ts-expect-error\n  document.body.style.msUserSelect = nextValues.msUserSelect || '';\n  document.body.style.webkitUserSelect = nextValues.webkitUserSelect || '';\n\n  return previousValues;\n};\n","function isReactEvent(\n  maybe: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent\n): maybe is React.MouseEvent | React.TouchEvent {\n  return 'nativeEvent' in maybe;\n}\n\n/**\n * Handle getting position out of both React and Raw DOM events\n * as both are handled here due to mousedown/mousemove events\n * working differently.\n */\nexport function getPointerPosition(\n  event: MouseEvent | TouchEvent | React.MouseEvent | React.TouchEvent,\n  property: 'pageX' | 'pageY' | 'clientX' | 'clientY'\n): number {\n  const actual = isReactEvent(event) ? event.nativeEvent : event;\n  if (window.TouchEvent && actual instanceof TouchEvent) {\n    return actual.targetTouches[0][property];\n  }\n  if (actual instanceof MouseEvent) {\n    return actual[property];\n  }\n  return 0;\n}\n","import * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {parseArithmetic} from 'sentry/components/arithmeticInput/parser';\nimport Button from 'sentry/components/button';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Input from 'sentry/components/forms/controls/input';\nimport {getOffsetOfElement} from 'sentry/components/performance/waterfall/utils';\nimport {IconAdd, IconDelete, IconGrabbable} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport {\n  AGGREGATIONS,\n  Column,\n  generateFieldAsString,\n  hasDuplicate,\n  isLegalEquationColumn,\n} from 'sentry/utils/discover/fields';\nimport theme from 'sentry/utils/theme';\nimport {getPointerPosition} from 'sentry/utils/touch';\nimport {setBodyUserSelect, UserSelectValues} from 'sentry/utils/userselect';\nimport {WidgetType} from 'sentry/views/dashboardsV2/types';\nimport {FieldKey} from 'sentry/views/dashboardsV2/widgetBuilder/issueWidget/fields';\n\nimport {generateFieldOptions} from '../utils';\n\nimport {FieldValueOption, QueryField} from './queryField';\nimport {FieldValueKind} from './types';\n\ntype Sources = WidgetType;\n\ntype Props = {\n  // Input columns\n  columns: Column[];\n  fieldOptions: ReturnType<typeof generateFieldOptions>;\n  // Fired when columns are added/removed/modified\n  onChange: (columns: Column[]) => void;\n  organization: Organization;\n  className?: string;\n  filterPrimaryOptions?: (option: FieldValueOption) => boolean;\n  noFieldsMessage?: string;\n  showAliasField?: boolean;\n  source?: Sources;\n};\n\ntype State = {\n  draggingGrabbedOffset: undefined | {x: number; y: number};\n  draggingIndex: undefined | number;\n  draggingTargetIndex: undefined | number;\n  error: Map<number, string | undefined>;\n  isDragging: boolean;\n  left: undefined | number;\n  top: undefined | number;\n};\n\nconst DRAG_CLASS = 'draggable-item';\nconst GHOST_PADDING = 4;\nconst MAX_COL_COUNT = 20;\n\nenum PlaceholderPosition {\n  TOP,\n  BOTTOM,\n}\n\nclass ColumnEditCollection extends React.Component<Props, State> {\n  state: State = {\n    isDragging: false,\n    draggingIndex: void 0,\n    draggingTargetIndex: void 0,\n    draggingGrabbedOffset: void 0,\n    error: new Map(),\n    left: void 0,\n    top: void 0,\n  };\n\n  componentDidMount() {\n    if (!this.portal) {\n      const portal = document.createElement('div');\n\n      portal.style.position = 'absolute';\n      portal.style.top = '0';\n      portal.style.left = '0';\n      portal.style.zIndex = String(theme.zIndex.modal);\n\n      this.portal = portal;\n\n      document.body.appendChild(this.portal);\n    }\n    this.checkColumnErrors(this.props.columns);\n  }\n\n  componentWillUnmount() {\n    if (this.portal) {\n      document.body.removeChild(this.portal);\n    }\n    this.cleanUpListeners();\n  }\n\n  checkColumnErrors(columns: Column[]) {\n    const error = new Map();\n    for (let i = 0; i < columns.length; i += 1) {\n      const column = columns[i];\n      if (column.kind === 'equation') {\n        const result = parseArithmetic(column.field);\n        if (result.error) {\n          error.set(i, result.error);\n        }\n      }\n    }\n    this.setState({error});\n  }\n\n  previousUserSelect: UserSelectValues | null = null;\n  portal: HTMLElement | null = null;\n  dragGhostRef = React.createRef<HTMLDivElement>();\n\n  keyForColumn(column: Column, isGhost: boolean): string {\n    if (column.kind === 'function') {\n      return [...column.function, isGhost].join(':');\n    }\n    return [...column.field, isGhost].join(':');\n  }\n\n  cleanUpListeners() {\n    if (this.state.isDragging) {\n      window.removeEventListener('mousemove', this.onDragMove);\n      window.removeEventListener('touchmove', this.onDragMove);\n      window.removeEventListener('mouseup', this.onDragEnd);\n      window.removeEventListener('touchend', this.onDragEnd);\n    }\n  }\n\n  // Signal to the parent that a new column has been added.\n  handleAddColumn = () => {\n    const newColumn: Column = {kind: 'field', field: ''};\n    this.props.onChange([...this.props.columns, newColumn]);\n  };\n\n  handleAddEquation = () => {\n    const {organization} = this.props;\n    const newColumn: Column = {kind: FieldValueKind.EQUATION, field: ''};\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.add_equation',\n      eventName: 'Discoverv2: Equation added',\n      organization_id: parseInt(organization.id, 10),\n    });\n    this.props.onChange([...this.props.columns, newColumn]);\n  };\n\n  handleUpdateColumn = (index: number, updatedColumn: Column) => {\n    const newColumns = [...this.props.columns];\n\n    if (updatedColumn.kind === 'equation') {\n      this.setState(prevState => {\n        const error = new Map(prevState.error);\n        error.set(index, parseArithmetic(updatedColumn.field).error);\n        return {\n          ...prevState,\n          error,\n        };\n      });\n    } else {\n      // Update any equations that contain the existing column\n      this.updateEquationFields(newColumns, index, updatedColumn);\n    }\n\n    newColumns.splice(index, 1, updatedColumn);\n    this.props.onChange(newColumns);\n  };\n\n  updateEquationFields = (newColumns: Column[], index: number, updatedColumn: Column) => {\n    const oldColumn = newColumns[index];\n    const existingColumn = generateFieldAsString(newColumns[index]);\n    const updatedColumnString = generateFieldAsString(updatedColumn);\n    if (!isLegalEquationColumn(updatedColumn) || hasDuplicate(newColumns, oldColumn)) {\n      return;\n    }\n    // Find the equations in the list of columns\n    for (let i = 0; i < newColumns.length; i++) {\n      const newColumn = newColumns[i];\n\n      if (newColumn.kind === 'equation') {\n        const result = parseArithmetic(newColumn.field);\n        let newEquation = '';\n        // Track where to continue from, not reconstructing from result so we don't have to worry\n        // about spacing\n        let lastIndex = 0;\n\n        // the parser separates fields & functions, so we only need to check one\n        const fields =\n          oldColumn.kind === 'function' ? result.tc.functions : result.tc.fields;\n\n        // for each field, add the text before it, then the new function and update index\n        // to be where we want to start again\n        for (const field of fields) {\n          if (field.term === existingColumn && lastIndex !== field.location.end.offset) {\n            newEquation +=\n              newColumn.field.substring(lastIndex, field.location.start.offset) +\n              updatedColumnString;\n            lastIndex = field.location.end.offset;\n          }\n        }\n\n        // Add whatever remains to be added from the equation, if existing field wasn't found\n        // add the entire equation\n        newEquation += newColumn.field.substring(lastIndex);\n        newColumns[i] = {\n          kind: 'equation',\n          field: newEquation,\n        };\n      }\n    }\n  };\n\n  removeColumn(index: number) {\n    const newColumns = [...this.props.columns];\n    newColumns.splice(index, 1);\n    this.checkColumnErrors(newColumns);\n    this.props.onChange(newColumns);\n  }\n\n  startDrag(\n    event: React.MouseEvent<HTMLButtonElement> | React.TouchEvent<HTMLButtonElement>,\n    index: number\n  ) {\n    const isDragging = this.state.isDragging;\n    if (isDragging || !['mousedown', 'touchstart'].includes(event.type)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n\n    const top = getPointerPosition(event, 'pageY');\n    const left = getPointerPosition(event, 'pageX');\n\n    // Compute where the user clicked on the drag handle. Avoids the element\n    // jumping from the cursor on mousedown.\n    const draggingElement = Array.from(document.querySelectorAll(`.${DRAG_CLASS}`)).find(\n      n => n.contains(event.currentTarget)\n    )!;\n    const {x, y} = getOffsetOfElement(draggingElement);\n\n    const draggingGrabbedOffset = {\n      x: left - x + GHOST_PADDING,\n      y: top - y + GHOST_PADDING,\n    };\n\n    // prevent the user from selecting things when dragging a column.\n    this.previousUserSelect = setBodyUserSelect({\n      userSelect: 'none',\n      MozUserSelect: 'none',\n      msUserSelect: 'none',\n      webkitUserSelect: 'none',\n    });\n\n    // attach event listeners so that the mouse cursor can drag anywhere\n    window.addEventListener('mousemove', this.onDragMove);\n    window.addEventListener('touchmove', this.onDragMove);\n    window.addEventListener('mouseup', this.onDragEnd);\n    window.addEventListener('touchend', this.onDragEnd);\n\n    this.setState({\n      isDragging: true,\n      draggingIndex: index,\n      draggingTargetIndex: index,\n      draggingGrabbedOffset,\n      top,\n      left,\n    });\n  }\n\n  onDragMove = (event: MouseEvent | TouchEvent) => {\n    const {isDragging, draggingTargetIndex, draggingGrabbedOffset} = this.state;\n\n    if (!isDragging || !['mousemove', 'touchmove'].includes(event.type)) {\n      return;\n    }\n    event.preventDefault();\n    event.stopPropagation();\n\n    const pointerX = getPointerPosition(event, 'pageX');\n    const pointerY = getPointerPosition(event, 'pageY');\n\n    const dragOffsetX = draggingGrabbedOffset?.x ?? 0;\n    const dragOffsetY = draggingGrabbedOffset?.y ?? 0;\n\n    if (this.dragGhostRef.current) {\n      // move the ghost box\n      const ghostDOM = this.dragGhostRef.current;\n      // Adjust so cursor is over the grab handle.\n      ghostDOM.style.left = `${pointerX - dragOffsetX}px`;\n      ghostDOM.style.top = `${pointerY - dragOffsetY}px`;\n    }\n\n    const dragItems = document.querySelectorAll(`.${DRAG_CLASS}`);\n    // Find the item that the ghost is currently over.\n    const targetIndex = Array.from(dragItems).findIndex(dragItem => {\n      const rects = dragItem.getBoundingClientRect();\n      const top = pointerY;\n\n      const thresholdStart = window.scrollY + rects.top;\n      const thresholdEnd = window.scrollY + rects.top + rects.height;\n\n      return top >= thresholdStart && top <= thresholdEnd;\n    });\n\n    // Issue column in Issue widgets are fixed (cannot be moved or deleted)\n    if (targetIndex >= 0 && targetIndex !== draggingTargetIndex) {\n      this.setState({draggingTargetIndex: targetIndex});\n    }\n  };\n\n  isFixedIssueColumn = (columnIndex: number) => {\n    const {source, columns} = this.props;\n    const column = columns[columnIndex];\n    const issueFieldColumnCount = columns.filter(\n      col => col.kind === 'field' && col.field === FieldKey.ISSUE\n    ).length;\n    return (\n      issueFieldColumnCount <= 1 &&\n      source === WidgetType.ISSUE &&\n      column.kind === 'field' &&\n      column.field === FieldKey.ISSUE\n    );\n  };\n\n  onDragEnd = (event: MouseEvent | TouchEvent) => {\n    if (!this.state.isDragging || !['mouseup', 'touchend'].includes(event.type)) {\n      return;\n    }\n\n    const sourceIndex = this.state.draggingIndex;\n    const targetIndex = this.state.draggingTargetIndex;\n    if (typeof sourceIndex !== 'number' || typeof targetIndex !== 'number') {\n      return;\n    }\n\n    // remove listeners that were attached in startColumnDrag\n    this.cleanUpListeners();\n\n    // restore body user-select values\n    if (this.previousUserSelect) {\n      setBodyUserSelect(this.previousUserSelect);\n      this.previousUserSelect = null;\n    }\n\n    // Reorder columns and trigger change.\n    const newColumns = [...this.props.columns];\n    const removed = newColumns.splice(sourceIndex, 1);\n    newColumns.splice(targetIndex, 0, removed[0]);\n    this.checkColumnErrors(newColumns);\n    this.props.onChange(newColumns);\n\n    this.setState({\n      isDragging: false,\n      left: undefined,\n      top: undefined,\n      draggingIndex: undefined,\n      draggingTargetIndex: undefined,\n      draggingGrabbedOffset: undefined,\n    });\n  };\n\n  renderGhost({gridColumns, singleColumn}: {gridColumns: number; singleColumn: boolean}) {\n    const {isDragging, draggingIndex, draggingGrabbedOffset} = this.state;\n\n    const index = draggingIndex;\n    if (typeof index !== 'number' || !isDragging || !this.portal) {\n      return null;\n    }\n    const dragOffsetX = draggingGrabbedOffset?.x ?? 0;\n    const dragOffsetY = draggingGrabbedOffset?.y ?? 0;\n\n    const top = Number(this.state.top) - dragOffsetY;\n    const left = Number(this.state.left) - dragOffsetX;\n    const col = this.props.columns[index];\n\n    const style = {\n      top: `${top}px`,\n      left: `${left}px`,\n    };\n    const ghost = (\n      <Ghost ref={this.dragGhostRef} style={style}>\n        {this.renderItem(col, index, {\n          singleColumn,\n          isGhost: true,\n          gridColumns,\n        })}\n      </Ghost>\n    );\n\n    return createPortal(ghost, this.portal);\n  }\n\n  renderItem(\n    col: Column,\n    i: number,\n    {\n      singleColumn = false,\n      canDelete = true,\n      canDrag = true,\n      isGhost = false,\n      gridColumns = 2,\n      disabled = false,\n    }: {\n      gridColumns: number;\n      singleColumn: boolean;\n      canDelete?: boolean;\n      canDrag?: boolean;\n      disabled?: boolean;\n      isGhost?: boolean;\n    }\n  ) {\n    const {columns, fieldOptions, filterPrimaryOptions, noFieldsMessage, showAliasField} =\n      this.props;\n    const {isDragging, draggingTargetIndex, draggingIndex} = this.state;\n\n    let placeholder: React.ReactNode = null;\n    // Add a placeholder above the target row.\n    if (isDragging && isGhost === false && draggingTargetIndex === i) {\n      placeholder = (\n        <DragPlaceholder\n          key={`placeholder:${this.keyForColumn(col, isGhost)}`}\n          className={DRAG_CLASS}\n        />\n      );\n    }\n\n    // If the current row is the row in the drag ghost return the placeholder\n    // or a hole if the placeholder is elsewhere.\n    if (isDragging && isGhost === false && draggingIndex === i) {\n      return placeholder;\n    }\n\n    const position =\n      Number(draggingTargetIndex) <= Number(draggingIndex)\n        ? PlaceholderPosition.TOP\n        : PlaceholderPosition.BOTTOM;\n\n    return (\n      <React.Fragment key={`${i}:${this.keyForColumn(col, isGhost)}`}>\n        {position === PlaceholderPosition.TOP && placeholder}\n        <RowContainer\n          showAliasField={showAliasField}\n          singleColumn={singleColumn}\n          className={isGhost ? '' : DRAG_CLASS}\n        >\n          {canDrag ? (\n            <DragAndReorderButton\n              aria-label={t('Drag to reorder')}\n              onMouseDown={event => this.startDrag(event, i)}\n              onTouchStart={event => this.startDrag(event, i)}\n              icon={<IconGrabbable size=\"xs\" />}\n              size=\"zero\"\n              borderless\n            />\n          ) : singleColumn && showAliasField ? null : (\n            <span />\n          )}\n          <QueryField\n            fieldOptions={fieldOptions}\n            gridColumns={gridColumns}\n            fieldValue={col}\n            onChange={value => this.handleUpdateColumn(i, value)}\n            error={this.state.error.get(i)}\n            takeFocus={i === this.props.columns.length - 1}\n            otherColumns={columns}\n            shouldRenderTag\n            disabled={disabled}\n            filterPrimaryOptions={filterPrimaryOptions}\n            noFieldsMessage={noFieldsMessage}\n            skipParameterPlaceholder={showAliasField}\n          />\n          {showAliasField && (\n            <AliasField singleColumn={singleColumn}>\n              <AliasInput\n                name=\"alias\"\n                placeholder={t('Alias')}\n                value={col.alias ?? ''}\n                onChange={value => {\n                  this.handleUpdateColumn(i, {\n                    ...col,\n                    alias: value.target.value,\n                  });\n                }}\n              />\n            </AliasField>\n          )}\n          {canDelete || col.kind === 'equation' ? (\n            showAliasField ? (\n              <RemoveButton\n                data-test-id={`remove-column-${i}`}\n                aria-label={t('Remove column')}\n                title={t('Remove column')}\n                onClick={() => this.removeColumn(i)}\n                icon={<IconDelete />}\n                borderless\n              />\n            ) : (\n              <Button\n                data-test-id={`remove-column-${i}`}\n                aria-label={t('Remove column')}\n                onClick={() => this.removeColumn(i)}\n                icon={<IconDelete />}\n                borderless\n              />\n            )\n          ) : singleColumn && showAliasField ? null : (\n            <span />\n          )}\n        </RowContainer>\n        {position === PlaceholderPosition.BOTTOM && placeholder}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const {className, columns, showAliasField, source} = this.props;\n    const canDelete = columns.filter(field => field.kind !== 'equation').length > 1;\n    const canDrag = columns.length > 1;\n    const canAdd = columns.length < MAX_COL_COUNT;\n    const title = canAdd\n      ? undefined\n      : t(\n          `Sorry, you've reached the maximum number of columns (${MAX_COL_COUNT}). Delete columns to add more.`\n        );\n\n    const singleColumn = columns.length === 1;\n\n    // Get the longest number of columns so we can layout the rows.\n    // We always want at least 2 columns.\n    const gridColumns =\n      source === WidgetType.ISSUE\n        ? 1\n        : Math.max(\n            ...columns.map(col =>\n              col.kind === 'function' &&\n              AGGREGATIONS[col.function[0]].parameters.length === 2\n                ? 3\n                : 2\n            )\n          );\n\n    return (\n      <div className={className}>\n        {this.renderGhost({gridColumns, singleColumn})}\n        {!showAliasField && source !== WidgetType.ISSUE && (\n          <RowContainer showAliasField={showAliasField} singleColumn={singleColumn}>\n            <Heading gridColumns={gridColumns}>\n              <StyledSectionHeading>{t('Tag / Field / Function')}</StyledSectionHeading>\n              <StyledSectionHeading>{t('Field Parameter')}</StyledSectionHeading>\n            </Heading>\n          </RowContainer>\n        )}\n        {columns.map((col: Column, i: number) => {\n          // Issue column in Issue widgets are fixed (cannot be changed or deleted)\n          if (this.isFixedIssueColumn(i)) {\n            return this.renderItem(col, i, {\n              singleColumn,\n              canDelete: false,\n              canDrag,\n              gridColumns,\n              disabled: true,\n            });\n          }\n          return this.renderItem(col, i, {\n            singleColumn,\n            canDelete,\n            canDrag,\n            gridColumns,\n          });\n        })}\n        <RowContainer showAliasField={showAliasField} singleColumn={singleColumn}>\n          <Actions showAliasField={showAliasField}>\n            <Button\n              size=\"small\"\n              aria-label={t('Add a Column')}\n              onClick={this.handleAddColumn}\n              title={title}\n              disabled={!canAdd}\n              icon={<IconAdd isCircled size=\"xs\" />}\n            >\n              {t('Add a Column')}\n            </Button>\n            {source !== WidgetType.ISSUE && source !== WidgetType.METRICS && (\n              <Button\n                size=\"small\"\n                aria-label={t('Add an Equation')}\n                onClick={this.handleAddEquation}\n                title={title}\n                disabled={!canAdd}\n                icon={<IconAdd isCircled size=\"xs\" />}\n              >\n                {t('Add an Equation')}\n              </Button>\n            )}\n          </Actions>\n        </RowContainer>\n      </div>\n    );\n  }\n}\n\nconst Actions = styled('div')<{showAliasField?: boolean}>`\n  grid-column: 2 / 3;\n\n  & button {\n    margin-right: ${space(1)};\n  }\n\n  ${p =>\n    p.showAliasField &&\n    css`\n      grid-column: 1/-1;\n    `};\n`;\n\nconst RowContainer = styled('div')<{\n  singleColumn: boolean;\n  showAliasField?: boolean;\n}>`\n  display: grid;\n  grid-template-columns: ${space(3)} 1fr 40px;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  touch-action: none;\n  padding-bottom: ${space(1)};\n\n  ${p =>\n    p.showAliasField &&\n    css`\n      align-items: flex-start;\n      grid-template-columns: ${p.singleColumn ? `1fr` : `${space(3)} 1fr 40px`};\n\n      @media (min-width: ${p.theme.breakpoints[0]}) {\n        grid-template-columns: ${p.singleColumn\n          ? `1fr calc(200px + ${space(1)})`\n          : `${space(3)} 1fr calc(200px + ${space(1)}) 40px`};\n      }\n    `};\n`;\n\nconst Ghost = styled('div')`\n  background: ${p => p.theme.background};\n  display: block;\n  position: absolute;\n  padding: ${GHOST_PADDING}px;\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.15);\n  width: 710px;\n  opacity: 0.8;\n  cursor: grabbing;\n  padding-right: ${space(2)};\n\n  & > ${RowContainer} {\n    padding-bottom: 0;\n  }\n\n  & svg {\n    cursor: grabbing;\n  }\n`;\n\nconst DragPlaceholder = styled('div')`\n  margin: 0 ${space(3)} ${space(1)} ${space(3)};\n  border: 2px dashed ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  height: 41px;\n`;\n\nconst Heading = styled('div')<{gridColumns: number}>`\n  grid-column: 2 / 3;\n\n  /* Emulate the grid used in the column editor rows */\n  display: grid;\n  grid-template-columns: repeat(${p => p.gridColumns}, 1fr);\n  grid-column-gap: ${space(1)};\n`;\n\nconst StyledSectionHeading = styled(SectionHeading)`\n  margin: 0;\n`;\n\nconst AliasInput = styled(Input)`\n  /* Match the height of the select boxes */\n  height: 40px;\n  min-width: 50px;\n`;\n\nconst AliasField = styled('div')<{singleColumn: boolean}>`\n  margin-top: ${space(1)};\n  @media (min-width: ${p => p.theme.breakpoints[0]}) {\n    margin-top: 0;\n    margin-left: ${space(1)};\n  }\n\n  @media (max-width: ${p => p.theme.breakpoints[0]}) {\n    grid-row: 2/2;\n    grid-column: ${p => (p.singleColumn ? '1/-1' : '2/2')};\n  }\n`;\n\nconst RemoveButton = styled(Button)`\n  margin-left: ${space(1)};\n  height: 40px;\n`;\n\nconst DragAndReorderButton = styled(Button)`\n  height: 40px;\n`;\n\nexport default ColumnEditCollection;\n"],"names":["setBodyUserSelect","nextValues","previousValues","userSelect","document","body","style","MozUserSelect","msUserSelect","webkitUserSelect","getPointerPosition","event","property","actual","nativeEvent","window","TouchEvent","targetTouches","MouseEvent","DRAG_CLASS","PlaceholderPosition","ColumnEditCollection","React","isDragging","draggingIndex","draggingTargetIndex","draggingGrabbedOffset","error","Map","left","top","this","props","onChange","columns","kind","field","organization","newColumn","FieldValueKind","trackAnalyticsEvent","eventKey","eventName","organization_id","parseInt","id","index","updatedColumn","newColumns","setState","prevState","set","parseArithmetic","updateEquationFields","splice","oldColumn","existingColumn","generateFieldAsString","updatedColumnString","isLegalEquationColumn","hasDuplicate","i","length","result","newEquation","lastIndex","fields","tc","functions","term","location","end","offset","substring","start","state","includes","type","preventDefault","stopPropagation","pointerX","pointerY","dragOffsetX","x","dragOffsetY","y","dragGhostRef","current","ghostDOM","dragItems","querySelectorAll","targetIndex","Array","from","findIndex","dragItem","rects","getBoundingClientRect","thresholdStart","scrollY","thresholdEnd","height","columnIndex","source","column","filter","col","FieldKey","WidgetType","sourceIndex","cleanUpListeners","previousUserSelect","removed","checkColumnErrors","undefined","componentDidMount","portal","createElement","position","zIndex","String","theme","appendChild","componentWillUnmount","removeChild","keyForColumn","isGhost","function","join","removeEventListener","onDragMove","onDragEnd","removeColumn","startDrag","draggingElement","find","n","contains","currentTarget","getOffsetOfElement","addEventListener","renderGhost","gridColumns","singleColumn","Number","ghost","Ghost","ref","renderItem","createPortal","canDelete","canDrag","disabled","fieldOptions","filterPrimaryOptions","noFieldsMessage","showAliasField","placeholder","DragPlaceholder","className","TOP","BOTTOM","RowContainer","DragAndReorderButton","t","onMouseDown","onTouchStart","icon","size","borderless","fieldValue","value","handleUpdateColumn","get","takeFocus","otherColumns","shouldRenderTag","skipParameterPlaceholder","AliasField","AliasInput","name","alias","target","RemoveButton","title","onClick","render","canAdd","Math","max","map","AGGREGATIONS","parameters","Heading","StyledSectionHeading","isFixedIssueColumn","Actions","handleAddColumn","isCircled","handleAddEquation","space","p","css","breakpoints","background","borderRadius","border","SectionHeading","Input","Button"],"sourceRoot":""}