{"version":3,"file":"chunks/SetupWizard.xxxxxxxxxxxxxxxxxxxx.js","mappings":"6iBAYA,SAASA,EAAT,GAA4C,IAAvB,KAACC,GAAO,GAAe,EAC1C,MAAMC,GAAMC,EAAAA,EAAAA,KACNC,GAAkBC,EAAAA,EAAAA,aAA2BC,IAC5CC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,GAgBzCC,eAAeC,IACb,UACQT,EAAIU,eAAgB,WAAUX,MACpC,MACAO,GAAY,GACZK,OAAOC,aAAaV,EAAgBW,SACpCX,EAAgBW,QAAUF,OAAOG,YAAW,IAAMH,OAAOI,SAAS,MAStE,OA7BAC,EAAAA,EAAAA,YAAU,IACD,KACDd,EAAgBW,SAClBF,OAAOC,aAAaV,EAAgBW,aAK1CG,EAAAA,EAAAA,YAAU,IACD,KACLL,OAAOC,aAAaV,EAAgBW,aAcxCG,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAkBN,OAAOO,YAAYT,EAAe,KAC1D,MAAO,IAAME,OAAOQ,cAAcF,KACjC,KAGD,QAAC,IAAD,WACE,eAAKG,UAAU,YAAf,SACIf,GAOA,eAAKe,UAAU,MAAf,WACE,wBAAKC,EAAAA,EAAAA,GAAE,qDACP,wBAAKA,EAAAA,EAAAA,GAAE,6CACP,QAAC,KAAD,CAAQC,QAAS,IAAMX,OAAOI,QAA9B,UAAwCM,EAAAA,EAAAA,GAAE,2BAT5C,QAAC,IAAD,CAAkBE,MAAO,CAACC,OAAQ,YAAlC,UACE,eAAKJ,UAAU,MAAf,UACE,wBAAKC,EAAAA,EAAAA,GAAE,2CAxCZvB,EAAAA,YAAAA,cAuDT","sources":["webpack:///./app/views/setupWizard/index.tsx"],"sourcesContent":["import {useEffect, useRef, useState} from 'react';\n\nimport Button from 'sentry/components/button';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport ThemeAndStyleProvider from 'sentry/components/themeAndStyleProvider';\nimport {t} from 'sentry/locale';\nimport useApi from 'sentry/utils/useApi';\n\ntype Props = {\n  hash?: boolean | string;\n};\n\nfunction SetupWizard({hash = false}: Props) {\n  const api = useApi();\n  const closeTimeoutRef = useRef<number | undefined>(undefined);\n  const [finished, setFinished] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      if (closeTimeoutRef.current) {\n        window.clearTimeout(closeTimeoutRef.current);\n      }\n    };\n  });\n\n  useEffect(() => {\n    return () => {\n      window.clearTimeout(closeTimeoutRef.current);\n    };\n  });\n\n  async function checkFinished() {\n    try {\n      await api.requestPromise(`/wizard/${hash}/`);\n    } catch {\n      setFinished(true);\n      window.clearTimeout(closeTimeoutRef.current);\n      closeTimeoutRef.current = window.setTimeout(() => window.close(), 10000);\n    }\n  }\n\n  useEffect(() => {\n    const pollingInterval = window.setInterval(checkFinished, 1000);\n    return () => window.clearInterval(pollingInterval);\n  }, []);\n\n  return (\n    <ThemeAndStyleProvider>\n      <div className=\"container\">\n        {!finished ? (\n          <LoadingIndicator style={{margin: '2em auto'}}>\n            <div className=\"row\">\n              <h5>{t('Waiting for wizard to connect')}</h5>\n            </div>\n          </LoadingIndicator>\n        ) : (\n          <div className=\"row\">\n            <h5>{t('Return to your terminal to complete your setup')}</h5>\n            <h5>{t('(This window will close in 10 seconds)')}</h5>\n            <Button onClick={() => window.close()}>{t('Close browser tab')}</Button>\n          </div>\n        )}\n      </div>\n    </ThemeAndStyleProvider>\n  );\n}\n\nexport default SetupWizard;\n"],"names":["SetupWizard","hash","api","useApi","closeTimeoutRef","useRef","undefined","finished","setFinished","useState","async","checkFinished","requestPromise","window","clearTimeout","current","setTimeout","close","useEffect","pollingInterval","setInterval","clearInterval","className","t","onClick","style","margin"],"sourceRoot":""}