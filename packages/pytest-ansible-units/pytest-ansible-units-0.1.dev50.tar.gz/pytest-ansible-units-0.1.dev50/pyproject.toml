[build-system]
build-backend = "setuptools.build_meta"
requires = [
  # Essentials
  "setuptools >= 45",
  # Plugins
  "setuptools_scm[toml] >= 6.2",
  "setuptools_scm_git_archive >= 1.1",
]

[tool]

[tool.black]
line-length = 100

[tool.coverage.report]
show_missing = true

[tool.coverage.run]
branch = true
source_pkgs = ["pytest-ansible-units"]
source = ["share"]

[tool.isort]
force_single_line = true # Force from .. import to be 1 per line, minimizing changes at time of implementation
known_first_party = "ansible_navigator, key_value_store" # No effect at implementation, here anticipating future benefit
lines_after_imports = 2 # Ensures consistency for cases when there's variable vs function/class definitions after imports
lines_between_types = 1 # Separate import/from with 1 line, minimizing changes at time of implementation
no_lines_before = "LOCALFOLDER" # Keeps local imports bundled with first-party
profile = "black" # Avoid conflict with black
skip_glob = [
  "tests/fixtures/common/collections*"
] # Skip ansible content due to ansible-test sanity ruleset

[tool.pylint]

[tool.pylint.format]
max-line-length = 100

[tool.pylint.master]
ignore = [
  "_version.py", # built by setuptools_scm

]
# pylint defaults + fh for with open .. as (f|fh)
good-names = "i,j,k,ex,Run,_,f,fh"
jobs = 0

[tool.pylint.messages_control]
disable = [
  "duplicate-code",
  "fixme",
  "too-few-public-methods",
  "unsubscriptable-object",
]
enable = [
  "useless-suppression", # Identify unneeded pylint disable statements

]

[tool.setuptools_scm]
local_scheme = "no-local-version"
write_to = "src/pytest_ansible_units/_version.py"
