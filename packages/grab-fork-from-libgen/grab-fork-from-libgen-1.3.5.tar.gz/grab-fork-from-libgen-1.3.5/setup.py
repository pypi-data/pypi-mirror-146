# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['grab_fork_from_libgen']

package_data = \
{'': ['*']}

install_requires = \
['beautifulsoup4>=4.10.0,<5.0.0',
 'lxml>=4.8.0,<5.0.0',
 'requests-html>=0.10.0,<0.11.0']

setup_kwargs = {
    'name': 'grab-fork-from-libgen',
    'version': '1.3.5',
    'description': 'A fork from grab-convert-from-libgen',
    'long_description': '# grab-fork-from-libgen\nA fork of grab-convert-from-libgen, which is an easy API/wrapper for searching and downloading books from Libgen.\n\n## Before Installing\n\n**If you want to download books, be sure that you have installed Calibre and have added the necessary `ebook-convert` command to your path!**\n\n[calibre](https://calibre-ebook.com/) is "a powerful and easy to use e-book manager". It\'s also free, open-source, and super easy to use.\n\nYou can install an calibre executable, through MacOS Homebrew, compile from source... pick your poison. They only thing you need to be sure of \nis the command `ebook-convert` is in your PATH.\n\nIf you choose not to do so, you can still use this library for searching on LibraryGenesis and scraping metadata.\n\n## Install\n\nInstall by \n\n```\npip install grab-fork-from-libgen\n```\n\n### Migrating\nIf you already have `grab-convert-from-libgen` installed, run this:\\\n(not required)\n```\npip uninstall grab-convert-from-libgen\n```\n\n\n\n## Fork Overview\n### The following changes are made in this fork:\nYou can now get a book\'s cover. (from 3lib or LibraryRocks)  \nYou can now get a book\'s direct download links. (from LibraryLol)  \nYou can now get a book\'s description (if it has one) (also from LibraryLol).  \nYou can now get pagination info (Check how many pages and if there\'s a next page in your search.)  \nFixed "page" query in Fiction search.  \nSome small fixes for edge cases.\n\nAll of these functions need the original file\'s md5 and topic.  \n(Which are provided by default for every result entry in this version).\n\nAll these features are **OPT-IN**.  \nThis means your code won\'t break when migrating to this fork, and you may use the new functions how you want to.\n\nYou can read the documentation for the new methods below.  \nThis fork was made because some things may not comply with the original\'s author idea for the library.  \nIt\'s also made by a beginner, and while i\'ve tried my best to use DRY, typehints, etc. Some things can still be improved.\n\nOf course, this would not be possible without [Willmeyers](https://github.com/willmeyers/grab-convert-from-libgen) work.\n\n## Quickstart\n\nThe example below shows to grab the first book returned from a search and save it to your current working directory as a pdf.\n\n```python\nfrom grab_fork_from_libgen import LibgenSearch\n\nres = LibgenSearch(\'sci-tech\', q=\'test\')\n\nres.first(convert_to=\'pdf\')\n```\n\nThis is an example the gets and downloads a book that matches a given title.\n\n```python\nfrom grab_fork_from_libgen import LibgenSearch\n\nres = LibgenSearch(\'fiction\', q=\'test\')\n\nres.get(title=\'a title\', save_to=\'.\')\n```\n\nYou must specify a `topic` when creating a search instance. Choices are `fiction` or `sci-tech`.\n\n## Documentation\n\nOnly search parameters marked as required are needed when searching.\n\n### Libgen Non-fiction/Sci-tech\n#### Search Parameters\n\n`q`: The search query (required)\n\n`sort`: Sort results. Choices are `def` (default), `id`, `title`, `author`, `publisher`, `year`\n\n`sortmode`: Ascending or decending. Choices are `ASC` or `DESC`\n\n`column`: The column to search against. Choices are `def` (default), `title`, `author`, `publisher`, `year`, `series`, `ISBN`, `Language`, or `md5`.\n\n`phrase`: Search with mask (word*). Choices are `0` or `1`.\n\n`res`: Results per page. Choices are `25`, `50`, or `100`.\n\n`page`: Page number.\n\n### Libgen Fiction\n#### Search Parameters\n\n`q`: The search query (required)\n\n`criteria`: The column to search against. Choices are `title`, `authors`, or `series`.\n\n`language`: Language code\n\n`format`: File format\n\n`wildcard`: Wildcarded words (word*). Set to `1`.\n\n`page`: Page number\n\n### LibgenSearch\n#### get_results\n\n`get_results(self, pagination: Optional[bool]) -> OrderedDict`\n\nCaches and returns results based on the search parameters the `LibgenSearch` objects was initialized with. \nTakes one optional boolean argument.  \nIf it\'s **True**: Returns a dict, with two values, the first one being:\n```\npagination = {\n    "total_pages": either `int` or `None`\n    "has_next_page": either `True` or `False`\n}\n```\nAnd the second one being an ordered dict, which is your search results:\n```\nresults = {\n    0: "first_book_info"\n    1: "second_book_info"\n    ...\n}\n```\nIf the user sets pagination to **False** or doesn\'t provide any value, this OrderedDict is the only result returned.\n\nYou can easily convert this dict to an ordinary dict instead:\n```\nresults = OrderedDict()\nresults = dict(results)\n```\nThis will remove the index numbers before each book info.\n\nResults are ordered in the same order as they would be displayed on libgen itself with the book\'s id serving as the key.\n\n**Notice**: Using pagination will download Chrominium to your home folder on your first run. e.g.: "~/.pyppeteer/".\nThis only happens once. This happens because LibraryGenesis pagination uses javascript, which is not rendedered by default in the HTML.\n\nIt\'s important to pay attention to this if you use services (like Heroku Free Tier) with limited storage space.\n\n\n#### first\n\n`first(save_to: str = None, convert_to: str = None) -> Dict`\n\nReturns the first book (as a dictionary) from the cached or obtained results.\n\n#### get\n\n`get(save_to: str = None, convert_to: str = None, **filters) -> Dict`\n\nReturns the first book (as a dictionary) from the cached or obtained results that match the given filter parameters.\n\n\n### Metadata\nThis class holds the methods responsible for metadata scraping.\n\n#### Quickstart:\n```python\n# First, import the Metadata class from grab_fork_from_libgen.\nfrom grab_fork_from_libgen import LibgenSearch, Metadata\n\n# ...\n# pagination=True means you opt-in for pagination info.\nmy_results = LibgenSearch.get_results(pagination=True)\n\n\n# Get the values from your search results\nsearch_results = my_results["results"]\n\n# Get the info from the first entry in the results.\nmd5 = search_results[0]["md5"]\ntopic = search_results[0]["topic"]\n\n# Instantiate a new Metadata class.\n# Please read the timeout documentation on the official requests library docs.\nmeta = Metadata(md5, topic, timeout=(9, 18))\n\n# And use the respective methods.\ncover = meta.get_cover()\nd_links_and_desc = meta.get_metadata()\n\n```\n### Metadata\nThe `Metadata` class takes three arguments, one being optional:\\\n\n`md5` = An `string`, a code used to identify the file on LibraryGenesis and others databases.\n\n`topic` = An `string`, the topic of the file on LibraryGenesis\' database. Either `fiction` or `sci-tech`.\n\n`timeout (optional)` = Either `int`, `tuple` or `None`. Defaults to `None`, which equals to infinite timeout.\\\n\nPlease read more about using tuples in the official `requests` \n[docs](https://docs.python-requests.org/en/latest/user/advanced/#timeouts).\n\nIt\'s good practice to always provide a timeout value. As both the cover and download links providers can be down or\nslow at any given moment.\\\nIf they take too long, your code will hang.\n\n#### Metadata - Methods\n`get_cover` returns an `string`, which is the direct link to that file\'s cover image. If no cover is found, returns a\n"No Cover" image used in LibraryRocks.\n\n`get_metadata` returns a `tuple`, the first value being a `dict` of all the direct download links of the file, and the\nsecond value being the file\'s description.   \n\nThrows if no download link is found.\nIf no description is found, returns `None` on the second value instead.\n\nPlease do note that none of these methods are rate-limited. If you abuse them, you will get blocked.\\\nFrom personal experience, `1500ms-2000ms` between each call is probably safe.\n',
    'author': 'Lamarcke',
    'author_email': 'cassiolamarcksilvafreitas@gmail.com',
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/Lamarcke/grab-fork-from-libgen',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.9,<4.0',
}


setup(**setup_kwargs)
