Metadata-Version: 2.1
Name: pycomando
Version: 0.0.2
Summary: Wrapper command
Home-page: https://gitlab.com/doberti/pycomando
Download-URL: http://pypi.python.org/pypi/pycomando/
Author: Daniel Oberti
Author-email: obertidaniel@gmail.com
License: MIT
Platform: any
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: argcomplete
Requires-Dist: rich
Requires-Dist: tabulate
Requires-Dist: redis
Requires-Dist: pandas
Requires-Dist: eland
Requires-Dist: elasticsearch
Requires-Dist: PyYAML

# INTRODUCTION
	pycomando is a Library for creating command line program's command with minimal effort
    pycomando is based on argparse allowing the creation of commands starting from a simple yml file.

    PyPI: https://pypi.python.org/pypi/pycomando/
    GitLab: https://gitlab.com/doberti/pycomando/
    Documentation: https://gitlab.com/doberti/pycomando/-/wikis/Documentation/

# MAINTAINERS:
	- Daniel Oberti (obertidaniel@gmail.com)

# Install this package

### Using a distribuible package:

This project is deployed as a python package. 
Once cloned we advice to install it with pip. 
In order to do that the user needs to open a command prompt, go into the directory containing the project and execute the next command:

```bash
git clone REPO

# creating the dist. package
python setup.py sdist

# using the dist. package
pip install PACKAGE.tar.gz
```

### Using git + pip
```bash
git clone REPO
pip install -e pycomando
```

### Using pypi
```bash
git clone REPO

python setup.py bdist_wheel
python -m pip install -U pip setuptools twine
# (publicando en pypi)
python -m twine upload dist/*

# install the package anywhere:
pip install pycomando
```

# Uninstall this package
```bash
pip uninstall <PACKAGE>
```

# Redis server setup using Docker

pycomando has an option to store commands into a redis db.
You can use docker to deploy it easely as shown below:

Run redis in docker with:
```bash
$ docker run --name redis -p 7010:6379 -d redis:6.2.6
```


# Autocomplete setup

tcsh:
```bash
eval `register-python-argcomplete --shell tcsh pycomando`
```
bash:
```bash
eval "$(register-python-argcomplete pycomando)"
```

# Example

A simple usage example is on the folder "examples" (before run it, you should install this package)

# References

- https://es.acervolima.com/como-publicar-el-paquete-python-en-pypi-usando-el-modulo-twine/
- https://programmerclick.com/article/2710482940/
- https://choosealicense.com/
- https://pypi.org/ (here you must register as well if you want to publish packages)


