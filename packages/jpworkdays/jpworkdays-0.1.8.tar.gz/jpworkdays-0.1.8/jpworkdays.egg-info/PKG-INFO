Metadata-Version: 2.1
Name: jpworkdays
Version: 0.1.8
Summary: Generate Japan's Workdays Taking Account for Public Holidays
Home-page: https://github.com/discus0434/jp-workdays
Author: Kohei Ohno
Author-email: discus0434@gmail.com
License: MIT License
Keywords: Japan,Workdays
Platform: POSIX
Platform: Windows
Platform: Unix
Platform: MacOS
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: Japanese
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft
Classifier: Operating System :: POSIX
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Description-Content-Type: text/markdown
License-File: LICENSE

# JPWorkdays

国民の休日を考慮して営業日を取得するライブラリ

[JPHoliday](https://github.com/Lalcs/jpholiday)からのフォークです。

## Installation

```bash
pip install jpworkdays
```

## Sample Code (JPHolidayからの変更点のみ)

### 指定期間の営業日を取得

```python
import jpworkdays
import datetime

>>> jpworkdays.workdays_between(datetime.date(2021, 1, 1), datetime.date(2021, 1, 5))
[datetime.date(2021, 1, 4), datetime.date(2021, 1, 5)]

# str型での日付入力も受け付けます(YYYY-MM-DD形式)
>>> jpworkdays.workdays_between(datetime.date(2021, 10, 20), "2021-10-26")
[datetime.date(2021, 10, 20), datetime.date(2021, 10, 21), datetime.date(2021, 10, 22), datetime.date(2021, 10, 25), datetime.date(2021, 10, 26)]
```

### 指定した日付以降で指定した数の営業日を取得

```python
>>> jpworkdays.workdays_from_date(datetime.date(2022, 4, 30), 5)
[datetime.date(2022, 5, 2), datetime.date(2022, 5, 6), datetime.date(2022, 5, 9), datetime.date(2022, 5, 10), datetime.date(2022, 5, 11)]

# 同様にstr型での日付入力が可能です(YYYY-MM-DD形式)
>>> jpworkdays.workdays_from_date("2021-12-01", 5)
[datetime.date(2021, 12, 1), datetime.date(2021, 12, 2), datetime.date(2021, 12, 3), datetime.date(2021, 12, 6), datetime.date(2021, 12, 7)]
```


