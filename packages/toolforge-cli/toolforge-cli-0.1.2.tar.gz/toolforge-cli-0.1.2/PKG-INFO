Metadata-Version: 2.1
Name: toolforge-cli
Version: 0.1.2
Summary: Toolforge client
Home-page: https://gerrit.wikimedia.org/r/admin/repos/cloud/toolforge/toolforge-cli
License: GPL-3.0-or-later
Author: David Caro
Author-email: dcaro@wikimedia.org
Requires-Python: >=3.7,<4.0
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: PyYAML (>=6.0,<7.0)
Requires-Dist: click (>=8.0.3,<9.0.0)
Requires-Dist: cryptography (>=36.0.1,<37.0.0)
Requires-Dist: requests (>=2.27.1,<3.0.0)
Requires-Dist: urllib3 (>=1.26.8,<2.0.0)
Project-URL: Repository, https://gerrit.wikimedia.org/r/admin/repos/cloud/toolforge/toolforge-cli
Description-Content-Type: text/markdown

# toolforge-cli

CLI to run toolforge related commands

## Local development environment (guideline)

### Tox on debian testing

Clone the repo including commit hooks (instructions here https://gerrit.wikimedia.org/r/admin/repos/cloud/toolforge/toolforge-cli).

Install tox:
```
~:$ apt install tox
```

Move to the directory where you cloned the repo, and run tox:
```
/path/to/repo/toolforge-cli:$ tox
```

That will run the tests and create a virtualenv that you can use to manually debug anything you need, to enter it:
```
/path/to/repo/toolforge-cli:$ source .tox/py-tests/bin/activate
```

## Building the debian packages
For this you'll need debuild installed:
```
~:$ sudo apt install debuild
```

Install the build dependencies, this requires devscripts and equivs:
```
~:$ sudo apt install devscripts equivs
...
/path/to/repo/toolforge-cli:$ sudo mk-build-deps --install debian/control
```

Or just manually check the `debian/control` file `Build-Dependencies` and install them manually.

Note that it will build a debian package right there, and install it, you can remove it to clean up the dependencies any time.


Now for the actuall build:
```
/path/to/repo/toolforge-cli:$ debuild -uc -us
```

That will end up creating an unsigned package under `../toolforge-cli.*.deb`.
If you want to sign it, you will have to do something like:
```
/path/to/repo/toolforge-cli:$ debuild -kmy@key.org
```

