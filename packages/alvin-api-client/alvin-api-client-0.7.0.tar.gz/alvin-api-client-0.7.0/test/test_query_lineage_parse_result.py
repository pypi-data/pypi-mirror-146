"""
    Alvin

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""


import sys
import unittest

import alvin_api_client
from alvin_api_client.model.alter_parse_result import AlterParseResult
from alvin_api_client.model.bi_platform import BiPlatform
from alvin_api_client.model.delete_parse_result import DeleteParseResult
from alvin_api_client.model.drop_parse_result import DropParseResult
from alvin_api_client.model.known_table import KnownTable
from alvin_api_client.model.looker_query_comment import LookerQueryComment
from alvin_api_client.model.query_comment import QueryComment
from alvin_api_client.model.query_create_mode import QueryCreateMode
from alvin_api_client.model.query_fingerprint import QueryFingerprint
from alvin_api_client.model.query_parse_result import QueryParseResult
from alvin_api_client.model.query_type import QueryType
from alvin_api_client.model.seen_table_at_level import SeenTableAtLevel
from alvin_api_client.model.table_insert import TableInsert
from alvin_api_client.model.table_merge import TableMerge
from alvin_api_client.model.table_update import TableUpdate
from alvin_api_client.model.truncate_result import TruncateResult
globals()['AlterParseResult'] = AlterParseResult
globals()['BiPlatform'] = BiPlatform
globals()['DeleteParseResult'] = DeleteParseResult
globals()['DropParseResult'] = DropParseResult
globals()['KnownTable'] = KnownTable
globals()['LookerQueryComment'] = LookerQueryComment
globals()['QueryComment'] = QueryComment
globals()['QueryCreateMode'] = QueryCreateMode
globals()['QueryFingerprint'] = QueryFingerprint
globals()['QueryParseResult'] = QueryParseResult
globals()['QueryType'] = QueryType
globals()['SeenTableAtLevel'] = SeenTableAtLevel
globals()['TableInsert'] = TableInsert
globals()['TableMerge'] = TableMerge
globals()['TableUpdate'] = TableUpdate
globals()['TruncateResult'] = TruncateResult
from alvin_api_client.model.query_lineage_parse_result import QueryLineageParseResult


class TestQueryLineageParseResult(unittest.TestCase):
    """QueryLineageParseResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testQueryLineageParseResult(self):
        """Test QueryLineageParseResult"""
        # FIXME: construct object with mandatory attributes with example values
        # model = QueryLineageParseResult()  # noqa: E501
        pass


if __name__ == '__main__':
    unittest.main()
